

(function(b, a) {
    a("kendo.core", ["jquery"], b);
}(function() {
    var a = {
        id: "core",
        name: "Core",
        category: "framework",
        description: "The core of the Kendo framework."
    };
    (function(b, aP, aL) {
        var W = aP.kendo = aP.kendo || {
            cultures: {}
        }, D = b.extend, u = b.each, P = b.isArray, at = b.proxy, ae = b.noop, aa = Math, aF, T = aP.JSON || {}, aE = {}, ap = /%/, F = /\{(\d+)(:[^\}]+)?\}/g, j = /(\d+(?:\.?)\d*)px\s*(\d+(?:\.?)\d*)px\s*(\d+(?:\.?)\d*)px\s*(\d+)?/i, ah = /^(\+|-?)\d+(\.?)\d*$/, G = "function", aD = "string", ag = "number", ai = "object", af = "null", i = "boolean", aM = "undefined", M = {}, az = {}, aC = [].slice;
        W.version = "2016.1.112".replace(/^\s+|\s+$/g, "");
        function k() {}
        k.extend = function(aW) {
            var aT = function() {}
            , aV, aY = this, aX = aW && aW.init ? aW.init : function() {
                aY.apply(this, arguments);
            }
            , aU;
            aT.prototype = aY.prototype;
            aU = aX.fn = aX.prototype = new aT();
            for (aV in aW) {
                if (aW[aV] != null  && aW[aV].constructor === Object) {
                    aU[aV] = D(true, {}, aT.prototype[aV], aW[aV]);
                } else {
                    aU[aV] = aW[aV];
                }
            }
            aU.constructor = aX;
            aX.extend = aY.extend;
            return aX;
        }
        ;
        k.prototype._initOptions = function(aT) {
            this.options = r({}, this.options, aT);
        }
        ;
        var R = W.isFunction = function(aT) {
            return typeof aT === "function";
        }
        ;
        var ar = function() {
            this._defaultPrevented = true;
        }
        ;
        var Q = function() {
            return this._defaultPrevented === true;
        }
        ;
        var aj = k.extend({
            init: function() {
                this._events = {};
            },
            bind: function(aT, aX, a1) {
                var a3 = this, aZ, aU = typeof aT === aD ? [aT] : aT, a0, a2, aW, aY = typeof aX === G, aV;
                if (aX === aL) {
                    for (aZ in aT) {
                        a3.bind(aZ, aT[aZ]);
                    }
                    return a3;
                }
                for (aZ = 0,
                a0 = aU.length; 
                aZ < a0; 
                aZ++) {
                    aT = aU[aZ];
                    aW = aY ? aX : aX[aT];
                    if (aW) {
                        if (a1) {
                            a2 = aW;
                            aW = function() {
                                a3.unbind(aT, aW);
                                a2.apply(a3, arguments);
                            }
                            ;
                            aW.original = a2;
                        }
                        aV = a3._events[aT] = a3._events[aT] || [];
                        aV.push(aW);
                    }
                }
                return a3;
            },
            one: function(aT, aU) {
                return this.bind(aT, aU, true);
            },
            first: function(aT, aX) {
                var a1 = this, aZ, aU = typeof aT === aD ? [aT] : aT, a0, aW, aY = typeof aX === G, aV;
                for (aZ = 0,
                a0 = aU.length; 
                aZ < a0; 
                aZ++) {
                    aT = aU[aZ];
                    aW = aY ? aX : aX[aT];
                    if (aW) {
                        aV = a1._events[aT] = a1._events[aT] || [];
                        aV.unshift(aW);
                    }
                }
                return a1;
            },
            trigger: function(aU, aT) {
                var aY = this, aV = aY._events[aU], aW, aX;
                if (aV) {
                    aT = aT || {};
                    aT.sender = aY;
                    aT._defaultPrevented = false;
                    aT.preventDefault = ar;
                    aT.isDefaultPrevented = Q;
                    aV = aV.slice();
                    for (aW = 0,
                    aX = aV.length; 
                    aW < aX; 
                    aW++) {
                        aV[aW].call(aY, aT);
                    }
                    return aT._defaultPrevented === true;
                }
                return false;
            },
            unbind: function(aT, aV) {
                var aX = this, aU = aX._events[aT], aW;
                if (aT === aL) {
                    aX._events = {};
                } else {
                    if (aU) {
                        if (aV) {
                            for (aW = aU.length - 1; 
                            aW >= 0; 
                            aW--) {
                                if (aU[aW] === aV || aU[aW].original === aV) {
                                    aU.splice(aW, 1);
                                }
                            }
                        } else {
                            aX._events[aT] = [];
                        }
                    }
                }
                return aX;
            }
        });
        function l(aU, aW) {
            if (aW) {
                return "'" + aU.split("'").join("\\'").split('\\"').join('\\\\\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\t/g, "\\t") + "'";
            } else {
                var aT = aU.charAt(0)
                  , aV = aU.substring(1);
                if (aT === "=") {
                    return "+(" + aV + ")+";
                } else {
                    if (aT === ":") {
                        return "+$kendoHtmlEncode(" + aV + ")+";
                    } else {
                        return ";" + aU + ";$kendoOutput+=";
                    }
                }
            }
        }
        var h = /^\w+/
          , w = /\$\{([^}]*)\}/g
          , x = /\\\}/g
          , o = /__CURLY__/g
          , y = /\\#/g
          , aA = /__SHARP__/g
          , aS = ["", "0", "00", "000", "0000"];
        aF = {
            paramName: "data",
            useWithBlock: true,
            render: function(aX, aT) {
                var aV, aW, aU = "";
                for (aV = 0,
                aW = aT.length; 
                aV < aW; 
                aV++) {
                    aU += aX(aT[aV]);
                }
                return aU;
            },
            compile: function(a2, aY) {
                var a1 = D({}, this, aY), aZ = a1.paramName, aT = aZ.match(h)[0], a3 = a1.useWithBlock, aW = "var $kendoOutput, $kendoHtmlEncode = kendo.htmlEncode;", aV, a0, aX;
                if (R(a2)) {
                    return a2;
                }
                aW += a3 ? "with(" + aZ + "){" : "";
                aW += "$kendoOutput=";
                a0 = a2.replace(x, "__CURLY__").replace(w, "#=$kendoHtmlEncode($1)#").replace(o, "}").replace(y, "__SHARP__").split("#");
                for (aX = 0; 
                aX < a0.length; 
                aX++) {
                    aW += l(a0[aX], aX % 2 === 0);
                }
                aW += a3 ? ";}" : ";";
                aW += "return $kendoOutput;";
                aW = aW.replace(aA, "#");
                try {
                    aV = new Function(aT,aW);
                    aV._slotCount = Math.floor(a0.length / 2);
                    return aV;
                } catch (aU) {
                    throw new Error(W.format("Invalid template:'{0}' Generated code:'{1}'", a2, aW));
                }
            }
        };
        function al(aV, aT, aU) {
            aV = aV + "";
            aT = aT || 2;
            aU = aT - aV.length;
            if (aU) {
                return aS[aT].substring(0, aU) + aV;
            }
            return aV;
        }
        (function() {
            var aT = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, aU, aV, aW = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            }, aY, a0 = {}.toString;
            if (typeof Date.prototype.toJSON !== G) {
                Date.prototype.toJSON = function() {
                    var a1 = this;
                    return isFinite(a1.valueOf()) ? al(a1.getUTCFullYear(), 4) + "-" + al(a1.getUTCMonth() + 1) + "-" + al(a1.getUTCDate()) + "T" + al(a1.getUTCHours()) + ":" + al(a1.getUTCMinutes()) + ":" + al(a1.getUTCSeconds()) + "Z" : null ;
                }
                ;
                String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
                    return this.valueOf();
                }
                ;
            }
            function aX(a1) {
                aT.lastIndex = 0;
                return aT.test(a1) ? '"' + a1.replace(aT, function(a2) {
                    var a3 = aW[a2];
                    return typeof a3 === aD ? a3 : "\\u" + ("0000" + a2.charCodeAt(0).toString(16)).slice(-4);
                }) + '"' : '"' + a1 + '"';
            }
            function aZ(a4, a1) {
                var a2, a3, a9, a5, a6 = aU, a7, ba = a1[a4], a8;
                if (ba && typeof ba === ai && typeof ba.toJSON === G) {
                    ba = ba.toJSON(a4);
                }
                if (typeof aY === G) {
                    ba = aY.call(a1, a4, ba);
                }
                a8 = typeof ba;
                if (a8 === aD) {
                    return aX(ba);
                } else {
                    if (a8 === ag) {
                        return isFinite(ba) ? String(ba) : af;
                    } else {
                        if (a8 === i || a8 === af) {
                            return String(ba);
                        } else {
                            if (a8 === ai) {
                                if (!ba) {
                                    return af;
                                }
                                aU += aV;
                                a7 = [];
                                if (a0.apply(ba) === "[object Array]") {
                                    a5 = ba.length;
                                    for (a2 = 0; 
                                    a2 < a5; 
                                    a2++) {
                                        a7[a2] = aZ(a2, ba) || af;
                                    }
                                    a9 = a7.length === 0 ? "[]" : aU ? "[\n" + aU + a7.join(",\n" + aU) + "\n" + a6 + "]" : "[" + a7.join(",") + "]";
                                    aU = a6;
                                    return a9;
                                }
                                if (aY && typeof aY === ai) {
                                    a5 = aY.length;
                                    for (a2 = 0; 
                                    a2 < a5; 
                                    a2++) {
                                        if (typeof aY[a2] === aD) {
                                            a3 = aY[a2];
                                            a9 = aZ(a3, ba);
                                            if (a9) {
                                                a7.push(aX(a3) + (aU ? ": " : ":") + a9);
                                            }
                                        }
                                    }
                                } else {
                                    for (a3 in ba) {
                                        if (Object.hasOwnProperty.call(ba, a3)) {
                                            a9 = aZ(a3, ba);
                                            if (a9) {
                                                a7.push(aX(a3) + (aU ? ": " : ":") + a9);
                                            }
                                        }
                                    }
                                }
                                a9 = a7.length === 0 ? "{}" : aU ? "{\n" + aU + a7.join(",\n" + aU) + "\n" + a6 + "}" : "{" + a7.join(",") + "}";
                                aU = a6;
                                return a9;
                            }
                        }
                    }
                }
            }
            if (typeof T.stringify !== G) {
                T.stringify = function(a4, a2, a3) {
                    var a1;
                    aU = "";
                    aV = "";
                    if (typeof a3 === ag) {
                        for (a1 = 0; 
                        a1 < a3; 
                        a1 += 1) {
                            aV += " ";
                        }
                    } else {
                        if (typeof a3 === aD) {
                            aV = a3;
                        }
                    }
                    aY = a2;
                    if (a2 && typeof a2 !== G && (typeof a2 !== ai || typeof a2.length !== ag)) {
                        throw new Error("JSON.stringify");
                    }
                    return aZ("", {
                        "": a4
                    });
                }
                ;
            }
        }());
        (function() {
            var aV = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|"[^"]*"|'[^']*'/g
              , a9 = /^(n|c|p|e)(\d*)$/i
              , a3 = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g
              , aU = /\,/g
              , aW = ""
              , a6 = "."
              , aT = ","
              , a8 = "#"
              , bb = "0"
              , a5 = "??"
              , aX = "en-US"
              , a4 = {}.toString;
            W.cultures["en-US"] = {
                name: aX,
                numberFormat: {
                    pattern: ["-n"],
                    decimals: 2,
                    ",": ",",
                    ".": ".",
                    groupSize: [3],
                    percent: {
                        pattern: ["-n %", "n %"],
                        decimals: 2,
                        ",": ",",
                        ".": ".",
                        groupSize: [3],
                        symbol: "%"
                    },
                    currency: {
                        name: "US Dollar",
                        abbr: "USD",
                        pattern: ["($n)", "$n"],
                        decimals: 2,
                        ",": ",",
                        ".": ".",
                        groupSize: [3],
                        symbol: "$"
                    }
                },
                calendars: {
                    standard: {
                        days: {
                            names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                            namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                            namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                        },
                        months: {
                            names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                            namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        },
                        AM: ["AM", "am", "AM"],
                        PM: ["PM", "pm", "PM"],
                        patterns: {
                            d: "M/d/yyyy",
                            D: "dddd, MMMM dd, yyyy",
                            F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                            g: "M/d/yyyy h:mm tt",
                            G: "M/d/yyyy h:mm:ss tt",
                            m: "MMMM dd",
                            M: "MMMM dd",
                            s: "yyyy'-'MM'-'ddTHH':'mm':'ss",
                            t: "h:mm tt",
                            T: "h:mm:ss tt",
                            u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'",
                            y: "MMMM, yyyy",
                            Y: "MMMM, yyyy"
                        },
                        "/": "/",
                        ":": ":",
                        firstDay: 0,
                        twoDigitYearMax: 2029
                    }
                }
            };
            function aY(bc) {
                if (bc) {
                    if (bc.numberFormat) {
                        return bc;
                    }
                    if (typeof bc === aD) {
                        var bd = W.cultures;
                        return bd[bc] || bd[bc.split("-")[0]] || null ;
                    }
                    return null ;
                }
                return null ;
            }
            function a1(bc) {
                if (bc) {
                    bc = aY(bc);
                }
                return bc || W.cultures.current;
            }
            W.culture = function(bd) {
                var be = W.cultures, bc;
                if (bd !== aL) {
                    bc = aY(bd) || be[aX];
                    bc.calendar = bc.calendars.standard;
                    be.current = bc;
                } else {
                    return be.current;
                }
            }
            ;
            W.findCulture = aY;
            W.getCulture = a1;
            W.culture(aX);
            function aZ(be, bg, bd) {
                bd = a1(bd);
                var bc = bd.calendars.standard
                  , bf = bc.days
                  , bh = bc.months;
                bg = bc.patterns[bg] || bg;
                return bg.replace(aV, function(bi) {
                    var bj;
                    var bk;
                    var bl;
                    if (bi === "d") {
                        bk = be.getDate();
                    } else {
                        if (bi === "dd") {
                            bk = al(be.getDate());
                        } else {
                            if (bi === "ddd") {
                                bk = bf.namesAbbr[be.getDay()];
                            } else {
                                if (bi === "dddd") {
                                    bk = bf.names[be.getDay()];
                                } else {
                                    if (bi === "M") {
                                        bk = be.getMonth() + 1;
                                    } else {
                                        if (bi === "MM") {
                                            bk = al(be.getMonth() + 1);
                                        } else {
                                            if (bi === "MMM") {
                                                bk = bh.namesAbbr[be.getMonth()];
                                            } else {
                                                if (bi === "MMMM") {
                                                    bk = bh.names[be.getMonth()];
                                                } else {
                                                    if (bi === "yy") {
                                                        bk = al(be.getFullYear() % 100);
                                                    } else {
                                                        if (bi === "yyyy") {
                                                            bk = al(be.getFullYear(), 4);
                                                        } else {
                                                            if (bi === "h") {
                                                                bk = be.getHours() % 12 || 12;
                                                            } else {
                                                                if (bi === "hh") {
                                                                    bk = al(be.getHours() % 12 || 12);
                                                                } else {
                                                                    if (bi === "H") {
                                                                        bk = be.getHours();
                                                                    } else {
                                                                        if (bi === "HH") {
                                                                            bk = al(be.getHours());
                                                                        } else {
                                                                            if (bi === "m") {
                                                                                bk = be.getMinutes();
                                                                            } else {
                                                                                if (bi === "mm") {
                                                                                    bk = al(be.getMinutes());
                                                                                } else {
                                                                                    if (bi === "s") {
                                                                                        bk = be.getSeconds();
                                                                                    } else {
                                                                                        if (bi === "ss") {
                                                                                            bk = al(be.getSeconds());
                                                                                        } else {
                                                                                            if (bi === "f") {
                                                                                                bk = aa.floor(be.getMilliseconds() / 100);
                                                                                            } else {
                                                                                                if (bi === "ff") {
                                                                                                    bk = be.getMilliseconds();
                                                                                                    if (bk > 99) {
                                                                                                        bk = aa.floor(bk / 10);
                                                                                                    }
                                                                                                    bk = al(bk);
                                                                                                } else {
                                                                                                    if (bi === "fff") {
                                                                                                        bk = al(be.getMilliseconds(), 3);
                                                                                                    } else {
                                                                                                        if (bi === "tt") {
                                                                                                            bk = be.getHours() < 12 ? bc.AM[0] : bc.PM[0];
                                                                                                        } else {
                                                                                                            if (bi === "zzz") {
                                                                                                                bj = be.getTimezoneOffset();
                                                                                                                bl = bj < 0;
                                                                                                                bk = aa.abs(bj / 60).toString().split(".")[0];
                                                                                                                bj = aa.abs(bj) - bk * 60;
                                                                                                                bk = (bl ? "+" : "-") + al(bk);
                                                                                                                bk += ":" + al(bj);
                                                                                                            } else {
                                                                                                                if (bi === "zz" || bi === "z") {
                                                                                                                    bk = be.getTimezoneOffset() / 60;
                                                                                                                    bl = bk < 0;
                                                                                                                    bk = aa.abs(bk).toString().split(".")[0];
                                                                                                                    bk = (bl ? "+" : "-") + (bi === "zz" ? al(bk) : bk);
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return bk !== aL ? bk : bi.slice(1, bi.length - 1);
                });
            }
            function a0(bz, bj, bd) {
                bd = a1(bd);
                var bA = bd.numberFormat, bg = bA[a6], bD = bA.decimals, bB = bA.pattern[0], bx = [], bI, bu, bv, bf, bk, by = bz < 0, bs, bl, bt, bm, bE = aW, bJ = aW, br, bw, bc, bn, bo, bh, bF, bK, bq, bp, bC, be, bH, bG = -1, bi;
                if (bz === aL) {
                    return aW;
                }
                if (!isFinite(bz)) {
                    return bz;
                }
                if (!bj) {
                    return bd.name.length ? bz.toLocaleString() : bz.toString();
                }
                bk = a9.exec(bj);
                if (bk) {
                    bj = bk[1].toLowerCase();
                    bu = bj === "c";
                    bv = bj === "p";
                    if (bu || bv) {
                        bA = bu ? bA.currency : bA.percent;
                        bg = bA[a6];
                        bD = bA.decimals;
                        bI = bA.symbol;
                        bB = bA.pattern[by ? 0 : 1];
                    }
                    bf = bk[2];
                    if (bf) {
                        bD = +bf;
                    }
                    if (bj === "e") {
                        return bf ? bz.toExponential(bD) : bz.toExponential();
                    }
                    if (bv) {
                        bz *= 100;
                    }
                    bz = a7(bz, bD);
                    by = bz < 0;
                    bz = bz.split(a6);
                    bs = bz[0];
                    bl = bz[1];
                    if (by) {
                        bs = bs.substring(1);
                    }
                    bJ = a2(bs, 0, bs.length, bA);
                    if (bl) {
                        bJ += bg + bl;
                    }
                    if (bj === "n" && !by) {
                        return bJ;
                    }
                    bz = aW;
                    for (br = 0,
                    bw = bB.length; 
                    br < bw; 
                    br++) {
                        bc = bB.charAt(br);
                        if (bc === "n") {
                            bz += bJ;
                        } else {
                            if (bc === "$" || bc === "%") {
                                bz += bI;
                            } else {
                                bz += bc;
                            }
                        }
                    }
                    return bz;
                }
                if (by) {
                    bz = -bz;
                }
                if (bj.indexOf("'") > -1 || bj.indexOf('"') > -1 || bj.indexOf("\\") > -1) {
                    bj = bj.replace(a3, function(bM) {
                        var bN = bM.charAt(0).replace("\\", "")
                          , bL = bM.slice(1).replace(bN, "");
                        bx.push(bL);
                        return a5;
                    });
                }
                bj = bj.split(";");
                if (by && bj[1]) {
                    bj = bj[1];
                    bo = true;
                } else {
                    if (bz === 0) {
                        bj = bj[2] || bj[0];
                        if (bj.indexOf(a8) == -1 && bj.indexOf(bb) == -1) {
                            return bj;
                        }
                    } else {
                        bj = bj[0];
                    }
                }
                bC = bj.indexOf("%");
                be = bj.indexOf("$");
                bv = bC != -1;
                bu = be != -1;
                if (bv) {
                    bz *= 100;
                }
                if (bu && bj[be - 1] === "\\") {
                    bj = bj.split("\\").join("");
                    bu = false;
                }
                if (bu || bv) {
                    bA = bu ? bA.currency : bA.percent;
                    bg = bA[a6];
                    bD = bA.decimals;
                    bI = bA.symbol;
                }
                bn = bj.indexOf(aT) > -1;
                if (bn) {
                    bj = bj.replace(aU, aW);
                }
                bh = bj.indexOf(a6);
                bw = bj.length;
                if (bh != -1) {
                    bl = bz.toString().split("e");
                    if (bl[1]) {
                        bl = a7(bz, Math.abs(bl[1]));
                    } else {
                        bl = bl[0];
                    }
                    bl = bl.split(a6)[1] || aW;
                    bK = bj.lastIndexOf(bb) - bh;
                    bF = bj.lastIndexOf(a8) - bh;
                    bq = bK > -1;
                    bp = bF > -1;
                    br = bl.length;
                    if (!bq && !bp) {
                        bj = bj.substring(0, bh) + bj.substring(bh + 1);
                        bw = bj.length;
                        bh = -1;
                        br = 0;
                    }
                    if (bq && bK > bF) {
                        br = bK;
                    } else {
                        if (bF > bK) {
                            if (bp && br > bF) {
                                br = bF;
                            } else {
                                if (bq && br < bK) {
                                    br = bK;
                                }
                            }
                        }
                    }
                    if (br > -1) {
                        bz = a7(bz, br);
                    }
                } else {
                    bz = a7(bz);
                }
                bF = bj.indexOf(a8);
                bH = bK = bj.indexOf(bb);
                if (bF == -1 && bK != -1) {
                    bG = bK;
                } else {
                    if (bF != -1 && bK == -1) {
                        bG = bF;
                    } else {
                        bG = bF > bK ? bK : bF;
                    }
                }
                bF = bj.lastIndexOf(a8);
                bK = bj.lastIndexOf(bb);
                if (bF == -1 && bK != -1) {
                    bi = bK;
                } else {
                    if (bF != -1 && bK == -1) {
                        bi = bF;
                    } else {
                        bi = bF > bK ? bF : bK;
                    }
                }
                if (bG == bw) {
                    bi = bG;
                }
                if (bG != -1) {
                    bJ = bz.toString().split(a6);
                    bs = bJ[0];
                    bl = bJ[1] || aW;
                    bt = bs.length;
                    bm = bl.length;
                    if (by && bz * -1 >= 0) {
                        by = false;
                    }
                    bz = bj.substring(0, bG);
                    if (by && !bo) {
                        bz += "-";
                    }
                    for (br = bG; 
                    br < bw; 
                    br++) {
                        bc = bj.charAt(br);
                        if (bh == -1) {
                            if (bi - br < bt) {
                                bz += bs;
                                break;
                            }
                        } else {
                            if (bK != -1 && bK < br) {
                                bE = aW;
                            }
                            if (bh - br <= bt && bh - br > -1) {
                                bz += bs;
                                br = bh;
                            }
                            if (bh === br) {
                                bz += (bl ? bg : aW) + bl;
                                br += bi - bh + 1;
                                continue;
                            }
                        }
                        if (bc === bb) {
                            bz += bc;
                            bE = bc;
                        } else {
                            if (bc === a8) {
                                bz += bE;
                            }
                        }
                    }
                    if (bn) {
                        bz = a2(bz, bG, bi, bA);
                    }
                    if (bi >= bG) {
                        bz += bj.substring(bi + 1);
                    }
                    if (bu || bv) {
                        bJ = aW;
                        for (br = 0,
                        bw = bz.length; 
                        br < bw; 
                        br++) {
                            bc = bz.charAt(br);
                            bJ += bc === "$" || bc === "%" ? bI : bc;
                        }
                        bz = bJ;
                    }
                    bw = bx.length;
                    if (bw) {
                        for (br = 0; 
                        br < bw; 
                        br++) {
                            bz = bz.replace(a5, bx[br]);
                        }
                    }
                }
                return bz;
            }
            var a2 = function(bk, bn, bd, bl) {
                var bc = bk.indexOf(bl[a6]);
                var bf = bl.groupSize.slice();
                var be = bf.shift();
                var bh, bi;
                var bg, bm, bo;
                var bj;
                bd = bc !== -1 ? bc : bd + 1;
                bh = bk.substring(bn, bd);
                bi = bh.length;
                if (bi >= be) {
                    bg = bi;
                    bm = [];
                    while (bg > -1) {
                        bo = bh.substring(bg - be, bg);
                        if (bo) {
                            bm.push(bo);
                        }
                        bg -= be;
                        bj = bf.shift();
                        be = bj !== aL ? bj : be;
                        if (be === 0) {
                            bm.push(bh.substring(0, bg));
                            break;
                        }
                    }
                    bh = bm.reverse().join(bl[aT]);
                    bk = bk.substring(0, bn) + bh + bk.substring(bd);
                }
                return bk;
            }
            ;
            var a7 = function(bd, bc) {
                bc = bc || 0;
                bd = bd.toString().split("e");
                bd = Math.round(+(bd[0] + "e" + (bd[1] ? +bd[1] + bc : bc)));
                bd = bd.toString().split("e");
                bd = +(bd[0] + "e" + (bd[1] ? +bd[1] - bc : -bc));
                return bd.toFixed(bc);
            }
            ;
            var ba = function(be, bd, bc) {
                if (bd) {
                    if (a4.call(be) === "[object Date]") {
                        return aZ(be, bd, bc);
                    } else {
                        if (typeof be === ag) {
                            return a0(be, bd, bc);
                        }
                    }
                }
                return be !== aL ? be : "";
            }
            ;
            W.format = function(bc) {
                var bd = arguments;
                return bc.replace(F, function(bf, be, bg) {
                    var bh = bd[parseInt(be, 10) + 1];
                    return ba(bh, bg ? bg.substring(1) : "");
                });
            }
            ;
            W._extractFormat = function(bc) {
                if (bc.slice(0, 3) === "{0:") {
                    bc = bc.slice(3, bc.length - 1);
                }
                return bc;
            }
            ;
            W._activeElement = function() {
                try {
                    return document.activeElement;
                } catch (bc) {
                    return document.documentElement.activeElement;
                }
            }
            ;
            W._round = a7;
            W.toString = ba;
        }());
        (function() {
            var a2 = /\u00A0/g
              , aW = /[eE][\-+]?[0-9]+/
              , a9 = /[+|\-]\d{1,2}/
              , aY = /[+|\-]\d{1,2}:?\d{2}/
              , aU = /^\/Date\((.*?)\)\/$/
              , a5 = /[+-]\d*/
              , aX = ["G", "g", "d", "F", "D", "y", "m", "T", "t"]
              , a3 = {
                2: /^\d{1,2}/,
                3: /^\d{1,3}/,
                4: /^\d{4}/
            }
              , a4 = {}.toString;
            function a6(bc, bb, ba) {
                return !(bc >= bb && bc <= ba);
            }
            function aV(ba) {
                return ba.charAt(0);
            }
            function a1(ba) {
                return b.map(ba, aV);
            }
            function aT(ba, bb) {
                if (!bb && ba.getHours() === 23) {
                    ba.setHours(ba.getHours() + 2);
                }
            }
            function aZ(bb) {
                var bc = 0
                  , bd = bb.length
                  , ba = [];
                for (; 
                bc < bd; 
                bc++) {
                    ba[bc] = (bb[bc] + "").toLowerCase();
                }
                return ba;
            }
            function a0(ba) {
                var bb = {}, bc;
                for (bc in ba) {
                    bb[bc] = aZ(ba[bc]);
                }
                return bb;
            }
            function a7(bF, bj, bf) {
                if (!bF) {
                    return null ;
                }
                var bs = function(bJ) {
                    var bI = 0;
                    while (bj[bp] === bJ) {
                        bI++;
                        bp++;
                    }
                    if (bI > 0) {
                        bp -= 1;
                    }
                    return bI;
                }
                , bl = function(bK) {
                    var bJ = a3[bK] || new RegExp("^\\d{1," + bK + "}")
                      , bI = bF.substr(bG, bK).match(bJ);
                    if (bI) {
                        bI = bI[0];
                        bG += bI.length;
                        return parseInt(bI, 10);
                    }
                    return null ;
                }
                , bk = function(bP, bK) {
                    var bI = 0, bJ = bP.length, bN, bO, bM = 0, bL = 0, bQ;
                    for (; 
                    bI < bJ; 
                    bI++) {
                        bN = bP[bI];
                        bO = bN.length;
                        bQ = bF.substr(bG, bO);
                        if (bK) {
                            bQ = bQ.toLowerCase();
                        }
                        if (bQ == bN && bO > bM) {
                            bM = bO;
                            bL = bI;
                        }
                    }
                    if (bM) {
                        bG += bM;
                        return bL + 1;
                    }
                    return null ;
                }
                , bd = function() {
                    var bI = false;
                    if (bF.charAt(bG) === bj[bp]) {
                        bG++;
                        bI = true;
                    }
                    return bI;
                }
                , bb = bf.calendars.standard, bH = null , by = null , bh = null , bn = null , bw = null , bC = null , bv = null , bp = 0, bG = 0, br = false, bg = new Date(), bD = bb.twoDigitYearMax || 2029, bi = bg.getFullYear(), bc, be, bq, bz, bB, bE, bu, ba, bA, bo, bx, bm, bt;
                if (!bj) {
                    bj = "d";
                }
                bz = bb.patterns[bj];
                if (bz) {
                    bj = bz;
                }
                bj = bj.split("");
                bq = bj.length;
                for (; 
                bp < bq; 
                bp++) {
                    bc = bj[bp];
                    if (br) {
                        if (bc === "'") {
                            br = false;
                        } else {
                            bd();
                        }
                    } else {
                        if (bc === "d") {
                            be = bs("d");
                            if (!bb._lowerDays) {
                                bb._lowerDays = a0(bb.days);
                            }
                            if (bh !== null  && be > 2) {
                                continue;
                            }
                            bh = be < 3 ? bl(2) : bk(bb._lowerDays[be == 3 ? "namesAbbr" : "names"], true);
                            if (bh === null  || a6(bh, 1, 31)) {
                                return null ;
                            }
                        } else {
                            if (bc === "M") {
                                be = bs("M");
                                if (!bb._lowerMonths) {
                                    bb._lowerMonths = a0(bb.months);
                                }
                                by = be < 3 ? bl(2) : bk(bb._lowerMonths[be == 3 ? "namesAbbr" : "names"], true);
                                if (by === null  || a6(by, 1, 12)) {
                                    return null ;
                                }
                                by -= 1;
                            } else {
                                if (bc === "y") {
                                    be = bs("y");
                                    bH = bl(be);
                                    if (bH === null ) {
                                        return null ;
                                    }
                                    if (be == 2) {
                                        if (typeof bD === "string") {
                                            bD = bi + parseInt(bD, 10);
                                        }
                                        bH = bi - bi % 100 + bH;
                                        if (bH > bD) {
                                            bH -= 100;
                                        }
                                    }
                                } else {
                                    if (bc === "h") {
                                        bs("h");
                                        bn = bl(2);
                                        if (bn == 12) {
                                            bn = 0;
                                        }
                                        if (bn === null  || a6(bn, 0, 11)) {
                                            return null ;
                                        }
                                    } else {
                                        if (bc === "H") {
                                            bs("H");
                                            bn = bl(2);
                                            if (bn === null  || a6(bn, 0, 23)) {
                                                return null ;
                                            }
                                        } else {
                                            if (bc === "m") {
                                                bs("m");
                                                bw = bl(2);
                                                if (bw === null  || a6(bw, 0, 59)) {
                                                    return null ;
                                                }
                                            } else {
                                                if (bc === "s") {
                                                    bs("s");
                                                    bC = bl(2);
                                                    if (bC === null  || a6(bC, 0, 59)) {
                                                        return null ;
                                                    }
                                                } else {
                                                    if (bc === "f") {
                                                        be = bs("f");
                                                        bt = bF.substr(bG, be).match(a3[3]);
                                                        bv = bl(be);
                                                        if (bv !== null ) {
                                                            bv = parseFloat("0." + bt[0], 10);
                                                            bv = W._round(bv, 3);
                                                            bv *= 1000;
                                                        }
                                                        if (bv === null  || a6(bv, 0, 999)) {
                                                            return null ;
                                                        }
                                                    } else {
                                                        if (bc === "t") {
                                                            be = bs("t");
                                                            ba = bb.AM;
                                                            bA = bb.PM;
                                                            if (be === 1) {
                                                                ba = a1(ba);
                                                                bA = a1(bA);
                                                            }
                                                            bB = bk(bA);
                                                            if (!bB && !bk(ba)) {
                                                                return null ;
                                                            }
                                                        } else {
                                                            if (bc === "z") {
                                                                bE = true;
                                                                be = bs("z");
                                                                if (bF.substr(bG, 1) === "Z") {
                                                                    bd();
                                                                    continue;
                                                                }
                                                                bu = bF.substr(bG, 6).match(be > 2 ? aY : a9);
                                                                if (!bu) {
                                                                    return null ;
                                                                }
                                                                bu = bu[0].split(":");
                                                                bo = bu[0];
                                                                bx = bu[1];
                                                                if (!bx && bo.length > 3) {
                                                                    bG = bo.length - 2;
                                                                    bx = bo.substring(bG);
                                                                    bo = bo.substring(0, bG);
                                                                }
                                                                bo = parseInt(bo, 10);
                                                                if (a6(bo, -12, 13)) {
                                                                    return null ;
                                                                }
                                                                if (be > 2) {
                                                                    bx = parseInt(bx, 10);
                                                                    if (isNaN(bx) || a6(bx, 0, 59)) {
                                                                        return null ;
                                                                    }
                                                                }
                                                            } else {
                                                                if (bc === "'") {
                                                                    br = true;
                                                                    bd();
                                                                } else {
                                                                    if (!bd()) {
                                                                        return null ;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                bm = bn !== null  || bw !== null  || bC || null ;
                if (bH === null  && by === null  && bh === null  && bm) {
                    bH = bi;
                    by = bg.getMonth();
                    bh = bg.getDate();
                } else {
                    if (bH === null ) {
                        bH = bi;
                    }
                    if (bh === null ) {
                        bh = 1;
                    }
                }
                if (bB && bn < 12) {
                    bn += 12;
                }
                if (bE) {
                    if (bo) {
                        bn += -bo;
                    }
                    if (bx) {
                        bw += -bx;
                    }
                    bF = new Date(Date.UTC(bH, by, bh, bn, bw, bC, bv));
                } else {
                    bF = new Date(bH,by,bh,bn,bw,bC,bv);
                    aT(bF, bn);
                }
                if (bH < 100) {
                    bF.setFullYear(bH);
                }
                if (bF.getDate() !== bh && bE === aL) {
                    return null ;
                }
                return bF;
            }
            function a8(ba) {
                var bb = ba.substr(0, 1) === "-" ? -1 : 1;
                ba = ba.substring(1);
                ba = parseInt(ba.substr(0, 2), 10) * 60 + parseInt(ba.substring(2), 10);
                return bb * ba;
            }
            W.parseDate = function(bh, bc, ba) {
                if (a4.call(bh) === "[object Date]") {
                    return bh;
                }
                var bd = 0;
                var bb = null ;
                var be, bf;
                var bg;
                if (bh && bh.indexOf("/D") === 0) {
                    bb = aU.exec(bh);
                    if (bb) {
                        bb = bb[1];
                        bg = a5.exec(bb.substring(1));
                        bb = new Date(parseInt(bb, 10));
                        if (bg) {
                            bg = a8(bg[0]);
                            bb = W.timezone.apply(bb, 0);
                            bb = W.timezone.convert(bb, 0, -1 * bg);
                        }
                        return bb;
                    }
                }
                ba = W.getCulture(ba);
                if (!bc) {
                    bc = [];
                    bf = ba.calendar.patterns;
                    be = aX.length;
                    for (; 
                    bd < be; 
                    bd++) {
                        bc[bd] = bf[aX[bd]];
                    }
                    bd = 0;
                    bc = ["yyyy/MM/dd HH:mm:ss", "yyyy/MM/dd HH:mm", "yyyy/MM/dd", "ddd MMM dd yyyy HH:mm:ss", "yyyy-MM-ddTHH:mm:ss.fffffffzzz", "yyyy-MM-ddTHH:mm:ss.fffzzz", "yyyy-MM-ddTHH:mm:sszzz", "yyyy-MM-ddTHH:mm:ss.fffffff", "yyyy-MM-ddTHH:mm:ss.fff", "yyyy-MM-ddTHH:mmzzz", "yyyy-MM-ddTHH:mmzz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mm", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm", "yyyy-MM-dd", "HH:mm:ss", "HH:mm"].concat(bc);
                }
                bc = P(bc) ? bc : [bc];
                be = bc.length;
                for (; 
                bd < be; 
                bd++) {
                    bb = a7(bh, bc[bd], ba);
                    if (bb) {
                        return bb;
                    }
                }
                return bb;
            }
            ;
            W.parseInt = function(bc, ba) {
                var bb = W.parseFloat(bc, ba);
                if (bb) {
                    bb = bb | 0;
                }
                return bb;
            }
            ;
            W.parseFloat = function(bk, ba, bc) {
                if (!bk && bk !== 0) {
                    return null ;
                }
                if (typeof bk === ag) {
                    return bk;
                }
                bk = bk.toString();
                ba = W.getCulture(ba);
                var bf = ba.numberFormat, bh = bf.percent, bb = bf.currency, bj = bb.symbol, bi = bh.symbol, be = bk.indexOf("-"), bg, bd;
                if (aW.test(bk)) {
                    bk = parseFloat(bk.replace(bf["."], "."));
                    if (isNaN(bk)) {
                        bk = null ;
                    }
                    return bk;
                }
                if (be > 0) {
                    return null ;
                } else {
                    be = be > -1;
                }
                if (bk.indexOf(bj) > -1 || bc && bc.toLowerCase().indexOf("c") > -1) {
                    bf = bb;
                    bg = bf.pattern[0].replace("$", bj).split("n");
                    if (bk.indexOf(bg[0]) > -1 && bk.indexOf(bg[1]) > -1) {
                        bk = bk.replace(bg[0], "").replace(bg[1], "");
                        be = true;
                    }
                } else {
                    if (bk.indexOf(bi) > -1) {
                        bd = true;
                        bf = bh;
                        bj = bi;
                    }
                }
                bk = bk.replace("-", "").replace(bj, "").replace(a2, " ").split(bf[","].replace(a2, " ")).join("").replace(bf["."], ".");
                bk = parseFloat(bk);
                if (isNaN(bk)) {
                    bk = null ;
                } else {
                    if (be) {
                        bk *= -1;
                    }
                }
                if (bk && bd) {
                    bk /= 100;
                }
                return bk;
            }
            ;
        }());
        function L(aU) {
            var aW = aU.css(W.support.transitions.css + "box-shadow") || aU.css("box-shadow")
              , aV = aW ? aW.match(j) || [0, 0, 0, 0, 0] : [0, 0, 0, 0, 0]
              , aT = aa.max(+aV[3], +(aV[4] || 0));
            return {
                left: -aV[1] + aT,
                right: +aV[1] + aT,
                bottom: +aV[2] + aT
            };
        }
        function aQ(aV, aT) {
            var aU = aE.browser, aY, aX = aV.css("direction") == "rtl";
            if (!aV.parent().hasClass("k-animation-container")) {
                var a1 = L(aV)
                  , a2 = aV[0].style.width
                  , aW = aV[0].style.height
                  , a0 = ap.test(a2)
                  , aZ = ap.test(aW);
                if (aU.opera) {
                    a1.left = a1.right = a1.bottom = 5;
                }
                aY = a0 || aZ;
                if (!a0 && (!aT || aT && a2)) {
                    a2 = aV.outerWidth();
                }
                if (!aZ && (!aT || aT && aW)) {
                    aW = aV.outerHeight();
                }
                aV.wrap(b("<div/>").addClass("k-animation-container").css({
                    width: a2,
                    height: aW,
                    marginLeft: a1.left * (aX ? 1 : -1),
                    paddingLeft: a1.left,
                    paddingRight: a1.right,
                    paddingBottom: a1.bottom
                }));
                if (aY) {
                    aV.css({
                        width: "100%",
                        height: "100%",
                        boxSizing: "border-box",
                        mozBoxSizing: "border-box",
                        webkitBoxSizing: "border-box"
                    });
                }
            } else {
                var a3 = aV.parent(".k-animation-container")
                  , a4 = a3[0].style;
                if (a3.is(":hidden")) {
                    a3.show();
                }
                aY = ap.test(a4.width) || ap.test(a4.height);
                if (!aY) {
                    a3.css({
                        width: aV.outerWidth(),
                        height: aV.outerHeight(),
                        boxSizing: "content-box",
                        mozBoxSizing: "content-box",
                        webkitBoxSizing: "content-box"
                    });
                }
            }
            if (aU.msie && aa.floor(aU.version) <= 7) {
                aV.css({
                    zoom: 1
                });
                aV.children(".k-menu").width(aV.width());
            }
            return aV.parent();
        }
        function r(aT) {
            var aU = 1
              , aV = arguments.length;
            for (aU = 1; 
            aU < aV; 
            aU++) {
                s(aT, arguments[aU]);
            }
            return aT;
        }
        function s(aU, a3) {
            var aY = W.data.ObservableArray, aX = W.data.LazyObservableArray, aT = W.data.DataSource, aW = W.data.HierarchicalDataSource, aZ, a2, a1, a0, aV;
            for (aZ in a3) {
                a2 = a3[aZ];
                a1 = typeof a2;
                if (a1 === ai && a2 !== null ) {
                    a0 = a2.constructor;
                } else {
                    a0 = null ;
                }
                if (a0 && a0 !== Array && a0 !== aY && a0 !== aX && a0 !== aT && a0 !== aW) {
                    if (a2 instanceof Date) {
                        aU[aZ] = new Date(a2.getTime());
                    } else {
                        if (R(a2.clone)) {
                            aU[aZ] = a2.clone();
                        } else {
                            aV = aU[aZ];
                            if (typeof aV === ai) {
                                aU[aZ] = aV || {};
                            } else {
                                aU[aZ] = {};
                            }
                            s(aU[aZ], a2);
                        }
                    }
                } else {
                    if (a1 !== aM) {
                        aU[aZ] = a2;
                    }
                }
            }
            return aU;
        }
        function aH(aT, aW, aU) {
            for (var aV in aW) {
                if (aW.hasOwnProperty(aV) && aW[aV].test(aT)) {
                    return aV;
                }
            }
            return aU !== aL ? aU : aT;
        }
        function aK(aT) {
            return aT.replace(/([a-z][A-Z])/g, function(aU) {
                return aU.charAt(0) + "-" + aU.charAt(1).toLowerCase();
            });
        }
        function aI(aT) {
            return aT.replace(/\-(\w)/g, function(aV, aU) {
                return aU.toUpperCase();
            });
        }
        function I(aU, aV) {
            var aW = {}, aT;
            if (document.defaultView && document.defaultView.getComputedStyle) {
                aT = document.defaultView.getComputedStyle(aU, "");
                if (aV) {
                    b.each(aV, function(aX, aY) {
                        aW[aY] = aT.getPropertyValue(aY);
                    });
                }
            } else {
                aT = aU.currentStyle;
                if (aV) {
                    b.each(aV, function(aX, aY) {
                        aW[aY] = aT[aI(aY)];
                    });
                }
            }
            if (!W.size(aW)) {
                aW = aT;
            }
            return aW;
        }
        function S(aT) {
            if (aT && aT.className && typeof aT.className === "string" && aT.className.indexOf("k-auto-scrollable") > -1) {
                return true;
            }
            var aU = I(aT, ["overflow"]).overflow;
            return aU == "auto" || aU == "scroll";
        }
        function ay(aU, aX) {
            var aY = aE.browser.webkit;
            var aW = aE.browser.mozilla;
            var aT = aU instanceof b ? aU[0] : aU;
            var aV;
            if (!aU) {
                return;
            }
            aV = aE.isRtl(aU);
            if (aX !== aL) {
                if (aV && aY) {
                    aT.scrollLeft = aT.scrollWidth - aT.clientWidth - aX;
                } else {
                    if (aV && aW) {
                        aT.scrollLeft = -aX;
                    } else {
                        aT.scrollLeft = aX;
                    }
                }
            } else {
                if (aV && aY) {
                    return aT.scrollWidth - aT.clientWidth - aT.scrollLeft;
                } else {
                    return Math.abs(aT.scrollLeft);
                }
            }
        }
        (function() {
            aE._scrollbar = aL;
            aE.scrollbar = function(a2) {
                if (!isNaN(aE._scrollbar) && !a2) {
                    return aE._scrollbar;
                } else {
                    var a1 = document.createElement("div"), a3;
                    a1.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
                    a1.innerHTML = "&nbsp;";
                    document.body.appendChild(a1);
                    aE._scrollbar = a3 = a1.offsetWidth - a1.scrollWidth;
                    document.body.removeChild(a1);
                    return a3;
                }
            }
            ;
            aE.isRtl = function(a1) {
                return b(a1).closest(".k-rtl").length > 0;
            }
            ;
            var aY = document.createElement("table");
            try {
                aY.innerHTML = "<tr><td></td></tr>";
                aE.tbodyInnerHtml = true;
            } catch (aU) {
                aE.tbodyInnerHtml = false;
            }
            aE.touch = "ontouchstart" in aP;
            aE.msPointers = aP.MSPointerEvent;
            aE.pointers = aP.PointerEvent;
            var a0 = aE.transitions = false
              , aZ = aE.transforms = false
              , aV = "HTMLElement" in aP ? HTMLElement.prototype : [];
            aE.hasHW3D = "WebKitCSSMatrix" in aP && "m11" in new aP.WebKitCSSMatrix() || "MozPerspective" in document.documentElement.style || "msPerspective" in document.documentElement.style;
            u(["Moz", "webkit", "O", "ms"], function() {
                var a3 = this.toString()
                  , a1 = typeof aY.style[a3 + "Transition"] === aD;
                if (a1 || typeof aY.style[a3 + "Transform"] === aD) {
                    var a2 = a3.toLowerCase();
                    aZ = {
                        css: a2 != "ms" ? "-" + a2 + "-" : "",
                        prefix: a3,
                        event: a2 === "o" || a2 === "webkit" ? a2 : ""
                    };
                    if (a1) {
                        a0 = aZ;
                        a0.event = a0.event ? a0.event + "TransitionEnd" : "transitionend";
                    }
                    return false;
                }
            });
            aY = null ;
            aE.transforms = aZ;
            aE.transitions = a0;
            aE.devicePixelRatio = aP.devicePixelRatio === aL ? 1 : aP.devicePixelRatio;
            try {
                aE.screenWidth = aP.outerWidth || aP.screen ? aP.screen.availWidth : aP.innerWidth;
                aE.screenHeight = aP.outerHeight || aP.screen ? aP.screen.availHeight : aP.innerHeight;
            } catch (aU) {
                aE.screenWidth = aP.screen.availWidth;
                aE.screenHeight = aP.screen.availHeight;
            }
            aE.detectOS = function(ba) {
                var a8 = false, a6, a5 = [], a7 = !/mobile safari/i.test(ba), a2 = {
                    wp: /(Windows Phone(?: OS)?)\s(\d+)\.(\d+(\.\d+)?)/,
                    fire: /(Silk)\/(\d+)\.(\d+(\.\d+)?)/,
                    android: /(Android|Android.*(?:Opera|Firefox).*?\/)\s*(\d+)\.(\d+(\.\d+)?)/,
                    iphone: /(iPhone|iPod).*OS\s+(\d+)[\._]([\d\._]+)/,
                    ipad: /(iPad).*OS\s+(\d+)[\._]([\d_]+)/,
                    meego: /(MeeGo).+NokiaBrowser\/(\d+)\.([\d\._]+)/,
                    webos: /(webOS)\/(\d+)\.(\d+(\.\d+)?)/,
                    blackberry: /(BlackBerry|BB10).*?Version\/(\d+)\.(\d+(\.\d+)?)/,
                    playbook: /(PlayBook).*?Tablet\s*OS\s*(\d+)\.(\d+(\.\d+)?)/,
                    windows: /(MSIE)\s+(\d+)\.(\d+(\.\d+)?)/,
                    tizen: /(tizen).*?Version\/(\d+)\.(\d+(\.\d+)?)/i,
                    sailfish: /(sailfish).*rv:(\d+)\.(\d+(\.\d+)?).*firefox/i,
                    ffos: /(Mobile).*rv:(\d+)\.(\d+(\.\d+)?).*Firefox/
                }, a9 = {
                    ios: /^i(phone|pad|pod)$/i,
                    android: /^android|fire$/i,
                    blackberry: /^blackberry|playbook/i,
                    windows: /windows/,
                    wp: /wp/,
                    flat: /sailfish|ffos|tizen/i,
                    meego: /meego/
                }, a4 = {
                    tablet: /playbook|ipad|fire/i
                }, a3 = {
                    omini: /Opera\sMini/i,
                    omobile: /Opera\sMobi/i,
                    firefox: /Firefox|Fennec/i,
                    mobilesafari: /version\/.*safari/i,
                    ie: /MSIE|Windows\sPhone/i,
                    chrome: /chrome|crios/i,
                    webkit: /webkit/i
                };
                for (var a1 in a2) {
                    if (a2.hasOwnProperty(a1)) {
                        a5 = ba.match(a2[a1]);
                        if (a5) {
                            if (a1 == "windows" && "plugins" in navigator) {
                                return false;
                            }
                            a8 = {};
                            a8.device = a1;
                            a8.tablet = aH(a1, a4, false);
                            a8.browser = aH(ba, a3, "default");
                            a8.name = aH(a1, a9);
                            a8[a8.name] = true;
                            a8.majorVersion = a5[2];
                            a8.minorVersion = a5[3].replace("_", ".");
                            a6 = a8.minorVersion.replace(".", "").substr(0, 2);
                            a8.flatVersion = a8.majorVersion + a6 + new Array(3 - (a6.length < 3 ? a6.length : 2)).join("0");
                            a8.cordova = typeof aP.PhoneGap !== aM || typeof aP.cordova !== aM;
                            a8.appMode = aP.navigator.standalone || /file|local|wmapp/.test(aP.location.protocol) || a8.cordova;
                            if (a8.android && (aE.devicePixelRatio < 1.5 && a8.flatVersion < 400 || a7) && (aE.screenWidth > 800 || aE.screenHeight > 800)) {
                                a8.tablet = a1;
                            }
                            break;
                        }
                    }
                }
                return a8;
            }
            ;
            var aX = aE.mobileOS = aE.detectOS(navigator.userAgent);
            aE.wpDevicePixelRatio = aX.wp ? screen.width / 320 : 0;
            aE.kineticScrollNeeded = aX && (aE.touch || aE.msPointers || aE.pointers);
            aE.hasNativeScrolling = false;
            if (aX.ios || aX.android && aX.majorVersion > 2 || aX.wp) {
                aE.hasNativeScrolling = aX;
            }
            aE.delayedClick = function() {
                if (aE.touch) {
                    if (aX.ios) {
                        return true;
                    }
                    if (aX.android) {
                        if (!aE.browser.chrome) {
                            return true;
                        }
                        if (aE.browser.version < 32) {
                            return false;
                        }
                        return !(b("meta[name=viewport]").attr("content") || "").match(/user-scalable=no/i);
                    }
                }
                return false;
            }
            ;
            aE.mouseAndTouchPresent = aE.touch && !(aE.mobileOS.ios || aE.mobileOS.android);
            aE.detectBrowser = function(a5) {
                var a2 = false
                  , a4 = []
                  , a3 = {
                    edge: /(edge)[ \/]([\w.]+)/i,
                    webkit: /(chrome)[ \/]([\w.]+)/i,
                    safari: /(webkit)[ \/]([\w.]+)/i,
                    opera: /(opera)(?:.*version|)[ \/]([\w.]+)/i,
                    msie: /(msie\s|trident.*? rv:)([\w.]+)/i,
                    mozilla: /(mozilla)(?:.*? rv:([\w.]+)|)/i
                };
                for (var a1 in a3) {
                    if (a3.hasOwnProperty(a1)) {
                        a4 = a5.match(a3[a1]);
                        if (a4) {
                            a2 = {};
                            a2[a1] = true;
                            a2[a4[1].toLowerCase().split(" ")[0].split("/")[0]] = true;
                            a2.version = parseInt(document.documentMode || a4[2], 10);
                            break;
                        }
                    }
                }
                return a2;
            }
            ;
            aE.browser = aE.detectBrowser(navigator.userAgent);
            aE.detectClipboardAccess = function() {
                var a1 = {
                    copy: document.queryCommandSupported ? document.queryCommandSupported("copy") : false,
                    cut: document.queryCommandSupported ? document.queryCommandSupported("cut") : false,
                    paste: document.queryCommandSupported ? document.queryCommandSupported("paste") : false
                };
                if (aE.browser.chrome && aE.browser.version >= 43) {
                    a1.copy = true;
                    a1.cut = true;
                }
                return a1;
            }
            ;
            aE.clipboard = aE.detectClipboardAccess();
            aE.zoomLevel = function() {
                try {
                    var a1 = aE.browser;
                    var a4 = 0;
                    var a2 = document.documentElement;
                    if (a1.msie && a1.version == 11 && a2.scrollHeight > a2.clientHeight && !aE.touch) {
                        a4 = aE.scrollbar();
                    }
                    return aE.touch ? a2.clientWidth / aP.innerWidth : a1.msie && a1.version >= 10 ? ((top || aP).document.documentElement.offsetWidth + a4) / (top || aP).innerWidth : 1;
                } catch (a3) {
                    return 1;
                }
            }
            ;
            aE.cssBorderSpacing = typeof document.documentElement.style.borderSpacing != "undefined" && !(aE.browser.msie && aE.browser.version < 8);
            (function(a1) {
                var a2 = ""
                  , a3 = b(document.documentElement)
                  , a4 = parseInt(a1.version, 10);
                if (a1.msie) {
                    a2 = "ie";
                } else {
                    if (a1.mozilla) {
                        a2 = "ff";
                    } else {
                        if (a1.safari) {
                            a2 = "safari";
                        } else {
                            if (a1.webkit) {
                                a2 = "webkit";
                            } else {
                                if (a1.opera) {
                                    a2 = "opera";
                                } else {
                                    if (a1.edge) {
                                        a2 = "edge";
                                    }
                                }
                            }
                        }
                    }
                }
                if (a2) {
                    a2 = "k-" + a2 + " k-" + a2 + a4;
                }
                if (aE.mobileOS) {
                    a2 += " k-mobile";
                }
                a3.addClass(a2);
            }(aE.browser));
            aE.eventCapture = document.documentElement.addEventListener;
            var aW = document.createElement("input");
            aE.placeholder = "placeholder" in aW;
            aE.propertyChangeEvent = "onpropertychange" in aW;
            aE.input = function() {
                var a5 = ["number", "date", "time", "month", "week", "datetime", "datetime-local"];
                var a2 = a5.length;
                var a6 = "test";
                var a3 = {};
                var a1 = 0;
                var a4;
                for (; 
                a1 < a2; 
                a1++) {
                    a4 = a5[a1];
                    aW.setAttribute("type", a4);
                    aW.value = a6;
                    a3[a4.replace("-", "")] = aW.type !== "text" && aW.value !== a6;
                }
                return a3;
            }();
            aW.style.cssText = "float:left;";
            aE.cssFloat = !!aW.style.cssFloat;
            aW = null ;
            aE.stableSort = function() {
                var a3 = 513;
                var a2 = [{
                    index: 0,
                    field: "b"
                }];
                for (var a1 = 1; 
                a1 < a3; 
                a1++) {
                    a2.push({
                        index: a1,
                        field: "a"
                    });
                }
                a2.sort(function(a4, a5) {
                    return a4.field > a5.field ? 1 : a4.field < a5.field ? -1 : 0;
                });
                return a2[0].index === 1;
            }();
            aE.matchesSelector = aV.webkitMatchesSelector || aV.mozMatchesSelector || aV.msMatchesSelector || aV.oMatchesSelector || aV.matchesSelector || aV.matches || function(a3) {
                var a2 = document.querySelectorAll ? (this.parentNode || document).querySelectorAll(a3) || [] : b(a3)
                  , a1 = a2.length;
                while (a1--) {
                    if (a2[a1] == this) {
                        return true;
                    }
                }
                return false;
            }
            ;
            aE.pushState = aP.history && aP.history.pushState;
            var aT = document.documentMode;
            aE.hashChange = "onhashchange" in aP && !(aE.browser.msie && (!aT || aT <= 8));
            aE.customElements = "registerElement" in aP.document;
        }());
        function aB(aU) {
            var aV = 0, aT;
            for (aT in aU) {
                if (aU.hasOwnProperty(aT) && aT != "toJSON") {
                    aV++;
                }
            }
            return aV;
        }
        function K(aT, aW, aU) {
            if (!aW) {
                aW = "offset";
            }
            var aV = aT[aW]();
            if (aE.browser.msie && (aE.pointers || aE.msPointers) && !aU) {
                aV.top -= aP.pageYOffset - document.documentElement.scrollTop;
                aV.left -= aP.pageXOffset - document.documentElement.scrollLeft;
            }
            return aV;
        }
        var t = {
            left: {
                reverse: "right"
            },
            right: {
                reverse: "left"
            },
            down: {
                reverse: "up"
            },
            up: {
                reverse: "down"
            },
            top: {
                reverse: "bottom"
            },
            bottom: {
                reverse: "top"
            },
            "in": {
                reverse: "out"
            },
            out: {
                reverse: "in"
            }
        };
        function am(aU) {
            var aT = {};
            u(typeof aU === "string" ? aU.split(" ") : aU, function(aV) {
                aT[aV] = this;
            });
            return aT;
        }
        function H(aT) {
            return new W.effects.Element(aT);
        }
        var v = {};
        b.extend(v, {
            enabled: true,
            Element: function(aT) {
                this.element = b(aT);
            },
            promise: function(aT, aU) {
                if (!aT.is(":visible")) {
                    aT.css({
                        display: aT.data("olddisplay") || "block"
                    }).css("display");
                }
                if (aU.hide) {
                    aT.data("olddisplay", aT.css("display")).hide();
                }
                if (aU.init) {
                    aU.init();
                }
                if (aU.completeCallback) {
                    aU.completeCallback(aT);
                }
                aT.dequeue();
            },
            disable: function() {
                this.enabled = false;
                this.promise = this.promiseShim;
            },
            enable: function() {
                this.enabled = true;
                this.promise = this.animatedPromise;
            }
        });
        v.promiseShim = v.promise;
        function aq(aV, aU, aW, aT) {
            if (typeof aV === aD) {
                if (R(aU)) {
                    aT = aU;
                    aU = 400;
                    aW = false;
                }
                if (R(aW)) {
                    aT = aW;
                    aW = false;
                }
                if (typeof aU === i) {
                    aW = aU;
                    aU = 400;
                }
                aV = {
                    effects: aV,
                    duration: aU,
                    reverse: aW,
                    complete: aT
                };
            }
            return D({
                effects: {},
                duration: 400,
                reverse: false,
                init: ae,
                teardown: ae,
                hide: false
            }, aV, {
                completeCallback: aV.complete,
                complete: ae
            });
        }
        function d(aV, aZ, aU, a0, aT) {
            var aW = 0, aY = aV.length, aX;
            for (; 
            aW < aY; 
            aW++) {
                aX = b(aV[aW]);
                aX.queue(function() {
                    v.promise(aX, aq(aZ, aU, a0, aT));
                });
            }
            return aV;
        }
        function aJ(aV, aU, aW, aT) {
            if (aU) {
                aU = aU.split(" ");
                u(aU, function(aX, aY) {
                    aV.toggleClass(aY, aT);
                });
            }
            return aV;
        }
        if (!("kendoAnimate" in b.fn)) {
            D(b.fn, {
                kendoStop: function(aT, aU) {
                    return this.stop(aT, aU);
                },
                kendoAnimate: function(aV, aU, aW, aT) {
                    return d(this, aV, aU, aW, aT);
                },
                kendoAddClass: function(aT, aU) {
                    return W.toggleClass(this, aT, aU, true);
                },
                kendoRemoveClass: function(aT, aU) {
                    return W.toggleClass(this, aT, aU, false);
                },
                kendoToggleClass: function(aT, aU, aV) {
                    return W.toggleClass(this, aT, aU, aV);
                }
            });
        }
        var c = /&/g
          , Z = /</g
          , av = /"/g
          , g = /'/g
          , N = />/g;
        function O(aT) {
            return ("" + aT).replace(c, "&amp;").replace(Z, "&lt;").replace(N, "&gt;").replace(av, "&quot;").replace(g, "&#39;");
        }
        var B = function(aT) {
            return aT.target;
        }
        ;
        if (aE.touch) {
            B = function(aT) {
                var aU = "originalEvent" in aT ? aT.originalEvent.changedTouches : "changedTouches" in aT ? aT.changedTouches : null ;
                return aU ? document.elementFromPoint(aU[0].clientX, aU[0].clientY) : aT.target;
            }
            ;
            u(["swipe", "swipeLeft", "swipeRight", "swipeUp", "swipeDown", "doubleTap", "tap"], function(aT, aU) {
                b.fn[aU] = function(aV) {
                    return this.bind(aU, aV);
                }
                ;
            });
        }
        if (aE.touch) {
            if (!aE.mobileOS) {
                aE.mousedown = "mousedown touchstart";
                aE.mouseup = "mouseup touchend";
                aE.mousemove = "mousemove touchmove";
                aE.mousecancel = "mouseleave touchcancel";
                aE.click = "click";
                aE.resize = "resize";
            } else {
                aE.mousedown = "touchstart";
                aE.mouseup = "touchend";
                aE.mousemove = "touchmove";
                aE.mousecancel = "touchcancel";
                aE.click = "touchend";
                aE.resize = "orientationchange";
            }
        } else {
            if (aE.pointers) {
                aE.mousemove = "pointermove";
                aE.mousedown = "pointerdown";
                aE.mouseup = "pointerup";
                aE.mousecancel = "pointercancel";
                aE.click = "pointerup";
                aE.resize = "orientationchange resize";
            } else {
                if (aE.msPointers) {
                    aE.mousemove = "MSPointerMove";
                    aE.mousedown = "MSPointerDown";
                    aE.mouseup = "MSPointerUp";
                    aE.mousecancel = "MSPointerCancel";
                    aE.click = "MSPointerUp";
                    aE.resize = "orientationchange resize";
                } else {
                    aE.mousemove = "mousemove";
                    aE.mousedown = "mousedown";
                    aE.mouseup = "mouseup";
                    aE.mousecancel = "mouseleave";
                    aE.click = "click";
                    aE.resize = "resize";
                }
            }
        }
        var aR = function(aY, aZ) {
            var a0 = aZ || "d", aV, aU, aW, aX, aT = 1;
            for (aU = 0,
            aW = aY.length; 
            aU < aW; 
            aU++) {
                aX = aY[aU];
                if (aX !== "") {
                    aV = aX.indexOf("[");
                    if (aV !== 0) {
                        if (aV == -1) {
                            aX = "." + aX;
                        } else {
                            aT++;
                            aX = "." + aX.substring(0, aV) + " || {})" + aX.substring(aV);
                        }
                    }
                    aT++;
                    a0 += aX + (aU < aW - 1 ? " || {})" : ")");
                }
            }
            return new Array(aT).join("(") + a0;
        }
          , Y = /^([a-z]+:)?\/\//i;
        D(W, {
            widgets: [],
            _widgetRegisteredCallbacks: [],
            ui: W.ui || {},
            fx: W.fx || H,
            effects: W.effects || v,
            mobile: W.mobile || {},
            data: W.data || {},
            dataviz: W.dataviz || {},
            drawing: W.drawing || {},
            spreadsheet: {
                messages: {}
            },
            keys: {
                INSERT: 45,
                DELETE: 46,
                BACKSPACE: 8,
                TAB: 9,
                ENTER: 13,
                ESC: 27,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                END: 35,
                HOME: 36,
                SPACEBAR: 32,
                PAGEUP: 33,
                PAGEDOWN: 34,
                F2: 113,
                F10: 121,
                F12: 123,
                NUMPAD_PLUS: 107,
                NUMPAD_MINUS: 109,
                NUMPAD_DOT: 110
            },
            support: W.support || aE,
            animate: W.animate || d,
            ns: "",
            attr: function(aT) {
                return "data-" + W.ns + aT;
            },
            getShadows: L,
            wrap: aQ,
            deepExtend: r,
            getComputedStyles: I,
            webComponents: W.webComponents || [],
            isScrollable: S,
            scrollLeft: ay,
            size: aB,
            toCamelCase: aI,
            toHyphens: aK,
            getOffset: W.getOffset || K,
            parseEffects: W.parseEffects || am,
            toggleClass: W.toggleClass || aJ,
            directions: W.directions || t,
            Observable: aj,
            Class: k,
            Template: aF,
            template: at(aF.compile, aF),
            render: at(aF.render, aF),
            stringify: at(T.stringify, T),
            eventTarget: B,
            htmlEncode: O,
            isLocalUrl: function(aT) {
                return aT && !Y.test(aT);
            },
            expr: function(aT, aV, aU) {
                aT = aT || "";
                if (typeof aV == aD) {
                    aU = aV;
                    aV = false;
                }
                aU = aU || "d";
                if (aT && aT.charAt(0) !== "[") {
                    aT = "." + aT;
                }
                if (aV) {
                    aT = aT.replace(/"([^.]*)\.([^"]*)"/g, '"$1_$DOT$_$2"');
                    aT = aT.replace(/'([^.]*)\.([^']*)'/g, "'$1_$DOT$_$2'");
                    aT = aR(aT.split("."), aU);
                    aT = aT.replace(/_\$DOT\$_/g, ".");
                } else {
                    aT = aU + aT;
                }
                return aT;
            },
            getter: function(aT, aV) {
                var aU = aT + aV;
                return M[aU] = M[aU] || new Function("d","return " + W.expr(aT, aV));
            },
            setter: function(aT) {
                return az[aT] = az[aT] || new Function("d,value",W.expr(aT) + "=value");
            },
            accessor: function(aT) {
                return {
                    get: W.getter(aT),
                    set: W.setter(aT)
                };
            },
            guid: function() {
                var aU = "", aT, aV;
                for (aT = 0; 
                aT < 32; 
                aT++) {
                    aV = aa.random() * 16 | 0;
                    if (aT == 8 || aT == 12 || aT == 16 || aT == 20) {
                        aU += "-";
                    }
                    aU += (aT == 12 ? 4 : aT == 16 ? aV & 3 | 8 : aV).toString(16);
                }
                return aU;
            },
            roleSelector: function(aT) {
                return aT.replace(/(\S+)/g, "[" + W.attr("role") + "=$1],").slice(0, -1);
            },
            directiveSelector: function(aT) {
                var aV = aT.split(" ");
                if (aV) {
                    for (var aU = 0; 
                    aU < aV.length; 
                    aU++) {
                        if (aV[aU] != "view") {
                            aV[aU] = aV[aU].replace(/(\w*)(view|bar|strip|over)$/, "$1-$2");
                        }
                    }
                }
                return aV.join(" ").replace(/(\S+)/g, "kendo-mobile-$1,").slice(0, -1);
            },
            triggeredByInput: function(aT) {
                return /^(label|input|textarea|select)$/i.test(aT.target.tagName);
            },
            onWidgetRegistered: function(aT) {
                for (var aU = 0, aV = W.widgets.length; 
                aU < aV; 
                aU++) {
                    aT(W.widgets[aU]);
                }
                W._widgetRegisteredCallbacks.push(aT);
            },
            logToConsole: function(aU) {
                var aT = aP.console;
                if (!W.suppressLog && typeof aT != "undefined" && aT.log) {
                    aT.log(aU);
                }
            }
        });
        var aO = aj.extend({
            init: function(aU, aV) {
                var aW = this;
                aW.element = W.jQuery(aU).handler(aW);
                aW.angular("init", aV);
                aj.fn.init.call(aW);
                var aT = aV ? aV.dataSource : null ;
                if (aT) {
                    aV = D({}, aV, {
                        dataSource: {}
                    });
                }
                aV = aW.options = D(true, {}, aW.options, aV);
                if (aT) {
                    aV.dataSource = aT;
                }
                if (!aW.element.attr(W.attr("role"))) {
                    aW.element.attr(W.attr("role"), (aV.name || "").toLowerCase());
                }
                aW.element.data("kendo" + aV.prefix + aV.name, aW);
                aW.bind(aW.events, aV);
            },
            events: [],
            options: {
                prefix: ""
            },
            _hasBindingTarget: function() {
                return !!this.element[0].kendoBindingTarget;
            },
            _tabindex: function(aW) {
                aW = aW || this.wrapper;
                var aT = this.element
                  , aV = "tabindex"
                  , aU = aW.attr(aV) || aT.attr(aV);
                aT.removeAttr(aV);
                aW.attr(aV, !isNaN(aU) ? aU : 0);
            },
            setOptions: function(aT) {
                this._setEvents(aT);
                b.extend(this.options, aT);
            },
            _setEvents: function(aW) {
                var aX = this, aU = 0, aV = aX.events.length, aT;
                for (; 
                aU < aV; 
                aU++) {
                    aT = aX.events[aU];
                    if (aX.options[aT] && aW[aT]) {
                        aX.unbind(aT, aX.options[aT]);
                    }
                }
                aX.bind(aX.events, aW);
            },
            resize: function(aU) {
                var aV = this.getSize()
                  , aT = this._size;
                if (aU || (aV.width > 0 || aV.height > 0) && (!aT || aV.width !== aT.width || aV.height !== aT.height)) {
                    this._size = aV;
                    this._resize(aV, aU);
                    this.trigger("resize", aV);
                }
            },
            getSize: function() {
                return W.dimensions(this.element);
            },
            size: function(aT) {
                if (!aT) {
                    return this.getSize();
                } else {
                    this.setSize(aT);
                }
            },
            setSize: b.noop,
            _resize: b.noop,
            destroy: function() {
                var aT = this;
                aT.element.removeData("kendo" + aT.options.prefix + aT.options.name);
                aT.element.removeData("handler");
                aT.unbind();
            },
            _destroy: function() {
                this.destroy();
            },
            angular: function() {},
            _muteAngularRebind: function(aT) {
                this._muteRebind = true;
                aT.call(this);
                this._muteRebind = false;
            }
        });
        var q = aO.extend({
            dataItems: function() {
                return this.dataSource.flatView();
            },
            _angularItems: function(aT) {
                var aU = this;
                aU.angular(aT, function() {
                    return {
                        elements: aU.items(),
                        data: b.map(aU.dataItems(), function(aV) {
                            return {
                                dataItem: aV
                            };
                        })
                    };
                });
            }
        });
        W.dimensions = function(aV, aT) {
            var aU = aV[0];
            if (aT) {
                aV.css(aT);
            }
            return {
                width: aU.offsetWidth,
                height: aU.offsetHeight
            };
        }
        ;
        W.notify = ae;
        var aG = /template$/i
          , V = /^\s*(?:\{(?:.|\r\n|\n)*\}|\[(?:.|\r\n|\n)*\])\s*$/
          , U = /^\{(\d+)(:[^\}]+)?\}|^\[[A-Za-z_]*\]$/
          , p = /([A-Z])/g;
        function an(aT, aU) {
            var aV;
            if (aU.indexOf("data") === 0) {
                aU = aU.substring(4);
                aU = aU.charAt(0).toLowerCase() + aU.substring(1);
            }
            aU = aU.replace(p, "-$1");
            aV = aT.getAttribute("data-" + W.ns + aU);
            if (aV === null ) {
                aV = aL;
            } else {
                if (aV === "null") {
                    aV = null ;
                } else {
                    if (aV === "true") {
                        aV = true;
                    } else {
                        if (aV === "false") {
                            aV = false;
                        } else {
                            if (ah.test(aV)) {
                                aV = parseFloat(aV);
                            } else {
                                if (V.test(aV) && !U.test(aV)) {
                                    aV = new Function("return (" + aV + ")")();
                                }
                            }
                        }
                    }
                }
            }
            return aV;
        }
        function ao(aT, aV) {
            var aW = {}, aU, aX;
            for (aU in aV) {
                aX = an(aT, aU);
                if (aX !== aL) {
                    if (aG.test(aU)) {
                        aX = W.template(b("#" + aX).html());
                    }
                    aW[aU] = aX;
                }
            }
            return aW;
        }
        W.initWidget = function(aV, a1, a4) {
            var a2, a0, a6, aX, aZ, a3, a5, aU, aW, a8;
            if (!a4) {
                a4 = W.ui.roles;
            } else {
                if (a4.roles) {
                    a4 = a4.roles;
                }
            }
            aV = aV.nodeType ? aV : aV[0];
            a3 = aV.getAttribute("data-" + W.ns + "role");
            if (!a3) {
                return;
            }
            aW = a3.indexOf(".") === -1;
            if (aW) {
                a6 = a4[a3];
            } else {
                a6 = W.getter(a3)(aP);
            }
            var aT = b(aV).data()
              , a7 = a6 ? "kendo" + a6.fn.options.prefix + a6.fn.options.name : "";
            if (aW) {
                a8 = new RegExp("^kendo.*" + a3 + "$","i");
            } else {
                a8 = new RegExp("^" + a7 + "$","i");
            }
            for (var aY in aT) {
                if (aY.match(a8)) {
                    if (aY === a7) {
                        a2 = aT[aY];
                    } else {
                        return aT[aY];
                    }
                }
            }
            if (!a6) {
                return;
            }
            aU = an(aV, "dataSource");
            a1 = b.extend({}, ao(aV, a6.fn.options), a1);
            if (aU) {
                if (typeof aU === aD) {
                    a1.dataSource = W.getter(aU)(aP);
                } else {
                    a1.dataSource = aU;
                }
            }
            for (aX = 0,
            aZ = a6.fn.events.length; 
            aX < aZ; 
            aX++) {
                a0 = a6.fn.events[aX];
                a5 = an(aV, a0);
                if (a5 !== aL) {
                    a1[a0] = W.getter(a5)(aP);
                }
            }
            if (!a2) {
                a2 = new a6(aV,a1);
            } else {
                if (!b.isEmptyObject(a1)) {
                    a2.setOptions(a1);
                }
            }
            return a2;
        }
        ;
        W.rolesFromNamespaces = function(aV) {
            var aW = [], aT, aU;
            if (!aV[0]) {
                aV = [W.ui, W.dataviz.ui];
            }
            for (aT = 0,
            aU = aV.length; 
            aT < aU; 
            aT++) {
                aW[aT] = aV[aT].roles;
            }
            return D.apply(null , [{}].concat(aW.reverse()));
        }
        ;
        W.init = function(aT) {
            var aU = W.rolesFromNamespaces(aC.call(arguments, 1));
            b(aT).find("[data-" + W.ns + "role]").addBack().each(function() {
                W.initWidget(this, {}, aU);
            });
        }
        ;
        W.destroy = function(aT) {
            b(aT).find("[data-" + W.ns + "role]").addBack().each(function() {
                var aU = b(this).data();
                for (var aV in aU) {
                    if (aV.indexOf("kendo") === 0 && typeof aU[aV].destroy === G) {
                        aU[aV].destroy();
                    }
                }
            });
        }
        ;
        function n(aT, aU) {
            return b.contains(aT, aU) ? -1 : 1;
        }
        function aw() {
            var aT = b(this);
            return b.inArray(aT.attr("data-" + W.ns + "role"), ["slider", "rangeslider"]) > -1 || aT.is(":visible");
        }
        W.resize = function(aT, aU) {
            var aV = b(aT).find("[data-" + W.ns + "role]").addBack().filter(aw);
            if (!aV.length) {
                return;
            }
            var aW = b.makeArray(aV);
            aW.sort(n);
            b.each(aW, function() {
                var aX = W.widgetInstance(b(this));
                if (aX) {
                    aX.resize(aU);
                }
            });
        }
        ;
        W.parseOptions = ao;
        D(W.ui, {
            Widget: aO,
            DataBoundWidget: q,
            roles: {},
            progress: function(aU, a0) {
                var aY = aU.find(".k-loading-mask"), aZ = W.support, aT = aZ.browser, aW, aX, a1, aV;
                if (a0) {
                    if (!aY.length) {
                        aW = aZ.isRtl(aU);
                        aX = aW ? "right" : "left";
                        aV = aU.scrollLeft();
                        a1 = aT.webkit ? !aW ? 0 : aU[0].scrollWidth - aU.width() - 2 * aV : 0;
                        aY = b("<div class='k-loading-mask'><span class='k-loading-text'>Loading...</span><div class='k-loading-image'/><div class='k-loading-color'/></div>").width("100%").height("100%").css("top", aU.scrollTop()).css(aX, Math.abs(aV) + a1).prependTo(aU);
                    }
                } else {
                    if (aY) {
                        aY.remove();
                    }
                }
            },
            plugin: function(aZ, aY, aX) {
                var aW = aZ.fn.options.name, aT;
                aY = aY || W.ui;
                aX = aX || "";
                aY[aW] = aZ;
                aY.roles[aW.toLowerCase()] = aZ;
                aT = "getKendo" + aX + aW;
                aW = "kendo" + aX + aW;
                var a0 = {
                    name: aW,
                    widget: aZ,
                    prefix: aX || ""
                };
                W.widgets.push(a0);
                for (var aU = 0, aV = W._widgetRegisteredCallbacks.length; 
                aU < aV; 
                aU++) {
                    W._widgetRegisteredCallbacks[aU](a0);
                }
                b.fn[aW] = function(a2) {
                    var a3 = this, a1;
                    if (typeof a2 === aD) {
                        a1 = aC.call(arguments, 1);
                        this.each(function() {
                            var a6 = b.data(this, aW), a4, a5;
                            if (!a6) {
                                throw new Error(W.format("Cannot call method '{0}' of {1} before it is initialized", a2, aW));
                            }
                            a4 = a6[a2];
                            if (typeof a4 !== G) {
                                throw new Error(W.format("Cannot find method '{0}' of {1}", a2, aW));
                            }
                            a5 = a4.apply(a6, a1);
                            if (a5 !== aL) {
                                a3 = a5;
                                return false;
                            }
                        });
                    } else {
                        this.each(function() {
                            return new aZ(this,a2);
                        });
                    }
                    return a3;
                }
                ;
                b.fn[aW].widget = aZ;
                b.fn[aT] = function() {
                    return this.data(aW);
                }
                ;
            }
        });
        var m = {
            bind: function() {
                return this;
            },
            nullObject: true,
            options: {}
        };
        var ab = aO.extend({
            init: function(aT, aU) {
                aO.fn.init.call(this, aT, aU);
                this.element.autoApplyNS();
                this.wrapper = this.element;
                this.element.addClass("km-widget");
            },
            destroy: function() {
                aO.fn.destroy.call(this);
                this.element.kendoDestroy();
            },
            options: {
                prefix: "Mobile"
            },
            events: [],
            view: function() {
                var aT = this.element.closest(W.roleSelector("view splitview modalview drawer"));
                return W.widgetInstance(aT, W.mobile.ui) || m;
            },
            viewHasNativeScrolling: function() {
                var aT = this.view();
                return aT && aT.options.useNativeScrolling;
            },
            container: function() {
                var aT = this.element.closest(W.roleSelector("view layout modalview drawer splitview"));
                return W.widgetInstance(aT.eq(0), W.mobile.ui) || m;
            }
        });
        D(W.mobile, {
            init: function(aT) {
                W.init(aT, W.mobile.ui, W.ui, W.dataviz.ui);
            },
            appLevelNativeScrolling: function() {
                return W.mobile.application && W.mobile.application.options && W.mobile.application.options.useNativeScrolling;
            },
            roles: {},
            ui: {
                Widget: ab,
                DataBoundWidget: q.extend(ab.prototype),
                roles: {},
                plugin: function(aT) {
                    W.ui.plugin(aT, W.mobile.ui, "Mobile");
                }
            }
        });
        r(W.dataviz, {
            init: function(aT) {
                W.init(aT, W.dataviz.ui);
            },
            ui: {
                roles: {},
                themes: {},
                views: [],
                plugin: function(aT) {
                    W.ui.plugin(aT, W.dataviz.ui);
                }
            },
            roles: {}
        });
        W.touchScroller = function(aT, aU) {
            if (!aU) {
                aU = {};
            }
            aU.useNative = true;
            return b(aT).map(function(aW, aV) {
                aV = b(aV);
                if (aE.kineticScrollNeeded && W.mobile.ui.Scroller && !aV.data("kendoMobileScroller")) {
                    aV.kendoMobileScroller(aU);
                    return aV.data("kendoMobileScroller");
                } else {
                    return false;
                }
            })[0];
        }
        ;
        W.preventDefault = function(aT) {
            aT.preventDefault();
        }
        ;
        W.widgetInstance = function(aT, aY) {
            var aX = aT.data(W.ns + "role"), a0 = [], aU, aW;
            if (aX) {
                if (aX === "content") {
                    aX = "scroller";
                }
                if (aY) {
                    if (aY[0]) {
                        for (aU = 0,
                        aW = aY.length; 
                        aU < aW; 
                        aU++) {
                            a0.push(aY[aU].roles[aX]);
                        }
                    } else {
                        a0.push(aY.roles[aX]);
                    }
                } else {
                    a0 = [W.ui.roles[aX], W.dataviz.ui.roles[aX], W.mobile.ui.roles[aX]];
                }
                if (aX.indexOf(".") >= 0) {
                    a0 = [W.getter(aX)(aP)];
                }
                for (aU = 0,
                aW = a0.length; 
                aU < aW; 
                aU++) {
                    var aZ = a0[aU];
                    if (aZ) {
                        var aV = aT.data("kendo" + aZ.fn.options.prefix + aZ.fn.options.name);
                        if (aV) {
                            return aV;
                        }
                    }
                }
            }
        }
        ;
        W.onResize = function(aT) {
            var aU = aT;
            if (aE.mobileOS.android) {
                aU = function() {
                    setTimeout(aT, 600);
                }
                ;
            }
            b(aP).on(aE.resize, aU);
            return aU;
        }
        ;
        W.unbindResize = function(aT) {
            b(aP).off(aE.resize, aT);
        }
        ;
        W.attrValue = function(aT, aU) {
            return aT.data(W.ns + aU);
        }
        ;
        W.days = {
            Sunday: 0,
            Monday: 1,
            Tuesday: 2,
            Wednesday: 3,
            Thursday: 4,
            Friday: 5,
            Saturday: 6
        };
        function E(aT, aU) {
            var aV = aT.nodeName.toLowerCase();
            return (/input|select|textarea|button|object/.test(aV) ? !aT.disabled : "a" === aV ? aT.href || aU : aU) && aN(aT);
        }
        function aN(aT) {
            return b.expr.filters.visible(aT) && !b(aT).parents().addBack().filter(function() {
                return b.css(this, "visibility") === "hidden";
            }).length;
        }
        b.extend(b.expr[":"], {
            kendoFocusable: function(aT) {
                var aU = b.attr(aT, "tabindex");
                return E(aT, !isNaN(aU) && aU > -1);
            }
        });
        var ac = ["mousedown", "mousemove", "mouseenter", "mouseleave", "mouseover", "mouseout", "mouseup", "click"];
        var C = "label, input, [data-rel=external]";
        var ad = {
            setupMouseMute: function() {
                var aV = 0
                  , aW = ac.length
                  , aT = document.documentElement;
                if (ad.mouseTrap || !aE.eventCapture) {
                    return;
                }
                ad.mouseTrap = true;
                ad.bustClick = false;
                ad.captureMouse = false;
                var aU = function(aX) {
                    if (ad.captureMouse) {
                        if (aX.type === "click") {
                            if (ad.bustClick && !b(aX.target).is(C)) {
                                aX.preventDefault();
                                aX.stopPropagation();
                            }
                        } else {
                            aX.stopPropagation();
                        }
                    }
                }
                ;
                for (; 
                aV < aW; 
                aV++) {
                    aT.addEventListener(ac[aV], aU, true);
                }
            },
            muteMouse: function(aT) {
                ad.captureMouse = true;
                if (aT.data.bustClick) {
                    ad.bustClick = true;
                }
                clearTimeout(ad.mouseTrapTimeoutID);
            },
            unMuteMouse: function() {
                clearTimeout(ad.mouseTrapTimeoutID);
                ad.mouseTrapTimeoutID = setTimeout(function() {
                    ad.captureMouse = false;
                    ad.bustClick = false;
                }, 400);
            }
        };
        var z = {
            down: "touchstart mousedown",
            move: "mousemove touchmove",
            up: "mouseup touchend touchcancel",
            cancel: "mouseleave touchcancel"
        };
        if (aE.touch && (aE.mobileOS.ios || aE.mobileOS.android)) {
            z = {
                down: "touchstart",
                move: "touchmove",
                up: "touchend touchcancel",
                cancel: "touchcancel"
            };
        } else {
            if (aE.pointers) {
                z = {
                    down: "pointerdown",
                    move: "pointermove",
                    up: "pointerup",
                    cancel: "pointercancel pointerleave"
                };
            } else {
                if (aE.msPointers) {
                    z = {
                        down: "MSPointerDown",
                        move: "MSPointerMove",
                        up: "MSPointerUp",
                        cancel: "MSPointerCancel MSPointerLeave"
                    };
                }
            }
        }
        if (aE.msPointers && !("onmspointerenter" in aP)) {
            b.each({
                MSPointerEnter: "MSPointerOver",
                MSPointerLeave: "MSPointerOut"
            }, function(aU, aT) {
                b.event.special[aU] = {
                    delegateType: aT,
                    bindType: aT,
                    handle: function(aV) {
                        var aY, aZ = this, aX = aV.relatedTarget, aW = aV.handleObj;
                        if (!aX || aX !== aZ && !b.contains(aZ, aX)) {
                            aV.type = aW.origType;
                            aY = aW.handler.apply(this, arguments);
                            aV.type = aT;
                        }
                        return aY;
                    }
                };
            });
        }
        var J = function(aT) {
            return z[aT] || aT;
        }
          , A = /([^ ]+)/g;
        W.applyEventMap = function(aT, aU) {
            aT = aT.replace(A, J);
            if (aU) {
                aT = aT.replace(A, "$1." + aU);
            }
            return aT;
        }
        ;
        var ak = b.fn.on;
        function X(aU, aT) {
            return new X.fn.init(aU,aT);
        }
        D(true, X, b);
        X.fn = X.prototype = new b();
        X.fn.constructor = X;
        X.fn.init = function(aU, aT) {
            if (aT && aT instanceof b && !(aT instanceof X)) {
                aT = X(aT);
            }
            return b.fn.init.call(this, aU, aT, ax);
        }
        ;
        X.fn.init.prototype = X.fn;
        var ax = X(document);
        D(X.fn, {
            handler: function(aT) {
                this.data("handler", aT);
                return this;
            },
            autoApplyNS: function(aT) {
                this.data("kendoNS", aT || W.guid());
                return this;
            },
            on: function() {
                var a0 = this
                  , aY = a0.data("kendoNS");
                if (arguments.length === 1) {
                    return ak.call(a0, arguments[0]);
                }
                var aW = a0
                  , aT = aC.call(arguments);
                if (typeof aT[aT.length - 1] === aM) {
                    aT.pop();
                }
                var aV = aT[aT.length - 1]
                  , aX = W.applyEventMap(aT[0], aY);
                if (aE.mouseAndTouchPresent && aX.search(/mouse|click/) > -1 && this[0] !== document.documentElement) {
                    ad.setupMouseMute();
                    var aZ = aT.length === 2 ? null  : aT[1]
                      , aU = aX.indexOf("click") > -1 && aX.indexOf("touchend") > -1;
                    ak.call(this, {
                        touchstart: ad.muteMouse,
                        touchend: ad.unMuteMouse
                    }, aZ, {
                        bustClick: aU
                    });
                }
                if (typeof aV === aD) {
                    aW = a0.data("handler");
                    aV = aW[aV];
                    aT[aT.length - 1] = function(a1) {
                        aV.call(aW, a1);
                    }
                    ;
                }
                aT[0] = aX;
                ak.apply(a0, aT);
                return a0;
            },
            kendoDestroy: function(aT) {
                aT = aT || this.data("kendoNS");
                if (aT) {
                    this.off("." + aT);
                }
                return this;
            }
        });
        W.jQuery = X;
        W.eventMap = z;
        W.timezone = function() {
            var aZ = {
                Jan: 0,
                Feb: 1,
                Mar: 2,
                Apr: 3,
                May: 4,
                Jun: 5,
                Jul: 6,
                Aug: 7,
                Sep: 8,
                Oct: 9,
                Nov: 10,
                Dec: 11
            };
            var aW = {
                Sun: 0,
                Mon: 1,
                Tue: 2,
                Wed: 3,
                Thu: 4,
                Fri: 5,
                Sat: 6
            };
            function a2(bd, ba) {
                var a6;
                var bb;
                var a9;
                var a7 = ba[3];
                var a8 = ba[4];
                var bc = ba[5];
                var a5 = ba[8];
                if (!a5) {
                    ba[8] = a5 = {};
                }
                if (a5[bd]) {
                    return a5[bd];
                }
                if (!isNaN(a8)) {
                    a6 = new Date(Date.UTC(bd, aZ[a7], a8, bc[0], bc[1], bc[2], 0));
                } else {
                    if (a8.indexOf("last") === 0) {
                        a6 = new Date(Date.UTC(bd, aZ[a7] + 1, 1, bc[0] - 24, bc[1], bc[2], 0));
                        bb = aW[a8.substr(4, 3)];
                        a9 = a6.getUTCDay();
                        a6.setUTCDate(a6.getUTCDate() + bb - a9 - (bb > a9 ? 7 : 0));
                    } else {
                        if (a8.indexOf(">=") >= 0) {
                            a6 = new Date(Date.UTC(bd, aZ[a7], a8.substr(5), bc[0], bc[1], bc[2], 0));
                            bb = aW[a8.substr(0, 3)];
                            a9 = a6.getUTCDay();
                            a6.setUTCDate(a6.getUTCDate() + bb - a9 + (bb < a9 ? 7 : 0));
                        }
                    }
                }
                return a5[bd] = a6;
            }
            function aX(a9, a7, bb) {
                a7 = a7[bb];
                if (!a7) {
                    var a8 = bb.split(":");
                    var a5 = 0;
                    if (a8.length > 1) {
                        a5 = a8[0] * 60 + Number(a8[1]);
                    }
                    return [-1000000, "max", "-", "Jan", 1, [0, 0, 0], a5, "-"];
                }
                var ba = new Date(a9).getUTCFullYear();
                a7 = jQuery.grep(a7, function(bd) {
                    var bc = bd[0];
                    var be = bd[1];
                    return bc <= ba && (be >= ba || bc == ba && be == "only" || be == "max");
                });
                a7.push(a9);
                a7.sort(function(bc, bd) {
                    if (typeof bc != "number") {
                        bc = Number(a2(ba, bc));
                    }
                    if (typeof bd != "number") {
                        bd = Number(a2(ba, bd));
                    }
                    return bc - bd;
                });
                var a6 = a7[jQuery.inArray(a9, a7) - 1] || a7[a7.length - 1];
                return isNaN(a6) ? a6 : null ;
            }
            function aY(a8, bb, a6) {
                var ba = bb[a6];
                if (typeof ba === "string") {
                    ba = bb[ba];
                }
                if (!ba) {
                    throw new Error('Timezone "' + a6 + '" is either incorrect, or kendo.timezones.min.js is not included.');
                }
                for (var a5 = ba.length - 1; 
                a5 >= 0; 
                a5--) {
                    var a7 = ba[a5][3];
                    if (a7 && a8 > a7) {
                        break;
                    }
                }
                var a9 = ba[a5 + 1];
                if (!a9) {
                    throw new Error('Timezone "' + a6 + '" not found on ' + a8 + ".");
                }
                return a9;
            }
            function a4(a7, a9, a5, a6) {
                if (typeof a7 != ag) {
                    a7 = Date.UTC(a7.getFullYear(), a7.getMonth(), a7.getDate(), a7.getHours(), a7.getMinutes(), a7.getSeconds(), a7.getMilliseconds());
                }
                var a8 = aY(a7, a9, a6);
                return {
                    zone: a8,
                    rule: aX(a7, a5, a8[1])
                };
            }
            function a0(a8, a7) {
                if (a7 == "Etc/UTC" || a7 == "Etc/GMT") {
                    return 0;
                }
                var a5 = a4(a8, this.zones, this.rules, a7);
                var a9 = a5.zone;
                var a6 = a5.rule;
                return W.parseFloat(a6 ? a9[0] - a6[6] : a9[0]);
            }
            function aT(a9, a8) {
                var a6 = a4(a9, this.zones, this.rules, a8);
                var ba = a6.zone;
                var a7 = a6.rule;
                var a5 = ba[2];
                if (a5.indexOf("/") >= 0) {
                    return a5.split("/")[a7 && +a7[6] ? 1 : 0];
                } else {
                    if (a5.indexOf("%s") >= 0) {
                        return a5.replace("%s", !a7 || a7[7] == "-" ? "" : a7[7]);
                    }
                }
                return a5;
            }
            function aV(a5, a7, a9) {
                if (typeof a7 == aD) {
                    a7 = this.offset(a5, a7);
                }
                if (typeof a9 == aD) {
                    a9 = this.offset(a5, a9);
                }
                var a6 = a5.getTimezoneOffset();
                a5 = new Date(a5.getTime() + (a7 - a9) * 60000);
                var a8 = a5.getTimezoneOffset();
                return new Date(a5.getTime() + (a8 - a6) * 60000);
            }
            function aU(a5, a6) {
                return this.convert(a5, a5.getTimezoneOffset(), a6);
            }
            function a1(a5, a6) {
                return this.convert(a5, a6, a5.getTimezoneOffset());
            }
            function a3(a5) {
                return this.apply(new Date(a5), "Etc/UTC");
            }
            return {
                zones: {},
                rules: {},
                offset: a0,
                convert: aV,
                apply: aU,
                remove: a1,
                abbr: aT,
                toLocalDate: a3
            };
        }();
        W.date = function() {
            var a4 = 60000
              , a3 = 86400000;
            function aU(bb, bc) {
                if (bc === 0 && bb.getHours() === 23) {
                    bb.setHours(bb.getHours() + 2);
                    return true;
                }
                return false;
            }
            function a5(bb, bc, bd) {
                var be = bb.getHours();
                bd = bd || 1;
                bc = (bc - bb.getDay() + 7 * bd) % 7;
                bb.setDate(bb.getDate() + bc);
                aU(bb, be);
            }
            function aV(bb, bc, bd) {
                bb = new Date(bb);
                a5(bb, bc, bd);
                return bb;
            }
            function aW(bb) {
                return new Date(bb.getFullYear(),bb.getMonth(),1);
            }
            function a2(bb) {
                var bd = new Date(bb.getFullYear(),bb.getMonth() + 1,0)
                  , bc = aW(bb)
                  , be = Math.abs(bd.getTimezoneOffset() - bc.getTimezoneOffset());
                if (be) {
                    bd.setHours(bc.getHours() + be / 60);
                }
                return bd;
            }
            function aX(bb) {
                bb = new Date(bb.getFullYear(),bb.getMonth(),bb.getDate(),0,0,0);
                aU(bb, 0);
                return bb;
            }
            function ba(bb) {
                return Date.UTC(bb.getFullYear(), bb.getMonth(), bb.getDate(), bb.getHours(), bb.getMinutes(), bb.getSeconds(), bb.getMilliseconds());
            }
            function aY(bb) {
                return bb.getTime() - aX(bb);
            }
            function a0(bg, bc, bb) {
                var be = aY(bc), bd = aY(bb), bf;
                if (!bg || be == bd) {
                    return true;
                }
                if (bc >= bb) {
                    bb += a3;
                }
                bf = aY(bg);
                if (be > bf) {
                    bf += a3;
                }
                if (bd < be) {
                    bd += a3;
                }
                return bf >= be && bf <= bd;
            }
            function aZ(bg, bc, bb) {
                var be = bc.getTime(), bd = bb.getTime(), bf;
                if (be >= bd) {
                    bd += a3;
                }
                bf = bg.getTime();
                return bf >= be && bf <= bd;
            }
            function aT(bb, bd) {
                var bc = bb.getHours();
                bb = new Date(bb);
                a7(bb, bd * a3);
                aU(bb, bc);
                return bb;
            }
            function a7(bb, be, bd) {
                var bf = bb.getTimezoneOffset();
                var bc;
                bb.setTime(bb.getTime() + be);
                if (!bd) {
                    bc = bb.getTimezoneOffset() - bf;
                    bb.setTime(bb.getTime() + bc * a4);
                }
            }
            function a6(bb, bc) {
                bb = new Date(W.date.getDate(bb).getTime() + W.date.getMilliseconds(bc));
                aU(bb, bc.getHours());
                return bb;
            }
            function a8() {
                return aX(new Date());
            }
            function a1(bb) {
                return aX(bb).getTime() == a8().getTime();
            }
            function a9(bb) {
                var bc = new Date(1980,1,1,0,0,0);
                if (bb) {
                    bc.setHours(bb.getHours(), bb.getMinutes(), bb.getSeconds(), bb.getMilliseconds());
                }
                return bc;
            }
            return {
                adjustDST: aU,
                dayOfWeek: aV,
                setDayOfWeek: a5,
                getDate: aX,
                isInDateRange: aZ,
                isInTimeRange: a0,
                isToday: a1,
                nextDay: function(bb) {
                    return aT(bb, 1);
                },
                previousDay: function(bb) {
                    return aT(bb, -1);
                },
                toUtcTime: ba,
                MS_PER_DAY: a3,
                MS_PER_HOUR: 60 * a4,
                MS_PER_MINUTE: a4,
                setTime: a7,
                setHours: a6,
                addDays: aT,
                today: a8,
                toInvariantTime: a9,
                firstDayOfMonth: aW,
                lastDayOfMonth: a2,
                getMilliseconds: aY
            };
        }();
        W.stripWhitespace = function(aU) {
            if (document.createNodeIterator) {
                var aW = document.createNodeIterator(aU, NodeFilter.SHOW_TEXT, function(aX) {
                    return aX.parentNode == aU ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;
                }, false);
                while (aW.nextNode()) {
                    if (aW.referenceNode && !aW.referenceNode.textContent.trim()) {
                        aW.referenceNode.parentNode.removeChild(aW.referenceNode);
                    }
                }
            } else {
                for (var aV = 0; 
                aV < aU.childNodes.length; 
                aV++) {
                    var aT = aU.childNodes[aV];
                    if (aT.nodeType == 3 && !/\S/.test(aT.nodeValue)) {
                        aU.removeChild(aT);
                        aV--;
                    }
                    if (aT.nodeType == 1) {
                        W.stripWhitespace(aT);
                    }
                }
            }
        }
        ;
        var e = aP.requestAnimationFrame || aP.webkitRequestAnimationFrame || aP.mozRequestAnimationFrame || aP.oRequestAnimationFrame || aP.msRequestAnimationFrame || function(aT) {
            setTimeout(aT, 1000 / 60);
        }
        ;
        W.animationFrame = function(aT) {
            e.call(aP, aT);
        }
        ;
        var f = [];
        W.queueAnimation = function(aT) {
            f[f.length] = aT;
            if (f.length === 1) {
                W.runNextAnimation();
            }
        }
        ;
        W.runNextAnimation = function() {
            W.animationFrame(function() {
                if (f[0]) {
                    f.shift()();
                    if (f[0]) {
                        W.runNextAnimation();
                    }
                }
            });
        }
        ;
        W.parseQueryStringParams = function(aY) {
            var aX = aY.split("?")[1] || ""
              , aW = {}
              , aV = aX.split(/&|=/)
              , aU = aV.length
              , aT = 0;
            for (; 
            aT < aU; 
            aT += 2) {
                if (aV[aT] !== "") {
                    aW[decodeURIComponent(aV[aT])] = decodeURIComponent(aV[aT + 1]);
                }
            }
            return aW;
        }
        ;
        W.elementUnderCursor = function(aT) {
            if (typeof aT.x.client != "undefined") {
                return document.elementFromPoint(aT.x.client, aT.y.client);
            }
        }
        ;
        W.wheelDeltaY = function(aW) {
            var aV = aW.originalEvent, aU = aV.wheelDeltaY, aT;
            if (aV.wheelDelta) {
                if (aU === aL || aU) {
                    aT = aV.wheelDelta;
                }
            } else {
                if (aV.detail && aV.axis === aV.VERTICAL_AXIS) {
                    aT = -aV.detail * 10;
                }
            }
            return aT;
        }
        ;
        W.throttle = function(aU, aT) {
            var aX;
            var aV = 0;
            if (!aT || aT <= 0) {
                return aU;
            }
            var aW = function() {
                var a1 = this;
                var aZ = +new Date() - aV;
                var aY = arguments;
                function a0() {
                    aU.apply(a1, aY);
                    aV = +new Date();
                }
                if (!aV) {
                    return a0();
                }
                if (aX) {
                    clearTimeout(aX);
                }
                if (aZ > aT) {
                    a0();
                } else {
                    aX = setTimeout(a0, aT - aZ);
                }
            }
            ;
            aW.cancel = function() {
                clearTimeout(aX);
            }
            ;
            return aW;
        }
        ;
        W.caret = function(aU, a1, aV) {
            var aY;
            var aW = a1 !== aL;
            if (aV === aL) {
                aV = a1;
            }
            if (aU[0]) {
                aU = aU[0];
            }
            if (aW && aU.disabled) {
                return;
            }
            try {
                if (aU.selectionStart !== aL) {
                    if (aW) {
                        aU.focus();
                        aU.setSelectionRange(a1, aV);
                    } else {
                        a1 = [aU.selectionStart, aU.selectionEnd];
                    }
                } else {
                    if (document.selection) {
                        if (b(aU).is(":visible")) {
                            aU.focus();
                        }
                        aY = aU.createTextRange();
                        if (aW) {
                            aY.collapse(true);
                            aY.moveStart("character", a1);
                            aY.moveEnd("character", aV - a1);
                            aY.select();
                        } else {
                            var aX = aY.duplicate(), a0, aZ;
                            aY.moveToBookmark(document.selection.createRange().getBookmark());
                            aX.setEndPoint("EndToStart", aY);
                            a0 = aX.text.length;
                            aZ = a0 + aY.text.length;
                            a1 = [a0, aZ];
                        }
                    }
                }
            } catch (aT) {
                a1 = [];
            }
            return a1;
        }
        ;
        W.compileMobileDirective = function(aU, aV) {
            var aT = aP.angular;
            aU.attr("data-" + W.ns + "role", aU[0].tagName.toLowerCase().replace("kendo-mobile-", "").replace("-", ""));
            aT.element(aU).injector().invoke(["$compile", function(aW) {
                aW(aU)(aV);
                if (!/^\$(digest|apply)$/.test(aV.$$phase)) {
                    aV.$digest();
                }
            }
            ]);
            return W.widgetInstance(aU, W.mobile.ui);
        }
        ;
        W.antiForgeryTokens = function() {
            var aV = {}
              , aU = b("meta[name=csrf-token],meta[name=_csrf]").attr("content")
              , aT = b("meta[name=csrf-param],meta[name=_csrf_header]").attr("content");
            b("input[name^='__RequestVerificationToken']").each(function() {
                aV[this.name] = this.value;
            });
            if (aT !== aL && aU !== aL) {
                aV[aT] = aU;
            }
            return aV;
        }
        ;
        W.cycleForm = function(aV) {
            var aT = aV.find("input, .k-widget").first();
            var aW = aV.find("button, .k-button").last();
            function aU(aX) {
                var aY = W.widgetInstance(aX);
                if (aY && aY.focus) {
                    aY.focus();
                } else {
                    aX.focus();
                }
            }
            aW.on("keydown", function(aX) {
                if (aX.keyCode == W.keys.TAB && !aX.shiftKey) {
                    aX.preventDefault();
                    aU(aT);
                }
            });
            aT.on("keydown", function(aX) {
                if (aX.keyCode == W.keys.TAB && aX.shiftKey) {
                    aX.preventDefault();
                    aU(aW);
                }
            });
        }
        ;
        (function() {
            function aV(aZ, a0, a5, a4) {
                var a1 = b("<form>").attr({
                    action: a5,
                    method: "POST",
                    target: a4
                });
                var aY = W.antiForgeryTokens();
                aY.fileName = a0;
                var a3 = aZ.split(";base64,");
                aY.contentType = a3[0].replace("data:", "");
                aY.base64 = a3[1];
                for (var a2 in aY) {
                    if (aY.hasOwnProperty(a2)) {
                        b("<input>").attr({
                            value: aY[a2],
                            name: a2,
                            type: "hidden"
                        }).appendTo(a1);
                    }
                }
                a1.appendTo("body").submit().remove();
            }
            var aU = document.createElement("a");
            var aT = "download" in aU && !W.support.browser.edge;
            function aW(a2, a3) {
                var a0 = a2;
                if (typeof a2 == "string") {
                    var a5 = a2.split(";base64,");
                    var a1 = a5[0];
                    var aZ = atob(a5[1]);
                    var aY = new Uint8Array(aZ.length);
                    for (var a4 = 0; 
                    a4 < aZ.length; 
                    a4++) {
                        aY[a4] = aZ.charCodeAt(a4);
                    }
                    a0 = new Blob([aY.buffer],{
                        type: a1
                    });
                }
                navigator.msSaveBlob(a0, a3);
            }
            function aX(aY, a0) {
                if (aP.Blob && aY instanceof Blob) {
                    aY = URL.createObjectURL(aY);
                }
                aU.download = a0;
                aU.href = aY;
                var aZ = document.createEvent("MouseEvents");
                aZ.initMouseEvent("click", true, false, aP, 0, 0, 0, 0, 0, false, false, false, false, 0, null );
                aU.dispatchEvent(aZ);
            }
            W.saveAs = function(aY) {
                var aZ = aV;
                if (!aY.forceProxy) {
                    if (aT) {
                        aZ = aX;
                    } else {
                        if (navigator.msSaveBlob) {
                            aZ = aW;
                        }
                    }
                }
                aZ(aY.dataURI, aY.fileName, aY.proxyURL, aY.proxyTarget);
            }
            ;
        }());
        W.proxyModelSetters = function au(aT) {
            var aU = {};
            Object.keys(aT).forEach(function(aV) {
                Object.defineProperty(aU, aV, {
                    get: function() {
                        return aT[aV];
                    },
                    set: function(aW) {
                        aT[aV] = aW;
                        aT.dirty = true;
                    }
                });
            });
            return aU;
        }
        ;
    }($telerik.$, window));
    return window.kendo;
}, typeof define == "function" && define.amd ? define : function(a, b, c) {
    (c || b)();
}
));



(function(b, a) {
    a("kendo.data", ["kendo.core", "kendo.data.odata", "kendo.data.xml"], b);
}(function() {
    var a = {
        id: "data",
        name: "Data source",
        category: "framework",
        description: "Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.",
        depends: ["core"],
        features: [{
            id: "data-odata",
            name: "OData",
            description: "Support for accessing Open Data Protocol (OData) services.",
            depends: ["data.odata"]
        }, {
            id: "data-signalr",
            name: "SignalR",
            description: "Support for binding to SignalR hubs.",
            depends: ["data.signalr"]
        }, {
            id: "data-XML",
            name: "XML",
            description: "Support for binding to XML.",
            depends: ["data.xml"]
        }]
    };
    (function(b, a0) {
        var D = b.extend, aC = b.proxy, ab = b.isPlainObject, Y = b.isEmptyObject, W = b.isArray, M = b.grep, c = b.ajax, ag, y = b.each, am = b.noop, ad = window.kendo, Z = ad.isFunction, au = ad.Observable, i = ad.Class, aU = "string", H = "function", q = "create", aG = "read", a2 = "update", x = "destroy", h = "change", aW = "sync", J = "get", B = "error", aN = "requestStart", aB = "progress", aM = "requestEnd", r = [q, aG, a2, x], P = function(a5) {
            return a5;
        }
        , L = ad.getter, aV = ad.stringify, ah = Math, aD = [].push, ac = [].join, aA = [].pop, aR = [].splice, aP = [].shift, aQ = [].slice, a1 = [].unshift, aY = {}.toString, aT = ad.support.stableSort, v = /^\/Date\((.*?)\)\/$/, ak = /(\r+|\n+)/g, aF = /(?=['\\])/g;
        var av = au.extend({
            init: function(a5, a7) {
                var a6 = this;
                a6.type = a7 || aw;
                au.fn.init.call(a6);
                a6.length = a5.length;
                a6.wrapAll(a5, a6);
            },
            at: function(a5) {
                return this[a5];
            },
            toJSON: function() {
                var a5, a7 = this.length, a8, a6 = new Array(a7);
                for (a5 = 0; 
                a5 < a7; 
                a5++) {
                    a8 = this[a5];
                    if (a8 instanceof aw) {
                        a8 = a8.toJSON();
                    }
                    a6[a5] = a8;
                }
                return a6;
            },
            parent: am,
            wrapAll: function(a8, a9) {
                var ba = this, a5, a6, a7 = function() {
                    return ba;
                }
                ;
                a9 = a9 || [];
                for (a5 = 0,
                a6 = a8.length; 
                a5 < a6; 
                a5++) {
                    a9[a5] = ba.wrap(a8[a5], a7);
                }
                return a9;
            },
            wrap: function(a5, a7) {
                var a8 = this, a6;
                if (a5 !== null  && aY.call(a5) === "[object Object]") {
                    a6 = a5 instanceof a8.type || a5 instanceof aj;
                    if (!a6) {
                        a5 = a5 instanceof aw ? a5.toJSON() : a5;
                        a5 = new a8.type(a5);
                    }
                    a5.parent = a7;
                    a5.bind(h, function(a9) {
                        a8.trigger(h, {
                            field: a9.field,
                            node: a9.node,
                            index: a9.index,
                            items: a9.items || [this],
                            action: a9.node ? a9.action || "itemloaded" : "itemchange"
                        });
                    });
                }
                return a5;
            },
            push: function() {
                var a5 = this.length, a6 = this.wrapAll(arguments), a7;
                a7 = aD.apply(this, a6);
                this.trigger(h, {
                    action: "add",
                    index: a5,
                    items: a6
                });
                return a7;
            },
            slice: aQ,
            sort: [].sort,
            join: ac,
            pop: function() {
                var a5 = this.length
                  , a6 = aA.apply(this);
                if (a5) {
                    this.trigger(h, {
                        action: "remove",
                        index: a5 - 1,
                        items: [a6]
                    });
                }
                return a6;
            },
            splice: function(a7, a5, a8) {
                var a9 = this.wrapAll(aQ.call(arguments, 2)), bb, a6, ba;
                bb = aR.apply(this, [a7, a5].concat(a9));
                if (bb.length) {
                    this.trigger(h, {
                        action: "remove",
                        index: a7,
                        items: bb
                    });
                    for (a6 = 0,
                    ba = bb.length; 
                    a6 < ba; 
                    a6++) {
                        if (bb[a6] && bb[a6].children) {
                            bb[a6].unbind(h);
                        }
                    }
                }
                if (a8) {
                    this.trigger(h, {
                        action: "add",
                        index: a7,
                        items: a9
                    });
                }
                return bb;
            },
            shift: function() {
                var a5 = this.length
                  , a6 = aP.apply(this);
                if (a5) {
                    this.trigger(h, {
                        action: "remove",
                        index: 0,
                        items: [a6]
                    });
                }
                return a6;
            },
            unshift: function() {
                var a5 = this.wrapAll(arguments), a6;
                a6 = a1.apply(this, a5);
                this.trigger(h, {
                    action: "add",
                    index: 0,
                    items: a5
                });
                return a6;
            },
            indexOf: function(a6) {
                var a8 = this, a5, a7;
                for (a5 = 0,
                a7 = a8.length; 
                a5 < a7; 
                a5++) {
                    if (a8[a5] === a6) {
                        return a5;
                    }
                }
                return -1;
            },
            forEach: function(a5) {
                var a6 = 0
                  , a7 = this.length;
                for (; 
                a6 < a7; 
                a6++) {
                    a5(this[a6], a6, this);
                }
            },
            map: function(a5) {
                var a6 = 0
                  , a8 = []
                  , a7 = this.length;
                for (; 
                a6 < a7; 
                a6++) {
                    a8[a6] = a5(this[a6], a6, this);
                }
                return a8;
            },
            reduce: function(a5) {
                var a6 = 0, a8, a7 = this.length;
                if (arguments.length == 2) {
                    a8 = arguments[1];
                } else {
                    if (a6 < a7) {
                        a8 = this[a6++];
                    }
                }
                for (; 
                a6 < a7; 
                a6++) {
                    a8 = a5(a8, this[a6], a6, this);
                }
                return a8;
            },
            reduceRight: function(a5) {
                var a6 = this.length - 1, a7;
                if (arguments.length == 2) {
                    a7 = arguments[1];
                } else {
                    if (a6 > 0) {
                        a7 = this[a6--];
                    }
                }
                for (; 
                a6 >= 0; 
                a6--) {
                    a7 = a5(a7, this[a6], a6, this);
                }
                return a7;
            },
            filter: function(a5) {
                var a6 = 0, a9 = [], a7, a8 = this.length;
                for (; 
                a6 < a8; 
                a6++) {
                    a7 = this[a6];
                    if (a5(a7, a6, this)) {
                        a9[a9.length] = a7;
                    }
                }
                return a9;
            },
            find: function(a5) {
                var a6 = 0, a7, a8 = this.length;
                for (; 
                a6 < a8; 
                a6++) {
                    a7 = this[a6];
                    if (a5(a7, a6, this)) {
                        return a7;
                    }
                }
            },
            every: function(a5) {
                var a6 = 0, a7, a8 = this.length;
                for (; 
                a6 < a8; 
                a6++) {
                    a7 = this[a6];
                    if (!a5(a7, a6, this)) {
                        return false;
                    }
                }
                return true;
            },
            some: function(a5) {
                var a6 = 0, a7, a8 = this.length;
                for (; 
                a6 < a8; 
                a6++) {
                    a7 = this[a6];
                    if (a5(a7, a6, this)) {
                        return true;
                    }
                }
                return false;
            },
            remove: function(a6) {
                var a5 = this.indexOf(a6);
                if (a5 !== -1) {
                    this.splice(a5, 1);
                }
            },
            empty: function() {
                this.splice(0, this.length);
            }
        });
        var ae = av.extend({
            init: function(a5, a7) {
                au.fn.init.call(this);
                this.type = a7 || aw;
                for (var a6 = 0; 
                a6 < a5.length; 
                a6++) {
                    this[a6] = a5[a6];
                }
                this.length = a6;
                this._parent = aC(function() {
                    return this;
                }, this);
            },
            at: function(a5) {
                var a6 = this[a5];
                if (!(a6 instanceof this.type)) {
                    a6 = this[a5] = this.wrap(a6, this._parent);
                } else {
                    a6.parent = this._parent;
                }
                return a6;
            }
        });
        function C(a5, a8, a6, a7) {
            return function(a9) {
                var ba = {}, bb;
                for (bb in a9) {
                    ba[bb] = a9[bb];
                }
                if (a7) {
                    ba.field = a6 + "." + a9.field;
                } else {
                    ba.field = a6;
                }
                if (a8 == h && a5._notifyChange) {
                    a5._notifyChange(ba);
                }
                a5.trigger(a8, ba);
            }
            ;
        }
        var aw = au.extend({
            init: function(a9) {
                var a8 = this, a6, a5, a7 = function() {
                    return a8;
                }
                ;
                au.fn.init.call(this);
                this._handlers = {};
                for (a5 in a9) {
                    a6 = a9[a5];
                    if (typeof a6 === "object" && a6 && !a6.getTime && a5.charAt(0) != "_") {
                        a6 = a8.wrap(a6, a5, a7);
                    }
                    a8[a5] = a6;
                }
                a8.uid = ad.guid();
            },
            shouldSerialize: function(a5) {
                return this.hasOwnProperty(a5) && a5 !== "_handlers" && a5 !== "_events" && typeof this[a5] !== H && a5 !== "uid";
            },
            forEach: function(a5) {
                for (var a6 in this) {
                    if (this.shouldSerialize(a6)) {
                        a5(this[a6], a6);
                    }
                }
            },
            toJSON: function() {
                var a6 = {}, a7, a5;
                for (a5 in this) {
                    if (this.shouldSerialize(a5)) {
                        a7 = this[a5];
                        if (a7 instanceof aw || a7 instanceof av) {
                            a7 = a7.toJSON();
                        }
                        a6[a5] = a7;
                    }
                }
                return a6;
            },
            get: function(a5) {
                var a7 = this, a6;
                a7.trigger(J, {
                    field: a5
                });
                if (a5 === "this") {
                    a6 = a7;
                } else {
                    a6 = ad.getter(a5, true)(a7);
                }
                return a6;
            },
            _set: function(a6, bb) {
                var ba = this;
                var a5 = a6.indexOf(".") >= 0;
                if (a5) {
                    var a9 = a6.split(".")
                      , a8 = "";
                    while (a9.length > 1) {
                        a8 += a9.shift();
                        var a7 = ad.getter(a8, true)(ba);
                        if (a7 instanceof aw) {
                            a7.set(a9.join("."), bb);
                            return a5;
                        }
                        a8 += ".";
                    }
                }
                ad.setter(a6)(ba, bb);
                return a5;
            },
            set: function(a7, a9) {
                var a8 = this
                  , a5 = a7.indexOf(".") >= 0
                  , a6 = ad.getter(a7, true)(a8);
                if (a6 !== a9) {
                    if (a6 instanceof au && this._handlers[a7]) {
                        if (this._handlers[a7].get) {
                            a6.unbind(J, this._handlers[a7].get);
                        }
                        a6.unbind(h, this._handlers[a7].change);
                    }
                    if (!a8.trigger("set", {
                        field: a7,
                        value: a9
                    })) {
                        if (!a5) {
                            a9 = a8.wrap(a9, a7, function() {
                                return a8;
                            });
                        }
                        if (!a8._set(a7, a9) || a7.indexOf("(") >= 0 || a7.indexOf("[") >= 0) {
                            a8.trigger(h, {
                                field: a7
                            });
                        }
                    }
                }
            },
            parent: am,
            wrap: function(ba, a6, bb) {
                var bc = this;
                var a7;
                var a5;
                var bd = aY.call(ba);
                if (ba != null  && (bd === "[object Object]" || bd === "[object Array]")) {
                    var a9 = ba instanceof av;
                    var a8 = ba instanceof u;
                    if (bd === "[object Object]" && !a8 && !a9) {
                        if (!(ba instanceof aw)) {
                            ba = new aw(ba);
                        }
                        a7 = C(bc, J, a6, true);
                        ba.bind(J, a7);
                        a5 = C(bc, h, a6, true);
                        ba.bind(h, a5);
                        bc._handlers[a6] = {
                            get: a7,
                            change: a5
                        };
                    } else {
                        if (bd === "[object Array]" || a9 || a8) {
                            if (!a9 && !a8) {
                                ba = new av(ba);
                            }
                            a5 = C(bc, h, a6, false);
                            ba.bind(h, a5);
                            bc._handlers[a6] = {
                                change: a5
                            };
                        }
                    }
                    ba.parent = bb;
                }
                return ba;
            }
        });
        function A(a6, a8) {
            if (a6 === a8) {
                return true;
            }
            var a7 = b.type(a6), a9 = b.type(a8), a5;
            if (a7 !== a9) {
                return false;
            }
            if (a7 === "date") {
                return a6.getTime() === a8.getTime();
            }
            if (a7 !== "object" && a7 !== "array") {
                return false;
            }
            for (a5 in a6) {
                if (!A(a6[a5], a8[a5])) {
                    return false;
                }
            }
            return true;
        }
        var az = {
            number: function(a5) {
                return ad.parseFloat(a5);
            },
            date: function(a5) {
                return ad.parseDate(a5);
            },
            "boolean": function(a5) {
                if (typeof a5 === aU) {
                    return a5.toLowerCase() === "true";
                }
                return a5 != null  ? !!a5 : a5;
            },
            string: function(a5) {
                return a5 != null  ? a5 + "" : a5;
            },
            "default": function(a5) {
                return a5;
            }
        };
        var w = {
            string: "",
            number: 0,
            date: new Date(),
            "boolean": false,
            "default": ""
        };
        function K(a8, a7) {
            var a5, a6;
            for (a6 in a8) {
                a5 = a8[a6];
                if (ab(a5) && a5.field && a5.field === a7) {
                    return a5;
                } else {
                    if (a5 === a7) {
                        return a5;
                    }
                }
            }
            return null ;
        }
        var aj = aw.extend({
            init: function(a5) {
                var a8 = this;
                if (!a5 || b.isEmptyObject(a5)) {
                    a5 = b.extend({}, a8.defaults, a5);
                    if (a8._initializers) {
                        for (var a6 = 0; 
                        a6 < a8._initializers.length; 
                        a6++) {
                            var a7 = a8._initializers[a6];
                            a5[a7] = a8.defaults[a7]();
                        }
                    }
                }
                aw.fn.init.call(a8, a5);
                a8.dirty = false;
                if (a8.idField) {
                    a8.id = a8.get(a8.idField);
                    if (a8.id === a0) {
                        a8.id = a8._defaultId;
                    }
                }
            },
            shouldSerialize: function(a5) {
                return aw.fn.shouldSerialize.call(this, a5) && a5 !== "uid" && !(this.idField !== "id" && a5 === "id") && a5 !== "dirty" && a5 !== "_accessors";
            },
            _parse: function(a5, ba) {
                var a9 = this, a6 = a5, a7 = a9.fields || {}, a8;
                a5 = a7[a5];
                if (!a5) {
                    a5 = K(a7, a6);
                }
                if (a5) {
                    a8 = a5.parse;
                    if (!a8 && a5.type) {
                        a8 = az[a5.type.toLowerCase()];
                    }
                }
                return a8 ? a8(ba) : ba;
            },
            _notifyChange: function(a6) {
                var a5 = a6.action;
                if (a5 == "add" || a5 == "remove") {
                    this.dirty = true;
                }
            },
            editable: function(a5) {
                a5 = (this.fields || {})[a5];
                return a5 ? a5.editable !== false : true;
            },
            set: function(a5, a8, a6) {
                var a7 = this;
                if (a7.editable(a5)) {
                    a8 = a7._parse(a5, a8);
                    if (!A(a8, a7.get(a5))) {
                        a7.dirty = true;
                        aw.fn.set.call(a7, a5, a8, a6);
                    }
                }
            },
            accept: function(a5) {
                var a8 = this, a7 = function() {
                    return a8;
                }
                , a6;
                for (a6 in a5) {
                    var a9 = a5[a6];
                    if (a6.charAt(0) != "_") {
                        a9 = a8.wrap(a5[a6], a6, a7);
                    }
                    a8._set(a6, a9);
                }
                if (a8.idField) {
                    a8.id = a8.get(a8.idField);
                }
                a8.dirty = false;
            },
            isNew: function() {
                return this.id === this._defaultId;
            }
        });
        aj.define = function(a5, be) {
            if (be === a0) {
                be = a5;
                a5 = aj;
            }
            var bc, bg = D({
                defaults: {}
            }, be), bd, a6, bh, bi, ba, bb, a7 = {}, bf, a9 = bg.id, a8 = [];
            if (a9) {
                bg.idField = a9;
            }
            if (bg.id) {
                delete bg.id;
            }
            if (a9) {
                bg.defaults[a9] = bg._defaultId = "";
            }
            if (aY.call(bg.fields) === "[object Array]") {
                for (ba = 0,
                bb = bg.fields.length; 
                ba < bb; 
                ba++) {
                    a6 = bg.fields[ba];
                    if (typeof a6 === aU) {
                        a7[a6] = {};
                    } else {
                        if (a6.field) {
                            a7[a6.field] = a6;
                        }
                    }
                }
                bg.fields = a7;
            }
            for (bd in bg.fields) {
                a6 = bg.fields[bd];
                bh = a6.type || "default";
                bi = null ;
                bf = bd;
                bd = typeof a6.field === aU ? a6.field : bd;
                if (!a6.nullable) {
                    bi = bg.defaults[bf !== bd ? bf : bd] = a6.defaultValue !== a0 ? a6.defaultValue : w[bh.toLowerCase()];
                    if (typeof bi === "function") {
                        a8.push(bd);
                    }
                }
                if (be.id === bd) {
                    bg._defaultId = bi;
                }
                bg.defaults[bf !== bd ? bf : bd] = bi;
                a6.parse = a6.parse || az[bh];
            }
            if (a8.length > 0) {
                bg._initializers = a8;
            }
            bc = a5.extend(bg);
            bc.define = function(bj) {
                return aj.define(bc, bj);
            }
            ;
            if (bg.fields) {
                bc.fields = bg.fields;
                bc.idField = bg.idField;
            }
            return bc;
        }
        ;
        var l = {
            selector: function(a5) {
                return Z(a5) ? a5 : L(a5);
            },
            compare: function(a5) {
                var a6 = this.selector(a5);
                return function(a7, a8) {
                    a7 = a6(a7);
                    a8 = a6(a8);
                    if (a7 == null  && a8 == null ) {
                        return 0;
                    }
                    if (a7 == null ) {
                        return -1;
                    }
                    if (a8 == null ) {
                        return 1;
                    }
                    if (a7.localeCompare) {
                        return a7.localeCompare(a8);
                    }
                    return a7 > a8 ? 1 : a7 < a8 ? -1 : 0;
                }
                ;
            },
            create: function(a6) {
                var a5 = a6.compare || this.compare(a6.field);
                if (a6.dir == "desc") {
                    return function(a7, a8) {
                        return a5(a8, a7, true);
                    }
                    ;
                }
                return a5;
            },
            combine: function(a5) {
                return function(a6, a7) {
                    var ba = a5[0](a6, a7), a8, a9;
                    for (a8 = 1,
                    a9 = a5.length; 
                    a8 < a9; 
                    a8++) {
                        ba = ba || a5[a8](a6, a7);
                    }
                    return ba;
                }
                ;
            }
        };
        var aS = D({}, l, {
            asc: function(a5) {
                var a6 = this.selector(a5);
                return function(a7, a8) {
                    var a9 = a6(a7);
                    var ba = a6(a8);
                    if (a9 && a9.getTime && ba && ba.getTime) {
                        a9 = a9.getTime();
                        ba = ba.getTime();
                    }
                    if (a9 === ba) {
                        return a7.__position - a8.__position;
                    }
                    if (a9 == null ) {
                        return -1;
                    }
                    if (ba == null ) {
                        return 1;
                    }
                    if (a9.localeCompare) {
                        return a9.localeCompare(ba);
                    }
                    return a9 > ba ? 1 : -1;
                }
                ;
            },
            desc: function(a5) {
                var a6 = this.selector(a5);
                return function(a7, a8) {
                    var a9 = a6(a7);
                    var ba = a6(a8);
                    if (a9 && a9.getTime && ba && ba.getTime) {
                        a9 = a9.getTime();
                        ba = ba.getTime();
                    }
                    if (a9 === ba) {
                        return a7.__position - a8.__position;
                    }
                    if (a9 == null ) {
                        return 1;
                    }
                    if (ba == null ) {
                        return -1;
                    }
                    if (ba.localeCompare) {
                        return ba.localeCompare(a9);
                    }
                    return a9 < ba ? 1 : -1;
                }
                ;
            },
            create: function(a5) {
                return this[a5.dir](a5.field);
            }
        });
        ag = function(a5, a6) {
            var a7, a8 = a5.length, a9 = new Array(a8);
            for (a7 = 0; 
            a7 < a8; 
            a7++) {
                a9[a7] = a6(a5[a7], a7, a5);
            }
            return a9;
        }
        ;
        var ay = function() {
            function a6(a7) {
                return a7.replace(aF, "\\").replace(ak, "");
            }
            function a5(bb, a7, a8, ba) {
                var a9;
                if (a8 != null ) {
                    if (typeof a8 === aU) {
                        a8 = a6(a8);
                        a9 = v.exec(a8);
                        if (a9) {
                            a8 = new Date(+a9[1]);
                        } else {
                            if (ba) {
                                a8 = "'" + a8.toLowerCase() + "'";
                                a7 = "((" + a7 + " || '')+'').toLowerCase()";
                            } else {
                                a8 = "'" + a8 + "'";
                            }
                        }
                    }
                    if (a8.getTime) {
                        a7 = "(" + a7 + "&&" + a7 + ".getTime?" + a7 + ".getTime():" + a7 + ")";
                        a8 = a8.getTime();
                    }
                }
                return a7 + " " + bb + " " + a8;
            }
            return {
                quote: function(a7) {
                    if (a7 && a7.getTime) {
                        return "new Date(" + a7.getTime() + ")";
                    }
                    if (typeof a7 == "string") {
                        return "'" + a6(a7) + "'";
                    }
                    return "" + a7;
                },
                eq: function(a7, a8, a9) {
                    return a5("==", a7, a8, a9);
                },
                neq: function(a7, a8, a9) {
                    return a5("!=", a7, a8, a9);
                },
                gt: function(a7, a8, a9) {
                    return a5(">", a7, a8, a9);
                },
                gte: function(a7, a8, a9) {
                    return a5(">=", a7, a8, a9);
                },
                lt: function(a7, a8, a9) {
                    return a5("<", a7, a8, a9);
                },
                lte: function(a7, a8, a9) {
                    return a5("<=", a7, a8, a9);
                },
                startswith: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".lastIndexOf('" + a8 + "', 0) == 0";
                },
                doesnotstartwith: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".lastIndexOf('" + a8 + "', 0) == -1";
                },
                endswith: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".indexOf('" + a8 + "', " + a7 + ".length - " + (a8 || "").length + ") >= 0";
                },
                doesnotendwith: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".indexOf('" + a8 + "', " + a7 + ".length - " + (a8 || "").length + ") < 0";
                },
                contains: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".indexOf('" + a8 + "') >= 0";
                },
                doesnotcontain: function(a7, a8, a9) {
                    if (a9) {
                        a7 = "(" + a7 + " || '').toLowerCase()";
                        if (a8) {
                            a8 = a8.toLowerCase();
                        }
                    }
                    if (a8) {
                        a8 = a6(a8);
                    }
                    return a7 + ".indexOf('" + a8 + "') == -1";
                },
                isempty: function(a7) {
                    return a7 + " === ''";
                },
                isnotempty: function(a7) {
                    return a7 + " !== ''";
                },
                isnull: function(a7) {
                    return a7 + " === null || " + a7 + " === undefined";
                },
                isnotnull: function(a7) {
                    return a7 + " !== null && " + a7 + " !== undefined";
                }
            };
        }();
        function aE(a5) {
            this.data = a5 || [];
        }
        aE.filterExpr = function(a6) {
            var a7 = [], be = {
                and: " && ",
                or: " || "
            }, bc, bd, ba, a5, a9 = [], bg = [], a8, bf, bb = a6.filters;
            for (bc = 0,
            bd = bb.length; 
            bc < bd; 
            bc++) {
                ba = bb[bc];
                a8 = ba.field;
                bf = ba.operator;
                if (ba.filters) {
                    a5 = aE.filterExpr(ba);
                    ba = a5.expression.replace(/__o\[(\d+)\]/g, function(bi, bh) {
                        bh = +bh;
                        return "__o[" + (bg.length + bh) + "]";
                    }).replace(/__f\[(\d+)\]/g, function(bi, bh) {
                        bh = +bh;
                        return "__f[" + (a9.length + bh) + "]";
                    });
                    bg.push.apply(bg, a5.operators);
                    a9.push.apply(a9, a5.fields);
                } else {
                    if (typeof a8 === H) {
                        a5 = "__f[" + a9.length + "](d)";
                        a9.push(a8);
                    } else {
                        a5 = ad.expr(a8);
                    }
                    if (typeof bf === H) {
                        ba = "__o[" + bg.length + "](" + a5 + ", " + ay.quote(ba.value) + ")";
                        bg.push(bf);
                    } else {
                        ba = ay[(bf || "eq").toLowerCase()](a5, ba.value, ba.ignoreCase !== a0 ? ba.ignoreCase : true);
                    }
                }
                a7.push(ba);
            }
            return {
                expression: "(" + a7.join(be[a6.logic]) + ")",
                fields: a9,
                operators: bg
            };
        }
        ;
        function at(a8, a7) {
            if (a8) {
                var a5 = typeof a8 === aU ? {
                    field: a8,
                    dir: a7
                } : a8
                  , a6 = W(a5) ? a5 : a5 !== a0 ? [a5] : [];
                return M(a6, function(a9) {
                    return !!a9.dir;
                });
            }
        }
        var ax = {
            "==": "eq",
            equals: "eq",
            isequalto: "eq",
            equalto: "eq",
            equal: "eq",
            "!=": "neq",
            ne: "neq",
            notequals: "neq",
            isnotequalto: "neq",
            notequalto: "neq",
            notequal: "neq",
            "<": "lt",
            islessthan: "lt",
            lessthan: "lt",
            less: "lt",
            "<=": "lte",
            le: "lte",
            islessthanorequalto: "lte",
            lessthanequal: "lte",
            ">": "gt",
            isgreaterthan: "gt",
            greaterthan: "gt",
            greater: "gt",
            ">=": "gte",
            isgreaterthanorequalto: "gte",
            greaterthanequal: "gte",
            ge: "gte",
            notsubstringof: "doesnotcontain",
            isnull: "isnull",
            isempty: "isempty",
            isnotempty: "isnotempty"
        };
        function ar(a5) {
            var a8, a9, a6, ba, a7 = a5.filters;
            if (a7) {
                for (a8 = 0,
                a9 = a7.length; 
                a8 < a9; 
                a8++) {
                    a6 = a7[a8];
                    ba = a6.operator;
                    if (ba && typeof ba === aU) {
                        a6.operator = ax[ba.toLowerCase()] || ba;
                    }
                    ar(a6);
                }
            }
        }
        function ap(a5) {
            if (a5 && !Y(a5)) {
                if (W(a5) || !a5.filters) {
                    a5 = {
                        logic: "and",
                        filters: W(a5) ? a5 : [a5]
                    };
                }
                ar(a5);
                return a5;
            }
        }
        aE.normalizeFilter = ap;
        function j(a5, a6) {
            if (a5.logic || a6.logic) {
                return false;
            }
            return a5.field === a6.field && a5.value === a6.value && a5.operator === a6.operator;
        }
        function ao(a5) {
            a5 = a5 || {};
            if (Y(a5)) {
                return {
                    logic: "and",
                    filters: []
                };
            }
            return ap(a5);
        }
        function E(a5, a6) {
            if (a6.logic || a5.field > a6.field) {
                return 1;
            } else {
                if (a5.field < a6.field) {
                    return -1;
                } else {
                    return 0;
                }
            }
        }
        function k(a5, a6) {
            a5 = ao(a5);
            a6 = ao(a6);
            if (a5.logic !== a6.logic) {
                return false;
            }
            var a7, a8;
            var a9 = (a5.filters || []).slice();
            var ba = (a6.filters || []).slice();
            if (a9.length !== ba.length) {
                return false;
            }
            a9 = a9.sort(E);
            ba = ba.sort(E);
            for (var bb = 0; 
            bb < a9.length; 
            bb++) {
                a7 = a9[bb];
                a8 = ba[bb];
                if (a7.logic && a8.logic) {
                    if (!k(a7, a8)) {
                        return false;
                    }
                } else {
                    if (!j(a7, a8)) {
                        return false;
                    }
                }
            }
            return true;
        }
        aE.compareFilters = k;
        function an(a5) {
            return W(a5) ? a5 : [a5];
        }
        function aq(a8, a7) {
            var a5 = typeof a8 === aU ? {
                field: a8,
                dir: a7
            } : a8
              , a6 = W(a5) ? a5 : a5 !== a0 ? [a5] : [];
            return ag(a6, function(a9) {
                return {
                    field: a9.field,
                    dir: a9.dir || "asc",
                    aggregates: a9.aggregates
                };
            });
        }
        aE.prototype = {
            toArray: function() {
                return this.data;
            },
            range: function(a6, a5) {
                return new aE(this.data.slice(a6, a6 + a5));
            },
            skip: function(a5) {
                return new aE(this.data.slice(a5));
            },
            take: function(a5) {
                return new aE(this.data.slice(0, a5));
            },
            select: function(a5) {
                return new aE(ag(this.data, a5));
            },
            order: function(a6, a5) {
                var a7 = {
                    dir: a5
                };
                if (a6) {
                    if (a6.compare) {
                        a7.compare = a6.compare;
                    } else {
                        a7.field = a6;
                    }
                }
                return new aE(this.data.slice(0).sort(l.create(a7)));
            },
            orderBy: function(a5) {
                return this.order(a5, "asc");
            },
            orderByDescending: function(a5) {
                return this.order(a5, "desc");
            },
            sort: function(a9, a8, a5) {
                var ba, bb, a7 = at(a9, a8), a6 = [];
                a5 = a5 || l;
                if (a7.length) {
                    for (ba = 0,
                    bb = a7.length; 
                    ba < bb; 
                    ba++) {
                        a6.push(a5.create(a7[ba]));
                    }
                    return this.orderBy({
                        compare: a5.combine(a6)
                    });
                }
                return this;
            },
            filter: function(a8) {
                var bb, a6, bc, a5, be, a7 = this.data, a9, bd, bf = [], ba;
                a8 = ap(a8);
                if (!a8 || a8.filters.length === 0) {
                    return this;
                }
                a5 = aE.filterExpr(a8);
                a9 = a5.fields;
                bd = a5.operators;
                be = ba = new Function("d, __f, __o","return " + a5.expression);
                if (a9.length || bd.length) {
                    ba = function(bg) {
                        return be(bg, a9, bd);
                    }
                    ;
                }
                for (bb = 0,
                bc = a7.length; 
                bb < bc; 
                bb++) {
                    a6 = a7[bb];
                    if (ba(a6)) {
                        bf.push(a6);
                    }
                }
                return new aE(bf);
            },
            group: function(a7, a5) {
                a7 = aq(a7 || []);
                a5 = a5 || this.data;
                var a9 = this, a8 = new aE(a9.data), a6;
                if (a7.length > 0) {
                    a6 = a7[0];
                    a8 = a8.groupBy(a6).select(function(bb) {
                        var ba = new aE(a5).filter([{
                            field: bb.field,
                            operator: "eq",
                            value: bb.value,
                            ignoreCase: false
                        }]);
                        return {
                            field: bb.field,
                            value: bb.value,
                            items: a7.length > 1 ? new aE(bb.items).group(a7.slice(1), ba.toArray()).toArray() : bb.items,
                            hasSubgroups: a7.length > 1,
                            aggregates: ba.aggregate(a6.aggregates)
                        };
                    });
                }
                return a8;
            },
            groupBy: function(a7) {
                if (Y(a7) || !this.data.length) {
                    return new aE([]);
                }
                var a8 = a7.field, bf = this._sortForGrouping(a8, a7.dir || "asc"), a5 = ad.accessor(a8), bc, ba = a5.get(bf[0], a8), a9 = {
                    field: a8,
                    value: ba,
                    items: []
                }, a6, bb, bd, be = [a9];
                for (bb = 0,
                bd = bf.length; 
                bb < bd; 
                bb++) {
                    bc = bf[bb];
                    a6 = a5.get(bc, a8);
                    if (!N(ba, a6)) {
                        ba = a6;
                        a9 = {
                            field: a8,
                            value: ba,
                            items: []
                        };
                        be.push(a9);
                    }
                    a9.items.push(bc);
                }
                return new aE(be);
            },
            _sortForGrouping: function(a7, a6) {
                var a8, a9, a5 = this.data;
                if (!aT) {
                    for (a8 = 0,
                    a9 = a5.length; 
                    a8 < a9; 
                    a8++) {
                        a5[a8].__position = a8;
                    }
                    a5 = new aE(a5).sort(a7, a6, aS).toArray();
                    for (a8 = 0,
                    a9 = a5.length; 
                    a8 < a9; 
                    a8++) {
                        delete a5[a8].__position;
                    }
                    return a5;
                }
                return this.sort(a7, a6).toArray();
            },
            aggregate: function(a5) {
                var a6, a7, a8 = {}, a9 = {};
                if (a5 && a5.length) {
                    for (a6 = 0,
                    a7 = this.data.length; 
                    a6 < a7; 
                    a6++) {
                        g(a8, a5, this.data[a6], a6, a7, a9);
                    }
                }
                return a8;
            }
        };
        function N(a5, a6) {
            if (a5 && a5.getTime && a6 && a6.getTime) {
                return a5.getTime() === a6.getTime();
            }
            return a5 === a6;
        }
        function g(a5, a7, bc, bb, be, bf) {
            a7 = a7 || [];
            var ba, a6, a9, bd = a7.length;
            for (ba = 0; 
            ba < bd; 
            ba++) {
                a6 = a7[ba];
                a9 = a6.aggregate;
                var a8 = a6.field;
                a5[a8] = a5[a8] || {};
                bf[a8] = bf[a8] || {};
                bf[a8][a9] = bf[a8][a9] || {};
                a5[a8][a9] = I[a9.toLowerCase()](a5[a8][a9], bc, ad.accessor(a8), bb, be, bf[a8][a9]);
            }
        }
        var I = {
            sum: function(a6, a7, a5) {
                var a8 = a5.get(a7);
                if (!aa(a6)) {
                    a6 = a8;
                } else {
                    if (aa(a8)) {
                        a6 += a8;
                    }
                }
                return a6;
            },
            count: function(a5) {
                return (a5 || 0) + 1;
            },
            average: function(a6, a8, a5, a7, a9, ba) {
                var bb = a5.get(a8);
                if (ba.count === a0) {
                    ba.count = 0;
                }
                if (!aa(a6)) {
                    a6 = bb;
                } else {
                    if (aa(bb)) {
                        a6 += bb;
                    }
                }
                if (aa(bb)) {
                    ba.count++;
                }
                if (a7 == a9 - 1 && aa(a6)) {
                    a6 = a6 / ba.count;
                }
                return a6;
            },
            max: function(a6, a7, a5) {
                var a8 = a5.get(a7);
                if (!aa(a6) && !X(a6)) {
                    a6 = a8;
                }
                if (a6 < a8 && (aa(a8) || X(a8))) {
                    a6 = a8;
                }
                return a6;
            },
            min: function(a6, a7, a5) {
                var a8 = a5.get(a7);
                if (!aa(a6) && !X(a6)) {
                    a6 = a8;
                }
                if (a6 > a8 && (aa(a8) || X(a8))) {
                    a6 = a8;
                }
                return a6;
            }
        };
        function aa(a5) {
            return typeof a5 === "number" && !isNaN(a5);
        }
        function X(a5) {
            return a5 && a5.getTime;
        }
        function aX(a5) {
            var a6, a7 = a5.length, a8 = new Array(a7);
            for (a6 = 0; 
            a6 < a7; 
            a6++) {
                a8[a6] = a5[a6].toJSON();
            }
            return a8;
        }
        aE.process = function(a5, a9) {
            a9 = a9 || {};
            var ba = new aE(a5), a8 = a9.group, bc = aq(a8 || []).concat(at(a9.sort || [])), be, a7 = a9.filterCallback, a6 = a9.filter, bb = a9.skip, bd = a9.take;
            if (a6) {
                ba = ba.filter(a6);
                if (a7) {
                    ba = a7(ba);
                }
                be = ba.toArray().length;
            }
            if (bc) {
                ba = ba.sort(bc);
                if (a8) {
                    a5 = ba.toArray();
                }
            }
            if (bb !== a0 && bd !== a0) {
                ba = ba.range(bb, bd);
            }
            if (a8) {
                ba = ba.group(a8, a5);
            }
            return {
                total: be,
                data: ba.toArray()
            };
        }
        ;
        var af = i.extend({
            init: function(a5) {
                this.data = a5.data;
            },
            read: function(a5) {
                a5.success(this.data);
            },
            update: function(a5) {
                a5.success(a5.data);
            },
            create: function(a5) {
                a5.success(a5.data);
            },
            destroy: function(a5) {
                a5.success(a5.data);
            }
        });
        var aH = i.extend({
            init: function(a5) {
                var a7 = this, a6;
                a5 = a7.options = D({}, a7.options, a5);
                y(r, function(a8, a9) {
                    if (typeof a5[a9] === aU) {
                        a5[a9] = {
                            url: a5[a9]
                        };
                    }
                });
                a7.cache = a5.cache ? f.create(a5.cache) : {
                    find: am,
                    add: am
                };
                a6 = a5.parameterMap;
                if (Z(a5.push)) {
                    a7.push = a5.push;
                }
                if (!a7.push) {
                    a7.push = P;
                }
                a7.parameterMap = Z(a6) ? a6 : function(a8) {
                    var a9 = {};
                    y(a8, function(ba, bb) {
                        if (ba in a6) {
                            ba = a6[ba];
                            if (ab(ba)) {
                                bb = ba.value(bb);
                                ba = ba.key;
                            }
                        }
                        a9[ba] = bb;
                    });
                    return a9;
                }
                ;
            },
            options: {
                parameterMap: P
            },
            create: function(a5) {
                return c(this.setup(a5, q));
            },
            read: function(a7) {
                var ba = this, a9, a6, a8, a5 = ba.cache;
                a7 = ba.setup(a7, aG);
                a9 = a7.success || am;
                a6 = a7.error || am;
                a8 = a5.find(a7.data);
                if (a8 !== a0) {
                    a9(a8);
                } else {
                    a7.success = function(bb) {
                        a5.add(a7.data, bb);
                        a9(bb);
                    }
                    ;
                    b.ajax(a7);
                }
            },
            update: function(a5) {
                return c(this.setup(a5, a2));
            },
            destroy: function(a5) {
                return c(this.setup(a5, x));
            },
            setup: function(a7, ba) {
                a7 = a7 || {};
                var a9 = this, a8, a6 = a9.options[ba], a5 = Z(a6.data) ? a6.data(a7.data) : a6.data;
                a7 = D(true, {}, a6, a7);
                a8 = D(true, {}, a5, a7.data);
                a7.data = a9.parameterMap(a8, ba);
                if (Z(a7.url)) {
                    a7.url = a7.url(a8);
                }
                return a7;
            }
        });
        var f = i.extend({
            init: function() {
                this._store = {};
            },
            add: function(a6, a5) {
                if (a6 !== a0) {
                    this._store[aV(a6)] = a5;
                }
            },
            find: function(a5) {
                return this._store[aV(a5)];
            },
            clear: function() {
                this._store = {};
            },
            remove: function(a5) {
                delete this._store[aV(a5)];
            }
        });
        f.create = function(a5) {
            var a6 = {
                inmemory: function() {
                    return new f();
                }
            };
            if (ab(a5) && Z(a5.find)) {
                return a5;
            }
            if (a5 === true) {
                return new f();
            }
            return a6[a5]();
        }
        ;
        function aO(a5, a8, bb, bc, a6) {
            var be, a7, bd, a9, bf = {}, ba;
            for (a9 = 0,
            ba = a5.length; 
            a9 < ba; 
            a9++) {
                be = a5[a9];
                for (a7 in a8) {
                    bd = a6[a7];
                    if (bd && bd !== a7) {
                        if (!bf[bd]) {
                            bf[bd] = ad.setter(bd);
                        }
                        bf[bd](be, a8[a7](be));
                        delete be[a7];
                    }
                }
            }
        }
        function p(a5, a8, bb, bc, a6) {
            var be, a7, bd, a9, ba;
            for (a9 = 0,
            ba = a5.length; 
            a9 < ba; 
            a9++) {
                be = a5[a9];
                for (a7 in a8) {
                    be[a7] = bb._parse(a7, a8[a7](be));
                    bd = a6[a7];
                    if (bd && bd !== a7) {
                        delete be[bd];
                    }
                }
            }
        }
        function o(a5, a8, bb, bc, a7) {
            var bd, a9, a6, ba;
            for (a9 = 0,
            ba = a5.length; 
            a9 < ba; 
            a9++) {
                bd = a5[a9];
                a6 = bc[bd.field];
                if (a6 && a6 != bd.field) {
                    bd.field = a6;
                }
                bd.value = bb._parse(bd.field, bd.value);
                if (bd.hasSubgroups) {
                    o(bd.items, a8, bb, bc, a7);
                } else {
                    p(bd.items, a8, bb, bc, a7);
                }
            }
        }
        function a3(ba, a8, a5, a7, a9, a6) {
            return function(bb) {
                bb = ba(bb);
                if (bb && !Y(a7)) {
                    if (aY.call(bb) !== "[object Array]" && !(bb instanceof av)) {
                        bb = [bb];
                    }
                    a5(bb, a7, new a8(), a9, a6);
                }
                return bb || [];
            }
            ;
        }
        var t = i.extend({
            init: function(bf) {
                var bj = this, bc, a9, bd, a5;
                bf = bf || {};
                for (bc in bf) {
                    a9 = bf[bc];
                    bj[bc] = typeof a9 === aU ? L(a9) : a9;
                }
                a5 = bf.modelBase || aj;
                if (ab(bj.model)) {
                    bj.model = bd = a5.define(bj.model);
                }
                var a6 = aC(bj.data, bj);
                bj._dataAccessFunction = a6;
                if (bj.model) {
                    var bb = aC(bj.groups, bj), bg = aC(bj.serialize, bj), be = {}, ba = {}, bh = {}, a8 = {}, bi = false, a7;
                    bd = bj.model;
                    if (bd.fields) {
                        y(bd.fields, function(bk, bm) {
                            var bl;
                            a7 = bk;
                            if (ab(bm) && bm.field) {
                                a7 = bm.field;
                            } else {
                                if (typeof bm === aU) {
                                    a7 = bm;
                                }
                            }
                            if (ab(bm) && bm.from) {
                                bl = bm.from;
                            }
                            bi = bi || bl && bl !== bk || a7 !== bk;
                            ba[bk] = L(bl || a7);
                            bh[bk] = L(bk);
                            be[bl || a7] = bk;
                            a8[bk] = bl || a7;
                        });
                        if (!bf.serialize && bi) {
                            bj.serialize = a3(bg, bd, aO, bh, be, a8);
                        }
                    }
                    bj._dataAccessFunction = a6;
                    bj.data = a3(a6, bd, p, ba, be, a8);
                    bj.groups = a3(bb, bd, o, ba, be, a8);
                }
            },
            errors: function(a5) {
                return a5 ? a5.errors : null ;
            },
            parse: P,
            data: P,
            total: function(a5) {
                return a5.length;
            },
            groups: P,
            aggregates: function() {
                return {};
            },
            serialize: function(a5) {
                return a5;
            }
        });
        function ai(bc, a5, ba, bb) {
            var a6, a7 = 0, a8;
            while (a5.length && bb) {
                a6 = a5[a7];
                a8 = a6.items;
                var a9 = a8.length;
                if (bc && bc.field === a6.field && bc.value === a6.value) {
                    if (bc.hasSubgroups && bc.items.length) {
                        ai(bc.items[bc.items.length - 1], a6.items, ba, bb);
                    } else {
                        a8 = a8.slice(ba, ba + bb);
                        bc.items = bc.items.concat(a8);
                    }
                    a5.splice(a7--, 1);
                } else {
                    if (a6.hasSubgroups && a8.length) {
                        ai(a6, a8, ba, bb);
                        if (!a6.items.length) {
                            a5.splice(a7--, 1);
                        }
                    } else {
                        a8 = a8.slice(ba, ba + bb);
                        a6.items = a8;
                        if (!a6.items.length) {
                            a5.splice(a7--, 1);
                        }
                    }
                }
                if (a8.length === 0) {
                    ba -= a9;
                } else {
                    ba = 0;
                    bb -= a8.length;
                }
                if (++a7 >= a5.length) {
                    break;
                }
            }
            if (a7 < a5.length) {
                a5.splice(a7, a5.length - a7);
            }
        }
        function G(a5) {
            var a7, bb = [], ba, a9, a8;
            for (a7 = 0,
            ba = a5.length; 
            a7 < ba; 
            a7++) {
                var a6 = a5.at(a7);
                if (a6.hasSubgroups) {
                    bb = bb.concat(G(a6.items));
                } else {
                    a9 = a6.items;
                    for (a8 = 0; 
                    a8 < a9.length; 
                    a8++) {
                        bb.push(a9.at(a8));
                    }
                }
            }
            return bb;
        }
        function a4(a5, a9) {
            var a7, a8, a6;
            if (a9) {
                for (a7 = 0,
                a8 = a5.length; 
                a7 < a8; 
                a7++) {
                    a6 = a5.at(a7);
                    if (a6.hasSubgroups) {
                        a4(a6.items, a9);
                    } else {
                        a6.items = new ae(a6.items,a9);
                    }
                }
            }
        }
        function z(a5, a6) {
            for (var a7 = 0, a8 = a5.length; 
            a7 < a8; 
            a7++) {
                if (a5[a7].hasSubgroups) {
                    if (z(a5[a7].items, a6)) {
                        return true;
                    }
                } else {
                    if (a6(a5[a7].items, a5[a7])) {
                        return true;
                    }
                }
            }
        }
        function aK(a9, a5, a7, a8) {
            for (var a6 = 0; 
            a6 < a9.length; 
            a6++) {
                if (a9[a6].data === a5) {
                    break;
                }
                if (aJ(a9[a6].data, a7, a8)) {
                    break;
                }
            }
        }
        function aJ(a7, a6, a9) {
            for (var a5 = 0, a8 = a7.length; 
            a5 < a8; 
            a5++) {
                if (a7[a5] && a7[a5].hasSubgroups) {
                    return aJ(a7[a5].items, a6, a9);
                } else {
                    if (a7[a5] === a6 || a7[a5] === a9) {
                        a7[a5] = a9;
                        return true;
                    }
                }
            }
        }
        function aL(bc, a5, a9, bb, ba) {
            for (var bd = 0, a8 = bc.length; 
            bd < a8; 
            bd++) {
                var a7 = bc[bd];
                if (!a7 || a7 instanceof bb) {
                    continue;
                }
                if (a7.hasSubgroups !== a0 && !ba) {
                    aL(a7.items, a5, a9, bb, ba);
                } else {
                    for (var a6 = 0; 
                    a6 < a5.length; 
                    a6++) {
                        if (a5[a6] === a7) {
                            bc[bd] = a5.at(a6);
                            aK(a9, a5, a7, bc[bd]);
                            break;
                        }
                    }
                }
            }
        }
        function aI(a5, a9) {
            var a7, a8;
            for (a7 = 0,
            a8 = a5.length; 
            a7 < a8; 
            a7++) {
                var a6 = a5.at(a7);
                if (a6.uid == a9.uid) {
                    a5.splice(a7, 1);
                    return a6;
                }
            }
        }
        function S(a5, a6) {
            if (a6) {
                return Q(a5, function(a7) {
                    return a7.uid && a7.uid == a6.uid || a7[a6.idField] === a6.id && a6.id !== a6._defaultId;
                });
            }
            return -1;
        }
        function R(a5, a6) {
            if (a6) {
                return Q(a5, function(a7) {
                    return a7.uid == a6.uid;
                });
            }
            return -1;
        }
        function Q(a6, a5) {
            var a7, a8;
            for (a7 = 0,
            a8 = a6.length; 
            a7 < a8; 
            a7++) {
                if (a5(a6[a7])) {
                    return a7;
                }
            }
            return -1;
        }
        function F(a7, a8) {
            if (a7 && !Y(a7)) {
                var a5 = a7[a8];
                var a6;
                if (ab(a5)) {
                    a6 = a5.from || a5.field || a8;
                } else {
                    a6 = a7[a8] || a8;
                }
                if (Z(a6)) {
                    return a8;
                }
                return a6;
            }
            return a8;
        }
        function n(a5, a9) {
            var a7, a8, ba = {};
            for (var a6 in a5) {
                if (a6 !== "filters") {
                    ba[a6] = a5[a6];
                }
            }
            if (a5.filters) {
                ba.filters = [];
                for (a7 = 0,
                a8 = a5.filters.length; 
                a7 < a8; 
                a7++) {
                    ba.filters[a7] = n(a5.filters[a7], a9);
                }
            } else {
                ba.field = F(a9.fields, ba.field);
            }
            return ba;
        }
        function m(a6, ba) {
            var a8, a9, bb = [], bc, a5;
            for (a8 = 0,
            a9 = a6.length; 
            a8 < a9; 
            a8++) {
                bc = {};
                a5 = a6[a8];
                for (var a7 in a5) {
                    bc[a7] = a5[a7];
                }
                bc.field = F(ba.fields, bc.field);
                if (bc.aggregates && W(bc.aggregates)) {
                    bc.aggregates = m(bc.aggregates, ba);
                }
                bb.push(bc);
            }
            return bb;
        }
        var u = au.extend({
            init: function(a8) {
                var a9 = this, a7, a5;
                if (a8) {
                    a5 = a8.data;
                }
                a8 = a9.options = D({}, a9.options, a8);
                a9._map = {};
                a9._prefetch = {};
                a9._data = [];
                a9._pristineData = [];
                a9._ranges = [];
                a9._view = [];
                a9._pristineTotal = 0;
                a9._destroyed = [];
                a9._pageSize = a8.pageSize;
                a9._page = a8.page || (a8.pageSize ? 1 : a0);
                a9._sort = at(a8.sort);
                a9._filter = ap(a8.filter);
                a9._group = aq(a8.group);
                a9._aggregate = a8.aggregate;
                a9._total = a8.total;
                a9._shouldDetachObservableParents = true;
                au.fn.init.call(a9);
                a9.transport = aZ.create(a8, a5, a9);
                if (Z(a9.transport.push)) {
                    a9.transport.push({
                        pushCreate: aC(a9._pushCreate, a9),
                        pushUpdate: aC(a9._pushUpdate, a9),
                        pushDestroy: aC(a9._pushDestroy, a9)
                    });
                }
                if (a8.offlineStorage != null ) {
                    if (typeof a8.offlineStorage == "string") {
                        var a6 = a8.offlineStorage;
                        a9._storage = {
                            getItem: function() {
                                return JSON.parse(localStorage.getItem(a6));
                            },
                            setItem: function(ba) {
                                localStorage.setItem(a6, aV(a9.reader.serialize(ba)));
                            }
                        };
                    } else {
                        a9._storage = a8.offlineStorage;
                    }
                }
                a9.reader = new ad.data.readers[a8.schema.type || "json"](a8.schema);
                a7 = a9.reader.model || {};
                a9._detachObservableParents();
                a9._data = a9._observe(a9._data);
                a9._online = true;
                a9.bind(["push", B, h, aN, aW, aM, aB], a8);
            },
            options: {
                data: null ,
                schema: {
                    modelBase: aj
                },
                offlineStorage: null ,
                serverSorting: false,
                serverPaging: false,
                serverFiltering: false,
                serverGrouping: false,
                serverAggregates: false,
                batch: false
            },
            clone: function() {
                return this;
            },
            online: function(a5) {
                if (a5 !== a0) {
                    if (this._online != a5) {
                        this._online = a5;
                        if (a5) {
                            return this.sync();
                        }
                    }
                    return b.Deferred().resolve().promise();
                } else {
                    return this._online;
                }
            },
            offlineData: function(a5) {
                if (this.options.offlineStorage == null ) {
                    return null ;
                }
                if (a5 !== a0) {
                    return this._storage.setItem(a5);
                }
                return this._storage.getItem() || [];
            },
            _isServerGrouped: function() {
                var a5 = this.group() || [];
                return this.options.serverGrouping && a5.length;
            },
            _pushCreate: function(a5) {
                this._push(a5, "pushCreate");
            },
            _pushUpdate: function(a5) {
                this._push(a5, "pushUpdate");
            },
            _pushDestroy: function(a5) {
                this._push(a5, "pushDestroy");
            },
            _push: function(a7, a6) {
                var a5 = this._readData(a7);
                if (!a5) {
                    a5 = a7;
                }
                this[a6](a5);
            },
            _flatData: function(a5, a7) {
                if (a5) {
                    if (this._isServerGrouped()) {
                        return G(a5);
                    }
                    if (!a7) {
                        for (var a6 = 0; 
                        a6 < a5.length; 
                        a6++) {
                            a5.at(a6);
                        }
                    }
                }
                return a5;
            },
            parent: am,
            get: function(a6) {
                var a7, a8, a5 = this._flatData(this._data);
                for (a7 = 0,
                a8 = a5.length; 
                a7 < a8; 
                a7++) {
                    if (a5[a7].id == a6) {
                        return a5[a7];
                    }
                }
            },
            getByUid: function(a6) {
                var a7, a8, a5 = this._flatData(this._data);
                if (!a5) {
                    return;
                }
                for (a7 = 0,
                a8 = a5.length; 
                a7 < a8; 
                a7++) {
                    if (a5[a7].uid == a6) {
                        return a5[a7];
                    }
                }
            },
            indexOf: function(a5) {
                return R(this._data, a5);
            },
            at: function(a5) {
                return this._data.at(a5);
            },
            data: function(a7) {
                var a6 = this;
                if (a7 !== a0) {
                    a6._detachObservableParents();
                    a6._data = this._observe(a7);
                    a6._pristineData = a7.slice(0);
                    a6._storeData();
                    a6._ranges = [];
                    a6.trigger("reset");
                    a6._addRange(a6._data);
                    a6._total = a6._data.length;
                    a6._pristineTotal = a6._total;
                    a6._process(a6._data);
                } else {
                    if (a6._data) {
                        for (var a5 = 0; 
                        a5 < a6._data.length; 
                        a5++) {
                            a6._data.at(a5);
                        }
                    }
                    return a6._data;
                }
            },
            view: function(a5) {
                if (a5 === a0) {
                    return this._view;
                } else {
                    this._view = this._observeView(a5);
                }
            },
            _observeView: function(a5) {
                var a6 = this;
                aL(a5, a6._data, a6._ranges, a6.reader.model || aw, a6._isServerGrouped());
                var a7 = new ae(a5,a6.reader.model);
                a7.parent = function() {
                    return a6.parent();
                }
                ;
                return a7;
            },
            flatView: function() {
                var a5 = this.group() || [];
                if (a5.length) {
                    return G(this._view);
                } else {
                    return this._view;
                }
            },
            add: function(a5) {
                return this.insert(this._data.length, a5);
            },
            _createNewModel: function(a5) {
                if (this.reader.model) {
                    return new this.reader.model(a5);
                }
                if (a5 instanceof aw) {
                    return a5;
                }
                return new aw(a5);
            },
            insert: function(a5, a6) {
                if (!a6) {
                    a6 = a5;
                    a5 = 0;
                }
                if (!(a6 instanceof aj)) {
                    a6 = this._createNewModel(a6);
                }
                if (this._isServerGrouped()) {
                    this._data.splice(a5, 0, this._wrapInEmptyGroup(a6));
                } else {
                    this._data.splice(a5, 0, a6);
                }
                return a6;
            },
            pushCreate: function(a8) {
                if (!W(a8)) {
                    a8 = [a8];
                }
                var ba = [];
                var a5 = this.options.autoSync;
                this.options.autoSync = false;
                try {
                    for (var a6 = 0; 
                    a6 < a8.length; 
                    a6++) {
                        var a7 = a8[a6];
                        var bb = this.add(a7);
                        ba.push(bb);
                        var a9 = bb.toJSON();
                        if (this._isServerGrouped()) {
                            a9 = this._wrapInEmptyGroup(a9);
                        }
                        this._pristineData.push(a9);
                    }
                } finally {
                    this.options.autoSync = a5;
                }
                if (ba.length) {
                    this.trigger("push", {
                        type: "create",
                        items: ba
                    });
                }
            },
            pushUpdate: function(a7) {
                if (!W(a7)) {
                    a7 = [a7];
                }
                var a9 = [];
                for (var a5 = 0; 
                a5 < a7.length; 
                a5++) {
                    var a6 = a7[a5];
                    var a8 = this._createNewModel(a6);
                    var ba = this.get(a8.id);
                    if (ba) {
                        a9.push(ba);
                        ba.accept(a6);
                        ba.trigger(h);
                        this._updatePristineForModel(ba, a6);
                    } else {
                        this.pushCreate(a6);
                    }
                }
                if (a9.length) {
                    this.trigger("push", {
                        type: "update",
                        items: a9
                    });
                }
            },
            pushDestroy: function(a5) {
                var a6 = this._removeItems(a5);
                if (a6.length) {
                    this.trigger("push", {
                        type: "destroy",
                        items: a6
                    });
                }
            },
            _removeItems: function(ba) {
                if (!W(ba)) {
                    ba = [ba];
                }
                var a6 = [];
                var a5 = this.options.autoSync;
                this.options.autoSync = false;
                try {
                    for (var a8 = 0; 
                    a8 < ba.length; 
                    a8++) {
                        var a9 = ba[a8];
                        var bb = this._createNewModel(a9);
                        var a7 = false;
                        this._eachItem(this._data, function(be) {
                            for (var bc = 0; 
                            bc < be.length; 
                            bc++) {
                                var bd = be.at(bc);
                                if (bd.id === bb.id) {
                                    a6.push(bd);
                                    be.splice(bc, 1);
                                    a7 = true;
                                    break;
                                }
                            }
                        });
                        if (a7) {
                            this._removePristineForModel(bb);
                            this._destroyed.pop();
                        }
                    }
                } finally {
                    this.options.autoSync = a5;
                }
                return a6;
            },
            remove: function(a6) {
                var a7, a8 = this, a5 = a8._isServerGrouped();
                this._eachItem(a8._data, function(a9) {
                    a7 = aI(a9, a6);
                    if (a7 && a5) {
                        if (!a7.isNew || !a7.isNew()) {
                            a8._destroyed.push(a7);
                        }
                        return true;
                    }
                });
                this._removeModelFromRanges(a6);
                this._updateRangesLength();
                return a6;
            },
            destroyed: function() {
                return this._destroyed;
            },
            created: function() {
                var a6, a7, a8 = [], a5 = this._flatData(this._data);
                for (a6 = 0,
                a7 = a5.length; 
                a6 < a7; 
                a6++) {
                    if (a5[a6].isNew && a5[a6].isNew()) {
                        a8.push(a5[a6]);
                    }
                }
                return a8;
            },
            updated: function() {
                var a6, a7, a8 = [], a5 = this._flatData(this._data);
                for (a6 = 0,
                a7 = a5.length; 
                a6 < a7; 
                a6++) {
                    if (a5[a6].isNew && !a5[a6].isNew() && a5[a6].dirty) {
                        a8.push(a5[a6]);
                    }
                }
                return a8;
            },
            sync: function() {
                var a9 = this
                  , a5 = []
                  , ba = []
                  , a6 = a9._destroyed;
                var a7 = b.Deferred().resolve().promise();
                if (a9.online()) {
                    if (!a9.reader.model) {
                        return a7;
                    }
                    a5 = a9.created();
                    ba = a9.updated();
                    var a8 = [];
                    if (a9.options.batch && a9.transport.submit) {
                        a8 = a9._sendSubmit(a5, ba, a6);
                    } else {
                        a8.push.apply(a8, a9._send("create", a5));
                        a8.push.apply(a8, a9._send("update", ba));
                        a8.push.apply(a8, a9._send("destroy", a6));
                    }
                    a7 = b.when.apply(null , a8).then(function() {
                        var bb, bc;
                        for (bb = 0,
                        bc = arguments.length; 
                        bb < bc; 
                        bb++) {
                            a9._accept(arguments[bb]);
                        }
                        a9._storeData(true);
                        a9._change({
                            action: "sync"
                        });
                        a9.trigger(aW);
                    });
                } else {
                    a9._storeData(true);
                    a9._change({
                        action: "sync"
                    });
                }
                return a7;
            },
            cancelChanges: function(a5) {
                var a6 = this;
                if (a5 instanceof ad.data.Model) {
                    a6._cancelModel(a5);
                } else {
                    a6._destroyed = [];
                    a6._detachObservableParents();
                    a6._data = a6._observe(a6._pristineData);
                    if (a6.options.serverPaging) {
                        a6._total = a6._pristineTotal;
                    }
                    a6._ranges = [];
                    a6._addRange(a6._data);
                    a6._change();
                }
            },
            hasChanges: function() {
                var a6, a7, a5 = this._flatData(this._data);
                if (this._destroyed.length) {
                    return true;
                }
                for (a6 = 0,
                a7 = a5.length; 
                a6 < a7; 
                a6++) {
                    if (a5[a6].isNew && a5[a6].isNew() || a5[a6].dirty) {
                        return true;
                    }
                }
                return false;
            },
            _accept: function(ba) {
                var bc = this, a7 = ba.models, a9 = ba.response, a5 = 0, bb = bc._isServerGrouped(), a8 = bc._pristineData, bd = ba.type, a6;
                bc.trigger(aM, {
                    response: a9,
                    type: bd
                });
                if (a9 && !Y(a9)) {
                    a9 = bc.reader.parse(a9);
                    if (bc._handleCustomErrors(a9)) {
                        return;
                    }
                    a9 = bc.reader.data(a9);
                    if (!W(a9)) {
                        a9 = [a9];
                    }
                } else {
                    a9 = b.map(a7, function(be) {
                        return be.toJSON();
                    });
                }
                if (bd === "destroy") {
                    bc._destroyed = [];
                }
                for (a5 = 0,
                a6 = a7.length; 
                a5 < a6; 
                a5++) {
                    if (bd !== "destroy") {
                        a7[a5].accept(a9[a5]);
                        if (bd === "create") {
                            a8.push(bb ? bc._wrapInEmptyGroup(a7[a5]) : a9[a5]);
                        } else {
                            if (bd === "update") {
                                bc._updatePristineForModel(a7[a5], a9[a5]);
                            }
                        }
                    } else {
                        bc._removePristineForModel(a7[a5]);
                    }
                }
            },
            _updatePristineForModel: function(a5, a6) {
                this._executeOnPristineForModel(a5, function(a7, a8) {
                    ad.deepExtend(a8[a7], a6);
                });
            },
            _executeOnPristineForModel: function(a6, a5) {
                this._eachPristineItem(function(a8) {
                    var a7 = S(a8, a6);
                    if (a7 > -1) {
                        a5(a7, a8);
                        return true;
                    }
                });
            },
            _removePristineForModel: function(a5) {
                this._executeOnPristineForModel(a5, function(a6, a7) {
                    a7.splice(a6, 1);
                });
            },
            _readData: function(a5) {
                var a6 = !this._isServerGrouped() ? this.reader.data : this.reader.groups;
                return a6.call(this.reader, a5);
            },
            _eachPristineItem: function(a5) {
                this._eachItem(this._pristineData, a5);
            },
            _eachItem: function(a6, a5) {
                if (a6 && a6.length) {
                    if (this._isServerGrouped()) {
                        z(a6, a5);
                    } else {
                        a5(a6);
                    }
                }
            },
            _pristineForModel: function(a7) {
                var a8, a6, a5 = function(a9) {
                    a6 = S(a9, a7);
                    if (a6 > -1) {
                        a8 = a9[a6];
                        return true;
                    }
                }
                ;
                this._eachPristineItem(a5);
                return a8;
            },
            _cancelModel: function(a5) {
                var a6 = this._pristineForModel(a5);
                this._eachItem(this._data, function(a8) {
                    var a7 = R(a8, a5);
                    if (a7 >= 0) {
                        if (a6 && (!a5.isNew() || a6.__state__)) {
                            a8[a7].accept(a6);
                        } else {
                            a8.splice(a7, 1);
                        }
                    }
                });
            },
            _submit: function(a6, a5) {
                var a7 = this;
                a7.trigger(aN, {
                    type: "submit"
                });
                a7.transport.submit(D({
                    success: function(a9, ba) {
                        var a8 = b.grep(a6, function(bb) {
                            return bb.type == ba;
                        })[0];
                        if (a8) {
                            a8.resolve({
                                response: a9,
                                models: a8.models,
                                type: ba
                            });
                        }
                    },
                    error: function(ba, bb, a8) {
                        for (var a9 = 0; 
                        a9 < a6.length; 
                        a9++) {
                            a6[a9].reject(ba);
                        }
                        a7.error(ba, bb, a8);
                    }
                }, a5));
            },
            _sendSubmit: function(a5, a9, a6) {
                var a8 = this
                  , a7 = [];
                if (a8.options.batch) {
                    if (a5.length) {
                        a7.push(b.Deferred(function(ba) {
                            ba.type = "create";
                            ba.models = a5;
                        }));
                    }
                    if (a9.length) {
                        a7.push(b.Deferred(function(ba) {
                            ba.type = "update";
                            ba.models = a9;
                        }));
                    }
                    if (a6.length) {
                        a7.push(b.Deferred(function(ba) {
                            ba.type = "destroy";
                            ba.models = a6;
                        }));
                    }
                    a8._submit(a7, {
                        data: {
                            created: a8.reader.serialize(aX(a5)),
                            updated: a8.reader.serialize(aX(a9)),
                            destroyed: a8.reader.serialize(aX(a6))
                        }
                    });
                }
                return a7;
            },
            _promise: function(a5, a6, a8) {
                var a7 = this;
                return b.Deferred(function(a9) {
                    a7.trigger(aN, {
                        type: a8
                    });
                    a7.transport[a8].call(a7.transport, D({
                        success: function(ba) {
                            a9.resolve({
                                response: ba,
                                models: a6,
                                type: a8
                            });
                        },
                        error: function(bb, bc, ba) {
                            a9.reject(bb);
                            a7.error(bb, bc, ba);
                        }
                    }, a5));
                }).promise();
            },
            _send: function(a9, a6) {
                var bb = this, a7, a8, ba = [], a5 = bb.reader.serialize(aX(a6));
                if (bb.options.batch) {
                    if (a6.length) {
                        ba.push(bb._promise({
                            data: {
                                models: a5
                            }
                        }, a6, a9));
                    }
                } else {
                    for (a7 = 0,
                    a8 = a6.length; 
                    a7 < a8; 
                    a7++) {
                        ba.push(bb._promise({
                            data: a5[a7]
                        }, [a6[a7]], a9));
                    }
                }
                return ba;
            },
            read: function(a5) {
                var a8 = this
                  , a7 = a8._params(a5);
                var a6 = b.Deferred();
                a8._queueRequest(a7, function() {
                    var a9 = a8.trigger(aN, {
                        type: "read"
                    });
                    if (!a9) {
                        a8.trigger(aB);
                        a8._ranges = [];
                        a8.trigger("reset");
                        if (a8.online()) {
                            a8.transport.read({
                                data: a7,
                                success: function(ba) {
                                    a8.success(ba, a7);
                                    a6.resolve();
                                },
                                error: function() {
                                    var ba = aQ.call(arguments);
                                    a8.error.apply(a8, ba);
                                    a6.reject.apply(a6, ba);
                                }
                            });
                        } else {
                            if (a8.options.offlineStorage != null ) {
                                a8.success(a8.offlineData(), a7);
                                a6.resolve();
                            }
                        }
                    } else {
                        a8._dequeueRequest();
                        a6.resolve(a9);
                    }
                });
                return a6.promise();
            },
            _readAggregates: function(a5) {
                return this.reader.aggregates(a5);
            },
            success: function(a5) {
                var bf = this
                  , bd = bf.options;
                bf.trigger(aM, {
                    response: a5,
                    type: "read"
                });
                if (bf.online()) {
                    a5 = bf.reader.parse(a5);
                    if (bf._handleCustomErrors(a5)) {
                        bf._dequeueRequest();
                        return;
                    }
                    bf._total = bf.reader.total(a5);
                    if (bf._aggregate && bd.serverAggregates) {
                        bf._aggregateResult = bf._readAggregates(a5);
                    }
                    a5 = bf._readData(a5);
                } else {
                    a5 = bf._readData(a5);
                    var bb = [];
                    var ba = {};
                    var bc = bf.reader.model;
                    var a7 = bc ? bc.idField : "id";
                    var a8;
                    for (a8 = 0; 
                    a8 < this._destroyed.length; 
                    a8++) {
                        var a6 = this._destroyed[a8][a7];
                        ba[a6] = a6;
                    }
                    for (a8 = 0; 
                    a8 < a5.length; 
                    a8++) {
                        var a9 = a5[a8];
                        var be = a9.__state__;
                        if (be == "destroy") {
                            if (!ba[a9[a7]]) {
                                this._destroyed.push(this._createNewModel(a9));
                            }
                        } else {
                            bb.push(a9);
                        }
                    }
                    a5 = bb;
                    bf._total = a5.length;
                }
                bf._pristineTotal = bf._total;
                bf._pristineData = a5.slice(0);
                bf._detachObservableParents();
                bf._data = bf._observe(a5);
                if (bf.options.offlineStorage != null ) {
                    bf._eachItem(bf._data, function(bi) {
                        for (var bg = 0; 
                        bg < bi.length; 
                        bg++) {
                            var bh = bi.at(bg);
                            if (bh.__state__ == "update") {
                                bh.dirty = true;
                            }
                        }
                    });
                }
                bf._storeData();
                bf._addRange(bf._data);
                bf._process(bf._data);
                bf._dequeueRequest();
            },
            _detachObservableParents: function() {
                if (this._data && this._shouldDetachObservableParents) {
                    for (var a5 = 0; 
                    a5 < this._data.length; 
                    a5++) {
                        if (this._data[a5].parent) {
                            this._data[a5].parent = am;
                        }
                    }
                }
            },
            _storeData: function(bc) {
                var ba = this._isServerGrouped();
                var a9 = this.reader.model;
                function a8(bd) {
                    var bh = [];
                    for (var bf = 0; 
                    bf < bd.length; 
                    bf++) {
                        var be = bd.at(bf);
                        var bg = be.toJSON();
                        if (ba && be.items) {
                            bg.items = a8(be.items);
                        } else {
                            bg.uid = be.uid;
                            if (a9) {
                                if (be.isNew()) {
                                    bg.__state__ = "create";
                                } else {
                                    if (be.dirty) {
                                        bg.__state__ = "update";
                                    }
                                }
                            }
                        }
                        bh.push(bg);
                    }
                    return bh;
                }
                if (this.options.offlineStorage != null ) {
                    var bb = a8(this._data);
                    var a5 = [];
                    for (var a6 = 0; 
                    a6 < this._destroyed.length; 
                    a6++) {
                        var a7 = this._destroyed[a6].toJSON();
                        a7.__state__ = "destroy";
                        a5.push(a7);
                    }
                    this.offlineData(bb.concat(a5));
                    if (bc) {
                        this._pristineData = bb;
                    }
                }
            },
            _addRange: function(a5) {
                var a8 = this
                  , a7 = a8._skip || 0
                  , a6 = a7 + a8._flatData(a5, true).length;
                a8._ranges.push({
                    start: a7,
                    end: a6,
                    data: a5,
                    timestamp: new Date().getTime()
                });
                a8._ranges.sort(function(a9, ba) {
                    return a9.start - ba.start;
                });
            },
            error: function(a7, a6, a5) {
                this._dequeueRequest();
                this.trigger(aM, {});
                this.trigger(B, {
                    xhr: a7,
                    status: a6,
                    errorThrown: a5
                });
            },
            _params: function(a5) {
                var a7 = this
                  , a6 = D({
                    take: a7.take(),
                    skip: a7.skip(),
                    page: a7.page(),
                    pageSize: a7.pageSize(),
                    sort: a7._sort,
                    filter: a7._filter,
                    group: a7._group,
                    aggregate: a7._aggregate
                }, a5);
                if (!a7.options.serverPaging) {
                    delete a6.take;
                    delete a6.skip;
                    delete a6.page;
                    delete a6.pageSize;
                }
                if (!a7.options.serverGrouping) {
                    delete a6.group;
                } else {
                    if (a7.reader.model && a6.group) {
                        a6.group = m(a6.group, a7.reader.model);
                    }
                }
                if (!a7.options.serverFiltering) {
                    delete a6.filter;
                } else {
                    if (a7.reader.model && a6.filter) {
                        a6.filter = n(a6.filter, a7.reader.model);
                    }
                }
                if (!a7.options.serverSorting) {
                    delete a6.sort;
                } else {
                    if (a7.reader.model && a6.sort) {
                        a6.sort = m(a6.sort, a7.reader.model);
                    }
                }
                if (!a7.options.serverAggregates) {
                    delete a6.aggregate;
                } else {
                    if (a7.reader.model && a6.aggregate) {
                        a6.aggregate = m(a6.aggregate, a7.reader.model);
                    }
                }
                return a6;
            },
            _queueRequest: function(a6, a5) {
                var a7 = this;
                if (!a7._requestInProgress) {
                    a7._requestInProgress = true;
                    a7._pending = a0;
                    a5();
                } else {
                    a7._pending = {
                        callback: aC(a5, a7),
                        options: a6
                    };
                }
            },
            _dequeueRequest: function() {
                var a5 = this;
                a5._requestInProgress = false;
                if (a5._pending) {
                    a5._queueRequest(a5._pending.options, a5._pending.callback);
                }
            },
            _handleCustomErrors: function(a6) {
                if (this.reader.errors) {
                    var a5 = this.reader.errors(a6);
                    if (a5) {
                        this.trigger(B, {
                            xhr: null ,
                            status: "customerror",
                            errorThrown: "custom error",
                            errors: a5
                        });
                        return true;
                    }
                }
                return false;
            },
            _shouldWrap: function(a5) {
                var a6 = this.reader.model;
                if (a6 && a5.length) {
                    return !(a5[0] instanceof a6);
                }
                return false;
            },
            _observe: function(a6) {
                var a8 = this
                  , a7 = a8.reader.model;
                a8._shouldDetachObservableParents = true;
                if (a6 instanceof av) {
                    a8._shouldDetachObservableParents = false;
                    if (a8._shouldWrap(a6)) {
                        a6.type = a8.reader.model;
                        a6.wrapAll(a6, a6);
                    }
                } else {
                    var a5 = a8.pageSize() && !a8.options.serverPaging ? ae : av;
                    a6 = new a5(a6,a8.reader.model);
                    a6.parent = function() {
                        return a8.parent();
                    }
                    ;
                }
                if (a8._isServerGrouped()) {
                    a4(a6, a7);
                }
                if (a8._changeHandler && a8._data && a8._data instanceof av) {
                    a8._data.unbind(h, a8._changeHandler);
                } else {
                    a8._changeHandler = aC(a8._change, a8);
                }
                return a6.bind(h, a8._changeHandler);
            },
            _updateTotalForAction: function(a5, a6) {
                var a7 = this;
                var a8 = parseInt(a7._total, 10);
                if (!aa(a7._total)) {
                    a8 = parseInt(a7._pristineTotal, 10);
                }
                if (a5 === "add") {
                    a8 += a6.length;
                } else {
                    if (a5 === "remove") {
                        a8 -= a6.length;
                    } else {
                        if (a5 !== "itemchange" && a5 !== "sync" && !a7.options.serverPaging) {
                            a8 = a7._pristineTotal;
                        } else {
                            if (a5 === "sync") {
                                a8 = a7._pristineTotal = parseInt(a7._total, 10);
                            }
                        }
                    }
                }
                a7._total = a8;
            },
            _change: function(a6) {
                var ba = this, a8, a9, a5 = a6 ? a6.action : "";
                if (a5 === "remove") {
                    for (a8 = 0,
                    a9 = a6.items.length; 
                    a8 < a9; 
                    a8++) {
                        if (!a6.items[a8].isNew || !a6.items[a8].isNew()) {
                            ba._destroyed.push(a6.items[a8]);
                        }
                    }
                }
                if (ba.options.autoSync && (a5 === "add" || a5 === "remove" || a5 === "itemchange")) {
                    var a7 = function(bb) {
                        if (bb.action === "sync") {
                            ba.unbind("change", a7);
                            ba._updateTotalForAction(a5, a6.items);
                        }
                    }
                    ;
                    ba.first("change", a7);
                    ba.sync();
                } else {
                    ba._updateTotalForAction(a5, a6 ? a6.items : []);
                    ba._process(ba._data, a6);
                }
            },
            _calculateAggregates: function(a6, a8) {
                a8 = a8 || {};
                var a9 = new aE(a6)
                  , a5 = a8.aggregate
                  , a7 = a8.filter;
                if (a7) {
                    a9 = a9.filter(a7);
                }
                return a9.aggregate(a5);
            },
            _process: function(a5, a6) {
                var a9 = this, a7 = {}, a8;
                if (a9.options.serverPaging !== true) {
                    a7.skip = a9._skip;
                    a7.take = a9._take || a9._pageSize;
                    if (a7.skip === a0 && a9._page !== a0 && a9._pageSize !== a0) {
                        a7.skip = (a9._page - 1) * a9._pageSize;
                    }
                }
                if (a9.options.serverSorting !== true) {
                    a7.sort = a9._sort;
                }
                if (a9.options.serverFiltering !== true) {
                    a7.filter = a9._filter;
                }
                if (a9.options.serverGrouping !== true) {
                    a7.group = a9._group;
                }
                if (a9.options.serverAggregates !== true) {
                    a7.aggregate = a9._aggregate;
                    a9._aggregateResult = a9._calculateAggregates(a5, a7);
                }
                a8 = a9._queryProcess(a5, a7);
                a9.view(a8.data);
                if (a8.total !== a0 && !a9.options.serverFiltering) {
                    a9._total = a8.total;
                }
                a6 = a6 || {};
                a6.items = a6.items || a9._view;
                a9.trigger(h, a6);
            },
            _queryProcess: function(a5, a6) {
                return aE.process(a5, a6);
            },
            _mergeState: function(a5) {
                var a6 = this;
                if (a5 !== a0) {
                    a6._pageSize = a5.pageSize;
                    a6._page = a5.page;
                    a6._sort = a5.sort;
                    a6._filter = a5.filter;
                    a6._group = a5.group;
                    a6._aggregate = a5.aggregate;
                    a6._skip = a6._currentRangeStart = a5.skip;
                    a6._take = a5.take;
                    if (a6._skip === a0) {
                        a6._skip = a6._currentRangeStart = a6.skip();
                        a5.skip = a6.skip();
                    }
                    if (a6._take === a0 && a6._pageSize !== a0) {
                        a6._take = a6._pageSize;
                        a5.take = a6._take;
                    }
                    if (a5.sort) {
                        a6._sort = a5.sort = at(a5.sort);
                    }
                    if (a5.filter) {
                        a6._filter = a5.filter = ap(a5.filter);
                    }
                    if (a5.group) {
                        a6._group = a5.group = aq(a5.group);
                    }
                    if (a5.aggregate) {
                        a6._aggregate = a5.aggregate = an(a5.aggregate);
                    }
                }
                return a5;
            },
            query: function(a6) {
                var a8;
                var a7 = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;
                if (a7 || (this._data === a0 || this._data.length === 0) && !this._destroyed.length) {
                    return this.read(this._mergeState(a6));
                }
                var a5 = this.trigger(aN, {
                    type: "read"
                });
                if (!a5) {
                    this.trigger(aB);
                    a8 = this._queryProcess(this._data, this._mergeState(a6));
                    if (!this.options.serverFiltering) {
                        if (a8.total !== a0) {
                            this._total = a8.total;
                        } else {
                            this._total = this._data.length;
                        }
                    }
                    this._aggregateResult = this._calculateAggregates(this._data, a6);
                    this.view(a8.data);
                    this.trigger(aM, {
                        type: "read"
                    });
                    this.trigger(h, {
                        items: a8.data
                    });
                }
                return b.Deferred().resolve(a5).promise();
            },
            fetch: function(a5) {
                var a7 = this;
                var a6 = function(a8) {
                    if (a8 !== true && Z(a5)) {
                        a5.call(a7);
                    }
                }
                ;
                return this._query().then(a6);
            },
            _query: function(a5) {
                var a6 = this;
                return a6.query(D({}, {
                    page: a6.page(),
                    pageSize: a6.pageSize(),
                    sort: a6.sort(),
                    filter: a6.filter(),
                    group: a6.group(),
                    aggregate: a6.aggregate()
                }, a5));
            },
            next: function(a5) {
                var a7 = this
                  , a6 = a7.page()
                  , a8 = a7.total();
                a5 = a5 || {};
                if (!a6 || a8 && a6 + 1 > a7.totalPages()) {
                    return;
                }
                a7._skip = a7._currentRangeStart = a6 * a7.take();
                a6 += 1;
                a5.page = a6;
                a7._query(a5);
                return a6;
            },
            prev: function(a5) {
                var a7 = this
                  , a6 = a7.page();
                a5 = a5 || {};
                if (!a6 || a6 === 1) {
                    return;
                }
                a7._skip = a7._currentRangeStart = a7._skip - a7.take();
                a6 -= 1;
                a5.page = a6;
                a7._query(a5);
                return a6;
            },
            page: function(a7) {
                var a6 = this, a5;
                if (a7 !== a0) {
                    a7 = ah.max(ah.min(ah.max(a7, 1), a6.totalPages()), 1);
                    a6._query({
                        page: a7
                    });
                    return;
                }
                a5 = a6.skip();
                return a5 !== a0 ? ah.round((a5 || 0) / (a6.take() || 1)) + 1 : a0;
            },
            pageSize: function(a6) {
                var a5 = this;
                if (a6 !== a0) {
                    a5._query({
                        pageSize: a6,
                        page: 1
                    });
                    return;
                }
                return a5.take();
            },
            sort: function(a6) {
                var a5 = this;
                if (a6 !== a0) {
                    a5._query({
                        sort: a6
                    });
                    return;
                }
                return a5._sort;
            },
            filter: function(a6) {
                var a5 = this;
                if (a6 === a0) {
                    return a5._filter;
                }
                a5.trigger("reset");
                a5._query({
                    filter: a6,
                    page: 1
                });
            },
            group: function(a6) {
                var a5 = this;
                if (a6 !== a0) {
                    a5._query({
                        group: a6
                    });
                    return;
                }
                return a5._group;
            },
            total: function() {
                return parseInt(this._total || 0, 10);
            },
            aggregate: function(a6) {
                var a5 = this;
                if (a6 !== a0) {
                    a5._query({
                        aggregate: a6
                    });
                    return;
                }
                return a5._aggregate;
            },
            aggregates: function() {
                var a5 = this._aggregateResult;
                if (Y(a5)) {
                    a5 = this._emptyAggregates(this.aggregate());
                }
                return a5;
            },
            _emptyAggregates: function(a6) {
                var a8 = {};
                if (!Y(a6)) {
                    var a5 = {};
                    if (!W(a6)) {
                        a6 = [a6];
                    }
                    for (var a7 = 0; 
                    a7 < a6.length; 
                    a7++) {
                        a5[a6[a7].aggregate] = 0;
                        a8[a6[a7].field] = a5;
                    }
                }
                return a8;
            },
            _wrapInEmptyGroup: function(a9) {
                var a6 = this.group(), ba, a5, a7, a8;
                for (a7 = a6.length - 1,
                a8 = 0; 
                a7 >= a8; 
                a7--) {
                    a5 = a6[a7];
                    ba = {
                        value: a9.get(a5.field),
                        field: a5.field,
                        items: ba ? [ba] : [a9],
                        hasSubgroups: !!ba,
                        aggregates: this._emptyAggregates(a5.aggregates)
                    };
                }
                return ba;
            },
            totalPages: function() {
                var a6 = this
                  , a5 = a6.pageSize() || a6.total();
                return ah.ceil((a6.total() || 0) / a5);
            },
            inRange: function(a6, a7) {
                var a8 = this
                  , a5 = ah.min(a6 + a7, a8.total());
                if (!a8.options.serverPaging && a8._data.length > 0) {
                    return true;
                }
                return a8._findRange(a6, a5).length > 0;
            },
            lastRange: function() {
                var a5 = this._ranges;
                return a5[a5.length - 1] || {
                    start: 0,
                    end: 0,
                    data: []
                };
            },
            firstItemUid: function() {
                var a5 = this._ranges;
                return a5.length && a5[0].data.length && a5[0].data[0].uid;
            },
            enableRequestsInProgress: function() {
                this._skipRequestsInProgress = false;
            },
            _timeStamp: function() {
                return new Date().getTime();
            },
            range: function(bb, bd) {
                this._currentRequestTimeStamp = this._timeStamp();
                this._skipRequestsInProgress = true;
                bb = ah.min(bb || 0, this.total());
                var be = this, a8 = ah.max(ah.floor(bb / bd), 0) * bd, ba = ah.min(a8 + bd, be.total()), a6;
                a6 = be._findRange(bb, ah.min(bb + bd, be.total()));
                if (a6.length) {
                    be._pending = a0;
                    be._skip = bb > be.skip() ? ah.min(ba, (be.totalPages() - 1) * be.take()) : a8;
                    be._currentRangeStart = bb;
                    be._take = bd;
                    var a9 = be.options.serverPaging;
                    var bc = be.options.serverSorting;
                    var a7 = be.options.serverFiltering;
                    var a5 = be.options.serverAggregates;
                    try {
                        be.options.serverPaging = true;
                        if (!be._isServerGrouped() && !(be.group() && be.group().length)) {
                            be.options.serverSorting = true;
                        }
                        be.options.serverFiltering = true;
                        be.options.serverPaging = true;
                        be.options.serverAggregates = true;
                        if (a9) {
                            be._detachObservableParents();
                            be._data = a6 = be._observe(a6);
                        }
                        be._process(a6);
                    } finally {
                        be.options.serverPaging = a9;
                        be.options.serverSorting = bc;
                        be.options.serverFiltering = a7;
                        be.options.serverAggregates = a5;
                    }
                    return;
                }
                if (bd !== a0) {
                    if (!be._rangeExists(a8, ba)) {
                        be.prefetch(a8, bd, function() {
                            if (bb > a8 && ba < be.total() && !be._rangeExists(ba, ah.min(ba + bd, be.total()))) {
                                be.prefetch(ba, bd, function() {
                                    be.range(bb, bd);
                                });
                            } else {
                                be.range(bb, bd);
                            }
                        });
                    } else {
                        if (a8 < bb) {
                            be.prefetch(ba, bd, function() {
                                be.range(bb, bd);
                            });
                        }
                    }
                }
            },
            _findRange: function(bk, a7) {
                var bn = this, bg = bn._ranges, bd, a6 = [], bi, bm, bl, a8, be, bf, bc, bb = bn.options, bh = bb.serverSorting || bb.serverPaging || bb.serverFiltering || bb.serverGrouping || bb.serverAggregates, a9, a5, ba;
                for (bi = 0,
                ba = bg.length; 
                bi < ba; 
                bi++) {
                    bd = bg[bi];
                    if (bk >= bd.start && bk <= bd.end) {
                        a5 = 0;
                        for (bm = bi; 
                        bm < ba; 
                        bm++) {
                            bd = bg[bm];
                            a9 = bn._flatData(bd.data, true);
                            if (a9.length && bk + a5 >= bd.start) {
                                be = bd.data;
                                bf = bd.end;
                                if (!bh) {
                                    var bj = aq(bn.group() || []).concat(at(bn.sort() || []));
                                    bc = bn._queryProcess(bd.data, {
                                        sort: bj,
                                        filter: bn.filter()
                                    });
                                    a9 = be = bc.data;
                                    if (bc.total !== a0) {
                                        bf = bc.total;
                                    }
                                }
                                bl = 0;
                                if (bk + a5 > bd.start) {
                                    bl = bk + a5 - bd.start;
                                }
                                a8 = a9.length;
                                if (bf > a7) {
                                    a8 = a8 - (bf - a7);
                                }
                                a5 += a8 - bl;
                                a6 = bn._mergeGroups(a6, be, bl, a8);
                                if (a7 <= bd.end && a5 == a7 - bk) {
                                    return a6;
                                }
                            }
                        }
                        break;
                    }
                }
                return [];
            },
            _mergeGroups: function(a5, a7, a8, a9) {
                if (this._isServerGrouped()) {
                    var ba = a7.toJSON(), a6;
                    if (a5.length) {
                        a6 = a5[a5.length - 1];
                    }
                    ai(a6, ba, a8, a9);
                    return a5.concat(ba);
                }
                return a5.concat(a7.slice(a8, a9));
            },
            skip: function() {
                var a5 = this;
                if (a5._skip === a0) {
                    return a5._page !== a0 ? (a5._page - 1) * (a5.take() || 1) : a0;
                }
                return a5._skip;
            },
            currentRangeStart: function() {
                return this._currentRangeStart || 0;
            },
            take: function() {
                return this._take || this._pageSize;
            },
            _prefetchSuccessHandler: function(a8, a7, a5, a6) {
                var a9 = this;
                var ba = a9._timeStamp();
                return function(bb) {
                    var bc = false, bf = {
                        start: a8,
                        end: a7,
                        data: [],
                        timestamp: a9._timeStamp()
                    }, bd, be, bg;
                    a9._dequeueRequest();
                    a9.trigger(aM, {
                        response: bb,
                        type: "read"
                    });
                    bb = a9.reader.parse(bb);
                    bg = a9._readData(bb);
                    if (bg.length) {
                        for (bd = 0,
                        be = a9._ranges.length; 
                        bd < be; 
                        bd++) {
                            if (a9._ranges[bd].start === a8) {
                                bc = true;
                                bf = a9._ranges[bd];
                                break;
                            }
                        }
                        if (!bc) {
                            a9._ranges.push(bf);
                        }
                    }
                    bf.data = a9._observe(bg);
                    bf.end = bf.start + a9._flatData(bf.data, true).length;
                    a9._ranges.sort(function(bh, bi) {
                        return bh.start - bi.start;
                    });
                    a9._total = a9.reader.total(bb);
                    if (a6 || (ba >= a9._currentRequestTimeStamp || !a9._skipRequestsInProgress)) {
                        if (a5 && bg.length) {
                            a5();
                        } else {
                            a9.trigger(h, {});
                        }
                    }
                }
                ;
            },
            prefetch: function(a8, a9, a5) {
                var ba = this
                  , a7 = ah.min(a8 + a9, ba.total())
                  , a6 = {
                    take: a9,
                    skip: a8,
                    page: a8 / a9 + 1,
                    pageSize: a9,
                    sort: ba._sort,
                    filter: ba._filter,
                    group: ba._group,
                    aggregate: ba._aggregate
                };
                if (!ba._rangeExists(a8, a7)) {
                    clearTimeout(ba._timeout);
                    ba._timeout = setTimeout(function() {
                        ba._queueRequest(a6, function() {
                            if (!ba.trigger(aN, {
                                type: "read"
                            })) {
                                ba.transport.read({
                                    data: ba._params(a6),
                                    success: ba._prefetchSuccessHandler(a8, a7, a5),
                                    error: function() {
                                        var bb = aQ.call(arguments);
                                        ba.error.apply(ba, bb);
                                    }
                                });
                            } else {
                                ba._dequeueRequest();
                            }
                        });
                    }, 100);
                } else {
                    if (a5) {
                        a5();
                    }
                }
            },
            _multiplePrefetch: function(a8, a9, a5) {
                var ba = this
                  , a7 = ah.min(a8 + a9, ba.total())
                  , a6 = {
                    take: a9,
                    skip: a8,
                    page: a8 / a9 + 1,
                    pageSize: a9,
                    sort: ba._sort,
                    filter: ba._filter,
                    group: ba._group,
                    aggregate: ba._aggregate
                };
                if (!ba._rangeExists(a8, a7)) {
                    if (!ba.trigger(aN, {
                        type: "read"
                    })) {
                        ba.transport.read({
                            data: ba._params(a6),
                            success: ba._prefetchSuccessHandler(a8, a7, a5, true)
                        });
                    }
                } else {
                    if (a5) {
                        a5();
                    }
                }
            },
            _rangeExists: function(a9, a5) {
                var ba = this, a8 = ba._ranges, a6, a7;
                for (a6 = 0,
                a7 = a8.length; 
                a6 < a7; 
                a6++) {
                    if (a8[a6].start <= a9 && a8[a6].end >= a5) {
                        return true;
                    }
                }
                return false;
            },
            _removeModelFromRanges: function(a8) {
                var ba, a5, a9;
                for (var a6 = 0, a7 = this._ranges.length; 
                a6 < a7; 
                a6++) {
                    a9 = this._ranges[a6];
                    this._eachItem(a9.data, function(bb) {
                        ba = aI(bb, a8);
                        if (ba) {
                            a5 = true;
                        }
                    });
                    if (a5) {
                        break;
                    }
                }
            },
            _updateRangesLength: function() {
                var a9 = 0, a7, a8;
                for (var a5 = 0, a6 = this._ranges.length; 
                a5 < a6; 
                a5++) {
                    a7 = this._ranges[a5];
                    a7.start = a7.start - a9;
                    a8 = this._flatData(a7.data, true).length;
                    a9 = a7.end - a8;
                    a7.end = a7.start + a8;
                }
            }
        });
        var aZ = {};
        aZ.create = function(a7, a5, a6) {
            var a8, a9 = a7.transport ? b.extend({}, a7.transport) : null ;
            if (a9) {
                a9.read = typeof a9.read === aU ? {
                    url: a9.read
                } : a9.read;
                if (a7.type === "jsdo") {
                    a9.dataSource = a6;
                }
                if (a7.type) {
                    ad.data.transports = ad.data.transports || {};
                    ad.data.schemas = ad.data.schemas || {};
                    if (ad.data.transports[a7.type] && !ab(ad.data.transports[a7.type])) {
                        a8 = new ad.data.transports[a7.type](D(a9, {
                            data: a5
                        }));
                    } else {
                        a9 = D(true, {}, ad.data.transports[a7.type], a9);
                    }
                    a7.schema = D(true, {}, ad.data.schemas[a7.type], a7.schema);
                }
                if (!a8) {
                    a8 = Z(a9.read) ? a9 : new aH(a9);
                }
            } else {
                a8 = new af({
                    data: a7.data || []
                });
            }
            return a8;
        }
        ;
        u.create = function(bc) {
            if (W(bc) || bc instanceof av) {
                bc = {
                    data: bc
                };
            }
            var a6 = bc || {}, a5 = a6.data, a8 = a6.fields, be = a6.table, bd = a6.select, a9, ba, bb = {}, a7;
            if (!a5 && a8 && !a6.transport) {
                if (be) {
                    a5 = V(be, a8);
                } else {
                    if (bd) {
                        a5 = U(bd, a8);
                        if (a6.group === a0 && a5[0] && a5[0].optgroup !== a0) {
                            a6.group = "optgroup";
                        }
                    }
                }
            }
            if (ad.data.Model && a8 && (!a6.schema || !a6.schema.model)) {
                for (a9 = 0,
                ba = a8.length; 
                a9 < ba; 
                a9++) {
                    a7 = a8[a9];
                    if (a7.type) {
                        bb[a7.field] = a7;
                    }
                }
                if (!Y(bb)) {
                    a6.schema = D(true, a6.schema, {
                        model: {
                            fields: bb
                        }
                    });
                }
            }
            a6.data = a5;
            bd = null ;
            a6.select = null ;
            be = null ;
            a6.table = null ;
            return a6 instanceof u ? a6 : new u(a6);
        }
        ;
        function U(bf, a6) {
            bf = b(bf)[0];
            var bc = bf.options;
            var a7 = a6[0];
            var be = a6[1];
            var a5 = [];
            var a8, a9;
            var ba;
            var bb;
            var bd;
            var bg;
            for (a8 = 0,
            a9 = bc.length; 
            a8 < a9; 
            a8++) {
                bd = {};
                bb = bc[a8];
                ba = bb.parentNode;
                if (ba === bf) {
                    ba = null ;
                }
                if (bb.disabled || ba && ba.disabled) {
                    continue;
                }
                if (ba) {
                    bd.optgroup = ba.label;
                }
                bd[a7.field] = bb.text;
                bg = bb.attributes.value;
                if (bg && bg.specified) {
                    bg = bb.value;
                } else {
                    bg = bb.text;
                }
                bd[be.field] = bg;
                a5.push(bd);
            }
            return a5;
        }
        function V(bg, bb) {
            var bh = b(bg)[0].tBodies[0], bf = bh ? bh.rows : [], bc, bd, ba, a9 = bb.length, a7 = [], a6, be, a5, a8;
            for (bc = 0,
            bd = bf.length; 
            bc < bd; 
            bc++) {
                be = {};
                a8 = true;
                a6 = bf[bc].cells;
                for (ba = 0; 
                ba < a9; 
                ba++) {
                    a5 = a6[ba];
                    if (a5.nodeName.toLowerCase() !== "th") {
                        a8 = false;
                        be[bb[ba].field] = a5.innerHTML;
                    }
                }
                if (!a8) {
                    a7.push(be);
                }
            }
            return a7;
        }
        var al = aj.define({
            idField: "id",
            init: function(a9) {
                var a8 = this
                  , a7 = a8.hasChildren || a9 && a9.hasChildren
                  , a5 = "items"
                  , a6 = {};
                ad.data.Model.fn.init.call(a8, a9);
                if (typeof a8.children === aU) {
                    a5 = a8.children;
                }
                a6 = {
                    schema: {
                        data: a5,
                        model: {
                            hasChildren: a7,
                            id: a8.idField,
                            fields: a8.fields
                        }
                    }
                };
                if (typeof a8.children !== aU) {
                    D(a6, a8.children);
                }
                a6.data = a9;
                if (!a7) {
                    a7 = a6.schema.data;
                }
                if (typeof a7 === aU) {
                    a7 = ad.getter(a7);
                }
                if (Z(a7)) {
                    a8.hasChildren = !!a7.call(a8, a8);
                }
                a8._childrenOptions = a6;
                if (a8.hasChildren) {
                    a8._initChildren();
                }
                a8._loaded = !!(a9 && a9._loaded);
            },
            _initChildren: function() {
                var a7 = this;
                var a5, a8, a6;
                if (!(a7.children instanceof O)) {
                    a5 = a7.children = new O(a7._childrenOptions);
                    a8 = a5.transport;
                    a6 = a8.parameterMap;
                    a8.parameterMap = function(a9, ba) {
                        a9[a7.idField || "id"] = a7.id;
                        if (a6) {
                            a9 = a6(a9, ba);
                        }
                        return a9;
                    }
                    ;
                    a5.parent = function() {
                        return a7;
                    }
                    ;
                    a5.bind(h, function(a9) {
                        a9.node = a9.node || a7;
                        a7.trigger(h, a9);
                    });
                    a5.bind(B, function(ba) {
                        var a9 = a7.parent();
                        if (a9) {
                            ba.node = ba.node || a7;
                            a9.trigger(B, ba);
                        }
                    });
                    a7._updateChildrenField();
                }
            },
            append: function(a5) {
                this._initChildren();
                this.loaded(true);
                this.children.add(a5);
            },
            hasChildren: false,
            level: function() {
                var a6 = this.parentNode()
                  , a5 = 0;
                while (a6 && a6.parentNode) {
                    a5++;
                    a6 = a6.parentNode ? a6.parentNode() : null ;
                }
                return a5;
            },
            _updateChildrenField: function() {
                var a5 = this._childrenOptions.schema.data;
                this[a5 || "items"] = this.children.data();
            },
            _childrenLoaded: function() {
                this._loaded = true;
                this._updateChildrenField();
            },
            load: function() {
                var a7 = {};
                var a6 = "_query";
                var a5, a8;
                if (this.hasChildren) {
                    this._initChildren();
                    a5 = this.children;
                    a7[this.idField || "id"] = this.id;
                    if (!this._loaded) {
                        a5._data = a0;
                        a6 = "read";
                    }
                    a5.one(h, aC(this._childrenLoaded, this));
                    a8 = a5[a6](a7);
                } else {
                    this.loaded(true);
                }
                return a8 || b.Deferred().resolve().promise();
            },
            parentNode: function() {
                var a5 = this.parent();
                return a5.parent();
            },
            loaded: function(a5) {
                if (a5 !== a0) {
                    this._loaded = a5;
                } else {
                    return this._loaded;
                }
            },
            shouldSerialize: function(a5) {
                return aj.fn.shouldSerialize.call(this, a5) && a5 !== "children" && a5 !== "_loaded" && a5 !== "hasChildren" && a5 !== "_childrenOptions";
            }
        });
        function s(a5) {
            return function() {
                var a6 = this._data
                  , a7 = u.fn[a5].apply(this, aQ.call(arguments));
                if (this._data != a6) {
                    this._attachBubbleHandlers();
                }
                return a7;
            }
            ;
        }
        var O = u.extend({
            init: function(a6) {
                var a5 = al.define({
                    children: a6
                });
                u.fn.init.call(this, D(true, {}, {
                    schema: {
                        modelBase: a5,
                        model: a5
                    }
                }, a6));
                this._attachBubbleHandlers();
            },
            _attachBubbleHandlers: function() {
                var a5 = this;
                a5._data.bind(B, function(a6) {
                    a5.trigger(B, a6);
                });
            },
            remove: function(a6) {
                var a7 = a6.parentNode(), a5 = this, a8;
                if (a7 && a7._initChildren) {
                    a5 = a7.children;
                }
                a8 = u.fn.remove.call(a5, a6);
                if (a7 && !a5.data().length) {
                    a7.hasChildren = false;
                }
                return a8;
            },
            success: s("success"),
            data: s("data"),
            insert: function(a5, a6) {
                var a7 = this.parent();
                if (a7 && a7._initChildren) {
                    a7.hasChildren = true;
                    a7._initChildren();
                }
                return u.fn.insert.call(this, a5, a6);
            },
            _find: function(a9, bb) {
                var a7, a8, ba, a5;
                var a6 = this._data;
                if (!a6) {
                    return;
                }
                ba = u.fn[a9].call(this, bb);
                if (ba) {
                    return ba;
                }
                a6 = this._flatData(this._data);
                for (a7 = 0,
                a8 = a6.length; 
                a7 < a8; 
                a7++) {
                    a5 = a6[a7].children;
                    if (!(a5 instanceof O)) {
                        continue;
                    }
                    ba = a5[a9](bb);
                    if (ba) {
                        return ba;
                    }
                }
            },
            get: function(a5) {
                return this._find("get", a5);
            },
            getByUid: function(a5) {
                return this._find("getByUid", a5);
            }
        });
        function T(bg, a9) {
            var be = b(bg).children(), bb, bf, a7 = [], bh, bk = a9[0].field, bl = a9[1] && a9[1].field, bi = a9[2] && a9[2].field, bc = a9[3] && a9[3].field, bd, ba, bj, a6, a5;
            function a8(bm, bn) {
                return bm.filter(bn).add(bm.find(bn));
            }
            for (bb = 0,
            bf = be.length; 
            bb < bf; 
            bb++) {
                bh = {
                    _loaded: true
                };
                bd = be.eq(bb);
                bj = bd[0].firstChild;
                a5 = bd.children();
                bg = a5.filter("ul");
                a5 = a5.filter(":not(ul)");
                ba = bd.attr("data-id");
                if (ba) {
                    bh.id = ba;
                }
                if (bj) {
                    bh[bk] = bj.nodeType == 3 ? bj.nodeValue : a5.text();
                }
                if (bl) {
                    bh[bl] = a8(a5, "a").attr("href");
                }
                if (bc) {
                    bh[bc] = a8(a5, "img").attr("src");
                }
                if (bi) {
                    a6 = a8(a5, ".k-sprite").prop("className");
                    bh[bi] = a6 && b.trim(a6.replace("k-sprite", ""));
                }
                if (bg.length) {
                    bh.items = T(bg.eq(0), a9);
                }
                if (bd.attr("data-hasChildren") == "true") {
                    bh.hasChildren = true;
                }
                a7.push(bh);
            }
            return a7;
        }
        O.create = function(a9) {
            a9 = a9 && a9.push ? {
                data: a9
            } : a9;
            var a6 = a9 || {}
              , a5 = a6.data
              , a7 = a6.fields
              , a8 = a6.list;
            if (a5 && a5._dataSource) {
                return a5._dataSource;
            }
            if (!a5 && a7 && !a6.transport) {
                if (a8) {
                    a5 = T(a8, a7);
                }
            }
            a6.data = a5;
            return a6 instanceof O ? a6 : new O(a6);
        }
        ;
        var e = ad.Observable.extend({
            init: function(a6, a8, a7) {
                ad.Observable.fn.init.call(this);
                this._prefetching = false;
                this.dataSource = a6;
                this.prefetch = !a7;
                var a5 = this;
                a6.bind("change", function() {
                    a5._change();
                });
                a6.bind("reset", function() {
                    a5._reset();
                });
                this._syncWithDataSource();
                this.setViewSize(a8);
            },
            setViewSize: function(a5) {
                this.viewSize = a5;
                this._recalculate();
            },
            at: function(a5) {
                var a7 = this.pageSize
                  , a6 = true;
                if (a5 >= this.total()) {
                    this.trigger("endreached", {
                        index: a5
                    });
                    return null ;
                }
                if (!this.useRanges) {
                    return this.dataSource.view()[a5];
                }
                if (this.useRanges) {
                    if (a5 < this.dataOffset || a5 >= this.skip + a7) {
                        a6 = this.range(Math.floor(a5 / a7) * a7);
                    }
                    if (a5 === this.prefetchThreshold) {
                        this._prefetch();
                    }
                    if (a5 === this.midPageThreshold) {
                        this.range(this.nextMidRange, true);
                    } else {
                        if (a5 === this.nextPageThreshold) {
                            this.range(this.nextFullRange);
                        } else {
                            if (a5 === this.pullBackThreshold) {
                                if (this.offset === this.skip) {
                                    this.range(this.previousMidRange);
                                } else {
                                    this.range(this.previousFullRange);
                                }
                            }
                        }
                    }
                    if (a6) {
                        return this.dataSource.at(a5 - this.dataOffset);
                    } else {
                        this.trigger("endreached", {
                            index: a5
                        });
                        return null ;
                    }
                }
            },
            indexOf: function(a5) {
                return this.dataSource.data().indexOf(a5) + this.dataOffset;
            },
            total: function() {
                return parseInt(this.dataSource.total(), 10);
            },
            next: function() {
                var a5 = this
                  , a7 = a5.pageSize
                  , a6 = a5.skip - a5.viewSize + a7
                  , a8 = ah.max(ah.floor(a6 / a7), 0) * a7;
                this.offset = a6;
                this.dataSource.prefetch(a8, a7, function() {
                    a5._goToRange(a6, true);
                });
            },
            range: function(a8, a7) {
                if (this.offset === a8) {
                    return true;
                }
                var a5 = this
                  , a9 = this.pageSize
                  , ba = ah.max(ah.floor(a8 / a9), 0) * a9
                  , a6 = this.dataSource;
                if (a7) {
                    ba += a9;
                }
                if (a6.inRange(a8, a9)) {
                    this.offset = a8;
                    this._recalculate();
                    this._goToRange(a8);
                    return true;
                } else {
                    if (this.prefetch) {
                        a6.prefetch(ba, a9, function() {
                            a5.offset = a8;
                            a5._recalculate();
                            a5._goToRange(a8, true);
                        });
                        return false;
                    }
                }
                return true;
            },
            syncDataSource: function() {
                var a5 = this.offset;
                this.offset = null ;
                this.range(a5);
            },
            destroy: function() {
                this.unbind();
            },
            _prefetch: function() {
                var a5 = this
                  , a7 = this.pageSize
                  , a8 = this.skip + a7
                  , a6 = this.dataSource;
                if (!a6.inRange(a8, a7) && !this._prefetching && this.prefetch) {
                    this._prefetching = true;
                    this.trigger("prefetching", {
                        skip: a8,
                        take: a7
                    });
                    a6.prefetch(a8, a7, function() {
                        a5._prefetching = false;
                        a5.trigger("prefetched", {
                            skip: a8,
                            take: a7
                        });
                    });
                }
            },
            _goToRange: function(a6, a5) {
                if (this.offset !== a6) {
                    return;
                }
                this.dataOffset = a6;
                this._expanding = a5;
                this.dataSource.range(a6, this.pageSize);
                this.dataSource.enableRequestsInProgress();
            },
            _reset: function() {
                this._syncPending = true;
            },
            _change: function() {
                var a5 = this.dataSource;
                this.length = this.useRanges ? a5.lastRange().end : a5.view().length;
                if (this._syncPending) {
                    this._syncWithDataSource();
                    this._recalculate();
                    this._syncPending = false;
                    this.trigger("reset", {
                        offset: this.offset
                    });
                }
                this.trigger("resize");
                if (this._expanding) {
                    this.trigger("expand");
                }
                delete this._expanding;
            },
            _syncWithDataSource: function() {
                var a5 = this.dataSource;
                this._firstItemUid = a5.firstItemUid();
                this.dataOffset = this.offset = a5.skip() || 0;
                this.pageSize = a5.pageSize();
                this.useRanges = a5.options.serverPaging;
            },
            _recalculate: function() {
                var a6 = this.pageSize
                  , a5 = this.offset
                  , a8 = this.viewSize
                  , a7 = Math.ceil(a5 / a6) * a6;
                this.skip = a7;
                this.midPageThreshold = a7 + a6 - 1;
                this.nextPageThreshold = a7 + a8 - 1;
                this.prefetchThreshold = a7 + Math.floor(a6 / 3 * 2);
                this.pullBackThreshold = this.offset - 1;
                this.nextMidRange = a7 + a6 - a8;
                this.nextFullRange = a7;
                this.previousMidRange = a5 - a8;
                this.previousFullRange = a7 - a6;
            }
        });
        var d = ad.Observable.extend({
            init: function(a7, a6) {
                var a5 = this;
                ad.Observable.fn.init.call(a5);
                this.dataSource = a7;
                this.batchSize = a6;
                this._total = 0;
                this.buffer = new e(a7,a6 * 3);
                this.buffer.bind({
                    endreached: function(a8) {
                        a5.trigger("endreached", {
                            index: a8.index
                        });
                    },
                    prefetching: function(a8) {
                        a5.trigger("prefetching", {
                            skip: a8.skip,
                            take: a8.take
                        });
                    },
                    prefetched: function(a8) {
                        a5.trigger("prefetched", {
                            skip: a8.skip,
                            take: a8.take
                        });
                    },
                    reset: function() {
                        a5._total = 0;
                        a5.trigger("reset");
                    },
                    resize: function() {
                        a5._total = Math.ceil(this.length / a5.batchSize);
                        a5.trigger("resize", {
                            total: a5.total(),
                            offset: this.offset
                        });
                    }
                });
            },
            syncDataSource: function() {
                this.buffer.syncDataSource();
            },
            at: function(a7) {
                var a5 = this.buffer, a9 = a7 * this.batchSize, ba = this.batchSize, bb = [], a8;
                if (a5.offset > a9) {
                    a5.at(a5.offset - 1);
                }
                for (var a6 = 0; 
                a6 < ba; 
                a6++) {
                    a8 = a5.at(a9 + a6);
                    if (a8 === null ) {
                        break;
                    }
                    bb.push(a8);
                }
                return bb;
            },
            total: function() {
                return this._total;
            },
            destroy: function() {
                this.buffer.destroy();
                this.unbind();
            }
        });
        D(true, ad.data, {
            readers: {
                json: t
            },
            Query: aE,
            DataSource: u,
            HierarchicalDataSource: O,
            Node: al,
            ObservableObject: aw,
            ObservableArray: av,
            LazyObservableArray: ae,
            LocalTransport: af,
            RemoteTransport: aH,
            Cache: f,
            DataReader: t,
            Model: aj,
            Buffer: e,
            BatchBuffer: d
        });
    }(window.kendo.jQuery));
    return window.kendo;
}, typeof define == "function" && define.amd ? define : function(a, b, c) {
    (c || b)();
}
));


